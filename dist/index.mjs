var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// node_modules/long/src/long.js
var require_long = __commonJS({
  "node_modules/long/src/long.js"(exports2, module2) {
    module2.exports = Long2;
    var wasm = null;
    try {
      wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
        0,
        97,
        115,
        109,
        1,
        0,
        0,
        0,
        1,
        13,
        2,
        96,
        0,
        1,
        127,
        96,
        4,
        127,
        127,
        127,
        127,
        1,
        127,
        3,
        7,
        6,
        0,
        1,
        1,
        1,
        1,
        1,
        6,
        6,
        1,
        127,
        1,
        65,
        0,
        11,
        7,
        50,
        6,
        3,
        109,
        117,
        108,
        0,
        1,
        5,
        100,
        105,
        118,
        95,
        115,
        0,
        2,
        5,
        100,
        105,
        118,
        95,
        117,
        0,
        3,
        5,
        114,
        101,
        109,
        95,
        115,
        0,
        4,
        5,
        114,
        101,
        109,
        95,
        117,
        0,
        5,
        8,
        103,
        101,
        116,
        95,
        104,
        105,
        103,
        104,
        0,
        0,
        10,
        191,
        1,
        6,
        4,
        0,
        35,
        0,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        126,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        127,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        128,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        129,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        130,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11
      ])), {}).exports;
    } catch (e) {
    }
    function Long2(low, high, unsigned) {
      this.low = low | 0;
      this.high = high | 0;
      this.unsigned = !!unsigned;
    }
    Long2.prototype.__isLong__;
    Object.defineProperty(Long2.prototype, "__isLong__", { value: true });
    function isLong(obj) {
      return (obj && obj["__isLong__"]) === true;
    }
    Long2.isLong = isLong;
    var INT_CACHE = {};
    var UINT_CACHE = {};
    function fromInt(value, unsigned) {
      var obj, cachedObj, cache;
      if (unsigned) {
        value >>>= 0;
        if (cache = 0 <= value && value < 256) {
          cachedObj = UINT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
        if (cache)
          UINT_CACHE[value] = obj;
        return obj;
      } else {
        value |= 0;
        if (cache = -128 <= value && value < 128) {
          cachedObj = INT_CACHE[value];
          if (cachedObj)
            return cachedObj;
        }
        obj = fromBits(value, value < 0 ? -1 : 0, false);
        if (cache)
          INT_CACHE[value] = obj;
        return obj;
      }
    }
    Long2.fromInt = fromInt;
    function fromNumber(value, unsigned) {
      if (isNaN(value))
        return unsigned ? UZERO : ZERO;
      if (unsigned) {
        if (value < 0)
          return UZERO;
        if (value >= TWO_PWR_64_DBL)
          return MAX_UNSIGNED_VALUE;
      } else {
        if (value <= -TWO_PWR_63_DBL)
          return MIN_VALUE;
        if (value + 1 >= TWO_PWR_63_DBL)
          return MAX_VALUE;
      }
      if (value < 0)
        return fromNumber(-value, unsigned).neg();
      return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);
    }
    Long2.fromNumber = fromNumber;
    function fromBits(lowBits, highBits, unsigned) {
      return new Long2(lowBits, highBits, unsigned);
    }
    Long2.fromBits = fromBits;
    var pow_dbl = Math.pow;
    function fromString(str, unsigned, radix) {
      if (str.length === 0)
        throw Error("empty string");
      if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity")
        return ZERO;
      if (typeof unsigned === "number") {
        radix = unsigned, unsigned = false;
      } else {
        unsigned = !!unsigned;
      }
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError("radix");
      var p;
      if ((p = str.indexOf("-")) > 0)
        throw Error("interior hyphen");
      else if (p === 0) {
        return fromString(str.substring(1), unsigned, radix).neg();
      }
      var radixToPower = fromNumber(pow_dbl(radix, 8));
      var result = ZERO;
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = fromNumber(pow_dbl(radix, size));
          result = result.mul(power).add(fromNumber(value));
        } else {
          result = result.mul(radixToPower);
          result = result.add(fromNumber(value));
        }
      }
      result.unsigned = unsigned;
      return result;
    }
    Long2.fromString = fromString;
    function fromValue(val, unsigned) {
      if (typeof val === "number")
        return fromNumber(val, unsigned);
      if (typeof val === "string")
        return fromString(val, unsigned);
      return fromBits(val.low, val.high, typeof unsigned === "boolean" ? unsigned : val.unsigned);
    }
    Long2.fromValue = fromValue;
    var TWO_PWR_16_DBL = 1 << 16;
    var TWO_PWR_24_DBL = 1 << 24;
    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;
    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;
    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;
    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);
    var ZERO = fromInt(0);
    Long2.ZERO = ZERO;
    var UZERO = fromInt(0, true);
    Long2.UZERO = UZERO;
    var ONE = fromInt(1);
    Long2.ONE = ONE;
    var UONE = fromInt(1, true);
    Long2.UONE = UONE;
    var NEG_ONE = fromInt(-1);
    Long2.NEG_ONE = NEG_ONE;
    var MAX_VALUE = fromBits(4294967295 | 0, 2147483647 | 0, false);
    Long2.MAX_VALUE = MAX_VALUE;
    var MAX_UNSIGNED_VALUE = fromBits(4294967295 | 0, 4294967295 | 0, true);
    Long2.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;
    var MIN_VALUE = fromBits(0, 2147483648 | 0, false);
    Long2.MIN_VALUE = MIN_VALUE;
    var LongPrototype = Long2.prototype;
    LongPrototype.toInt = function toInt() {
      return this.unsigned ? this.low >>> 0 : this.low;
    };
    LongPrototype.toNumber = function toNumber() {
      if (this.unsigned)
        return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);
      return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };
    LongPrototype.toString = function toString(radix) {
      radix = radix || 10;
      if (radix < 2 || 36 < radix)
        throw RangeError("radix");
      if (this.isZero())
        return "0";
      if (this.isNegative()) {
        if (this.eq(MIN_VALUE)) {
          var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);
          return div.toString(radix) + rem1.toInt().toString(radix);
        } else
          return "-" + this.neg().toString(radix);
      }
      var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;
      var result = "";
      while (true) {
        var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);
        rem = remDiv;
        if (rem.isZero())
          return digits + result;
        else {
          while (digits.length < 6)
            digits = "0" + digits;
          result = "" + digits + result;
        }
      }
    };
    LongPrototype.getHighBits = function getHighBits() {
      return this.high;
    };
    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
      return this.high >>> 0;
    };
    LongPrototype.getLowBits = function getLowBits() {
      return this.low;
    };
    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
      return this.low >>> 0;
    };
    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
      if (this.isNegative())
        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
      var val = this.high != 0 ? this.high : this.low;
      for (var bit = 31; bit > 0; bit--)
        if ((val & 1 << bit) != 0)
          break;
      return this.high != 0 ? bit + 33 : bit + 1;
    };
    LongPrototype.isZero = function isZero() {
      return this.high === 0 && this.low === 0;
    };
    LongPrototype.eqz = LongPrototype.isZero;
    LongPrototype.isNegative = function isNegative() {
      return !this.unsigned && this.high < 0;
    };
    LongPrototype.isPositive = function isPositive() {
      return this.unsigned || this.high >= 0;
    };
    LongPrototype.isOdd = function isOdd() {
      return (this.low & 1) === 1;
    };
    LongPrototype.isEven = function isEven() {
      return (this.low & 1) === 0;
    };
    LongPrototype.equals = function equals(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)
        return false;
      return this.high === other.high && this.low === other.low;
    };
    LongPrototype.eq = LongPrototype.equals;
    LongPrototype.notEquals = function notEquals(other) {
      return !this.eq(other);
    };
    LongPrototype.neq = LongPrototype.notEquals;
    LongPrototype.ne = LongPrototype.notEquals;
    LongPrototype.lessThan = function lessThan(other) {
      return this.comp(other) < 0;
    };
    LongPrototype.lt = LongPrototype.lessThan;
    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
      return this.comp(other) <= 0;
    };
    LongPrototype.lte = LongPrototype.lessThanOrEqual;
    LongPrototype.le = LongPrototype.lessThanOrEqual;
    LongPrototype.greaterThan = function greaterThan(other) {
      return this.comp(other) > 0;
    };
    LongPrototype.gt = LongPrototype.greaterThan;
    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
      return this.comp(other) >= 0;
    };
    LongPrototype.gte = LongPrototype.greaterThanOrEqual;
    LongPrototype.ge = LongPrototype.greaterThanOrEqual;
    LongPrototype.compare = function compare(other) {
      if (!isLong(other))
        other = fromValue(other);
      if (this.eq(other))
        return 0;
      var thisNeg = this.isNegative(), otherNeg = other.isNegative();
      if (thisNeg && !otherNeg)
        return -1;
      if (!thisNeg && otherNeg)
        return 1;
      if (!this.unsigned)
        return this.sub(other).isNegative() ? -1 : 1;
      return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;
    };
    LongPrototype.comp = LongPrototype.compare;
    LongPrototype.negate = function negate() {
      if (!this.unsigned && this.eq(MIN_VALUE))
        return MIN_VALUE;
      return this.not().add(ONE);
    };
    LongPrototype.neg = LongPrototype.negate;
    LongPrototype.add = function add2(addend) {
      if (!isLong(addend))
        addend = fromValue(addend);
      var a48 = this.high >>> 16;
      var a32 = this.high & 65535;
      var a16 = this.low >>> 16;
      var a00 = this.low & 65535;
      var b48 = addend.high >>> 16;
      var b32 = addend.high & 65535;
      var b16 = addend.low >>> 16;
      var b00 = addend.low & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    LongPrototype.subtract = function subtract(subtrahend) {
      if (!isLong(subtrahend))
        subtrahend = fromValue(subtrahend);
      return this.add(subtrahend.neg());
    };
    LongPrototype.sub = LongPrototype.subtract;
    LongPrototype.multiply = function multiply2(multiplier) {
      if (this.isZero())
        return ZERO;
      if (!isLong(multiplier))
        multiplier = fromValue(multiplier);
      if (wasm) {
        var low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      if (multiplier.isZero())
        return ZERO;
      if (this.eq(MIN_VALUE))
        return multiplier.isOdd() ? MIN_VALUE : ZERO;
      if (multiplier.eq(MIN_VALUE))
        return this.isOdd() ? MIN_VALUE : ZERO;
      if (this.isNegative()) {
        if (multiplier.isNegative())
          return this.neg().mul(multiplier.neg());
        else
          return this.neg().mul(multiplier).neg();
      } else if (multiplier.isNegative())
        return this.mul(multiplier.neg()).neg();
      if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))
        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);
      var a48 = this.high >>> 16;
      var a32 = this.high & 65535;
      var a16 = this.low >>> 16;
      var a00 = this.low & 65535;
      var b48 = multiplier.high >>> 16;
      var b32 = multiplier.high & 65535;
      var b16 = multiplier.low >>> 16;
      var b00 = multiplier.low & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    LongPrototype.mul = LongPrototype.multiply;
    LongPrototype.divide = function divide(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);
      if (divisor.isZero())
        throw Error("division by zero");
      if (wasm) {
        if (!this.unsigned && this.high === -2147483648 && divisor.low === -1 && divisor.high === -1) {
          return this;
        }
        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      if (this.isZero())
        return this.unsigned ? UZERO : ZERO;
      var approx, rem, res;
      if (!this.unsigned) {
        if (this.eq(MIN_VALUE)) {
          if (divisor.eq(ONE) || divisor.eq(NEG_ONE))
            return MIN_VALUE;
          else if (divisor.eq(MIN_VALUE))
            return ONE;
          else {
            var halfThis = this.shr(1);
            approx = halfThis.div(divisor).shl(1);
            if (approx.eq(ZERO)) {
              return divisor.isNegative() ? ONE : NEG_ONE;
            } else {
              rem = this.sub(divisor.mul(approx));
              res = approx.add(rem.div(divisor));
              return res;
            }
          }
        } else if (divisor.eq(MIN_VALUE))
          return this.unsigned ? UZERO : ZERO;
        if (this.isNegative()) {
          if (divisor.isNegative())
            return this.neg().div(divisor.neg());
          return this.neg().div(divisor).neg();
        } else if (divisor.isNegative())
          return this.div(divisor.neg()).neg();
        res = ZERO;
      } else {
        if (!divisor.unsigned)
          divisor = divisor.toUnsigned();
        if (divisor.gt(this))
          return UZERO;
        if (divisor.gt(this.shru(1)))
          return UONE;
        res = UZERO;
      }
      rem = this;
      while (rem.gte(divisor)) {
        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48), approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);
        while (approxRem.isNegative() || approxRem.gt(rem)) {
          approx -= delta;
          approxRes = fromNumber(approx, this.unsigned);
          approxRem = approxRes.mul(divisor);
        }
        if (approxRes.isZero())
          approxRes = ONE;
        res = res.add(approxRes);
        rem = rem.sub(approxRem);
      }
      return res;
    };
    LongPrototype.div = LongPrototype.divide;
    LongPrototype.modulo = function modulo(divisor) {
      if (!isLong(divisor))
        divisor = fromValue(divisor);
      if (wasm) {
        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);
        return fromBits(low, wasm.get_high(), this.unsigned);
      }
      return this.sub(this.div(divisor).mul(divisor));
    };
    LongPrototype.mod = LongPrototype.modulo;
    LongPrototype.rem = LongPrototype.modulo;
    LongPrototype.not = function not() {
      return fromBits(~this.low, ~this.high, this.unsigned);
    };
    LongPrototype.and = function and(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };
    LongPrototype.or = function or(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };
    LongPrototype.xor = function xor(other) {
      if (!isLong(other))
        other = fromValue(other);
      return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };
    LongPrototype.shiftLeft = function shiftLeft(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);
      else
        return fromBits(0, this.low << numBits - 32, this.unsigned);
    };
    LongPrototype.shl = LongPrototype.shiftLeft;
    LongPrototype.shiftRight = function shiftRight(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      if ((numBits &= 63) === 0)
        return this;
      else if (numBits < 32)
        return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);
      else
        return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);
    };
    LongPrototype.shr = LongPrototype.shiftRight;
    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
      if (isLong(numBits))
        numBits = numBits.toInt();
      numBits &= 63;
      if (numBits === 0)
        return this;
      else {
        var high = this.high;
        if (numBits < 32) {
          var low = this.low;
          return fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, this.unsigned);
        } else if (numBits === 32)
          return fromBits(high, 0, this.unsigned);
        else
          return fromBits(high >>> numBits - 32, 0, this.unsigned);
      }
    };
    LongPrototype.shru = LongPrototype.shiftRightUnsigned;
    LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;
    LongPrototype.toSigned = function toSigned() {
      if (!this.unsigned)
        return this;
      return fromBits(this.low, this.high, false);
    };
    LongPrototype.toUnsigned = function toUnsigned() {
      if (this.unsigned)
        return this;
      return fromBits(this.low, this.high, true);
    };
    LongPrototype.toBytes = function toBytes(le) {
      return le ? this.toBytesLE() : this.toBytesBE();
    };
    LongPrototype.toBytesLE = function toBytesLE() {
      var hi = this.high, lo = this.low;
      return [
        lo & 255,
        lo >>> 8 & 255,
        lo >>> 16 & 255,
        lo >>> 24,
        hi & 255,
        hi >>> 8 & 255,
        hi >>> 16 & 255,
        hi >>> 24
      ];
    };
    LongPrototype.toBytesBE = function toBytesBE() {
      var hi = this.high, lo = this.low;
      return [
        hi >>> 24,
        hi >>> 16 & 255,
        hi >>> 8 & 255,
        hi & 255,
        lo >>> 24,
        lo >>> 16 & 255,
        lo >>> 8 & 255,
        lo & 255
      ];
    };
    Long2.fromBytes = function fromBytes(bytes, unsigned, le) {
      return le ? Long2.fromBytesLE(bytes, unsigned) : Long2.fromBytesBE(bytes, unsigned);
    };
    Long2.fromBytesLE = function fromBytesLE(bytes, unsigned) {
      return new Long2(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);
    };
    Long2.fromBytesBE = function fromBytesBE(bytes, unsigned) {
      return new Long2(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);
    };
  }
});

// (disabled):node_modules/node-fetch/browser.js
var require_browser = __commonJS({
  "(disabled):node_modules/node-fetch/browser.js"() {
  }
});

// (disabled):util
var require_util = __commonJS({
  "(disabled):util"() {
  }
});

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_web_api_client.js
var require_tflite_web_api_client = __commonJS({
  "node_modules/@tensorflow/tfjs-tflite/dist/tflite_web_api_client.js"(exports, module) {
    var $jscomp = $jscomp || {};
    $jscomp.scope = {};
    $jscomp.arrayIteratorImpl = function(a2) {
      var b2 = 0;
      return function() {
        return b2 < a2.length ? { done: false, value: a2[b2++] } : { done: true };
      };
    };
    $jscomp.arrayIterator = function(a2) {
      return { next: $jscomp.arrayIteratorImpl(a2) };
    };
    $jscomp.ASSUME_ES5 = false;
    $jscomp.ASSUME_NO_NATIVE_MAP = false;
    $jscomp.ASSUME_NO_NATIVE_SET = false;
    $jscomp.SIMPLE_FROUND_POLYFILL = false;
    $jscomp.ISOLATE_POLYFILLS = false;
    $jscomp.FORCE_POLYFILL_PROMISE = false;
    $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION = false;
    $jscomp.defineProperty = $jscomp.ASSUME_ES5 || typeof Object.defineProperties == "function" ? Object.defineProperty : function(a2, b2, c) {
      if (a2 == Array.prototype || a2 == Object.prototype)
        return a2;
      a2[b2] = c.value;
      return a2;
    };
    $jscomp.getGlobal = function(a2) {
      a2 = [typeof globalThis == "object" && globalThis, a2, typeof window == "object" && window, typeof self == "object" && self, typeof global == "object" && global];
      for (var b2 = 0; b2 < a2.length; ++b2) {
        var c = a2[b2];
        if (c && c.Math == Math)
          return c;
      }
      throw Error("Cannot find global object");
    };
    $jscomp.global = $jscomp.getGlobal(exports);
    $jscomp.IS_SYMBOL_NATIVE = typeof Symbol === "function" && typeof Symbol("x") === "symbol";
    $jscomp.TRUST_ES6_POLYFILLS = !$jscomp.ISOLATE_POLYFILLS || $jscomp.IS_SYMBOL_NATIVE;
    $jscomp.polyfills = {};
    $jscomp.propertyToPolyfillSymbol = {};
    $jscomp.POLYFILL_PREFIX = "$jscp$";
    $jscomp.polyfill = function(a2, b2, c, d) {
      b2 && ($jscomp.ISOLATE_POLYFILLS ? $jscomp.polyfillIsolated(a2, b2, c, d) : $jscomp.polyfillUnisolated(a2, b2, c, d));
    };
    $jscomp.polyfillUnisolated = function(a2, b2) {
      var c = $jscomp.global;
      a2 = a2.split(".");
      for (var d = 0; d < a2.length - 1; d++) {
        var e = a2[d];
        if (!(e in c))
          return;
        c = c[e];
      }
      a2 = a2[a2.length - 1];
      d = c[a2];
      b2 = b2(d);
      b2 != d && b2 != null && $jscomp.defineProperty(c, a2, { configurable: true, writable: true, value: b2 });
    };
    $jscomp.polyfillIsolated = function(a2, b2, c) {
      var d = a2.split(".");
      a2 = d.length === 1;
      var e = d[0];
      e = !a2 && e in $jscomp.polyfills ? $jscomp.polyfills : $jscomp.global;
      for (var f = 0; f < d.length - 1; f++) {
        var g = d[f];
        if (!(g in e))
          return;
        e = e[g];
      }
      d = d[d.length - 1];
      c = $jscomp.IS_SYMBOL_NATIVE && c === "es6" ? e[d] : null;
      b2 = b2(c);
      b2 != null && (a2 ? $jscomp.defineProperty($jscomp.polyfills, d, { configurable: true, writable: true, value: b2 }) : b2 !== c && ($jscomp.propertyToPolyfillSymbol[d] === void 0 && (a2 = 1e9 * Math.random() >>> 0, $jscomp.propertyToPolyfillSymbol[d] = $jscomp.IS_SYMBOL_NATIVE ? $jscomp.global.Symbol(d) : $jscomp.POLYFILL_PREFIX + a2 + "$" + d), $jscomp.defineProperty(e, $jscomp.propertyToPolyfillSymbol[d], { configurable: true, writable: true, value: b2 })));
    };
    $jscomp.initSymbol = function() {
    };
    $jscomp.polyfill("Symbol", function(a2) {
      if (a2)
        return a2;
      var b2 = function(f, g) {
        this.$jscomp$symbol$id_ = f;
        $jscomp.defineProperty(this, "description", { configurable: true, writable: true, value: g });
      };
      b2.prototype.toString = function() {
        return this.$jscomp$symbol$id_;
      };
      var c = "jscomp_symbol_" + (1e9 * Math.random() >>> 0) + "_", d = 0, e = function(f) {
        if (this instanceof e)
          throw new TypeError("Symbol is not a constructor");
        return new b2(c + (f || "") + "_" + d++, f);
      };
      return e;
    }, "es6", "es3");
    $jscomp.polyfill("Symbol.iterator", function(a2) {
      if (a2)
        return a2;
      a2 = Symbol("Symbol.iterator");
      for (var b2 = "Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "), c = 0; c < b2.length; c++) {
        var d = $jscomp.global[b2[c]];
        typeof d === "function" && typeof d.prototype[a2] != "function" && $jscomp.defineProperty(d.prototype, a2, { configurable: true, writable: true, value: function() {
          return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
        } });
      }
      return a2;
    }, "es6", "es3");
    $jscomp.iteratorPrototype = function(a2) {
      a2 = { next: a2 };
      a2[Symbol.iterator] = function() {
        return this;
      };
      return a2;
    };
    $jscomp.createTemplateTagFirstArg = function(a2) {
      return a2.raw = a2;
    };
    $jscomp.createTemplateTagFirstArgWithRaw = function(a2, b2) {
      a2.raw = b2;
      return a2;
    };
    $jscomp.makeIterator = function(a2) {
      var b2 = typeof Symbol != "undefined" && Symbol.iterator && a2[Symbol.iterator];
      return b2 ? b2.call(a2) : $jscomp.arrayIterator(a2);
    };
    $jscomp.arrayFromIterator = function(a2) {
      for (var b2, c = []; !(b2 = a2.next()).done; )
        c.push(b2.value);
      return c;
    };
    $jscomp.arrayFromIterable = function(a2) {
      return a2 instanceof Array ? a2 : $jscomp.arrayFromIterator($jscomp.makeIterator(a2));
    };
    $jscomp.objectCreate = $jscomp.ASSUME_ES5 || typeof Object.create == "function" ? Object.create : function(a2) {
      var b2 = function() {
      };
      b2.prototype = a2;
      return new b2();
    };
    $jscomp.getConstructImplementation = function() {
      function a2() {
        function c() {
        }
        new c();
        Reflect.construct(c, [], function() {
        });
        return new c() instanceof c;
      }
      if ($jscomp.TRUST_ES6_POLYFILLS && typeof Reflect != "undefined" && Reflect.construct) {
        if (a2())
          return Reflect.construct;
        var b2 = Reflect.construct;
        return function(c, d, e) {
          c = b2(c, d);
          e && Reflect.setPrototypeOf(c, e.prototype);
          return c;
        };
      }
      return function(c, d, e) {
        e === void 0 && (e = c);
        e = $jscomp.objectCreate(e.prototype || Object.prototype);
        return Function.prototype.apply.call(c, e, d) || e;
      };
    };
    $jscomp.construct = { valueOf: $jscomp.getConstructImplementation }.valueOf();
    $jscomp.underscoreProtoCanBeSet = function() {
      var a2 = { a: true }, b2 = {};
      try {
        return b2.__proto__ = a2, b2.a;
      } catch (c) {
      }
      return false;
    };
    $jscomp.setPrototypeOf = $jscomp.TRUST_ES6_POLYFILLS && typeof Object.setPrototypeOf == "function" ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(a2, b2) {
      a2.__proto__ = b2;
      if (a2.__proto__ !== b2)
        throw new TypeError(a2 + " is not extensible");
      return a2;
    } : null;
    $jscomp.inherits = function(a2, b2) {
      a2.prototype = $jscomp.objectCreate(b2.prototype);
      a2.prototype.constructor = a2;
      if ($jscomp.setPrototypeOf) {
        var c = $jscomp.setPrototypeOf;
        c(a2, b2);
      } else
        for (c in b2)
          if (c != "prototype")
            if (Object.defineProperties) {
              var d = Object.getOwnPropertyDescriptor(b2, c);
              d && Object.defineProperty(a2, c, d);
            } else
              a2[c] = b2[c];
      a2.superClass_ = b2.prototype;
    };
    $jscomp.generator = {};
    $jscomp.generator.ensureIteratorResultIsObject_ = function(a2) {
      if (!(a2 instanceof Object))
        throw new TypeError("Iterator result " + a2 + " is not an object");
    };
    $jscomp.generator.Context = function() {
      this.isRunning_ = false;
      this.yieldAllIterator_ = null;
      this.yieldResult = void 0;
      this.nextAddress = 1;
      this.finallyAddress_ = this.catchAddress_ = 0;
      this.finallyContexts_ = this.abruptCompletion_ = null;
    };
    $jscomp.generator.Context.prototype.start_ = function() {
      if (this.isRunning_)
        throw new TypeError("Generator is already running");
      this.isRunning_ = true;
    };
    $jscomp.generator.Context.prototype.stop_ = function() {
      this.isRunning_ = false;
    };
    $jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {
      this.nextAddress = this.catchAddress_ || this.finallyAddress_;
    };
    $jscomp.generator.Context.prototype.next_ = function(a2) {
      this.yieldResult = a2;
    };
    $jscomp.generator.Context.prototype.throw_ = function(a2) {
      this.abruptCompletion_ = { exception: a2, isException: true };
      this.jumpToErrorHandler_();
    };
    $jscomp.generator.Context.prototype.return = function(a2) {
      this.abruptCompletion_ = { return: a2 };
      this.nextAddress = this.finallyAddress_;
    };
    $jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(a2) {
      this.abruptCompletion_ = { jumpTo: a2 };
      this.nextAddress = this.finallyAddress_;
    };
    $jscomp.generator.Context.prototype.yield = function(a2, b2) {
      this.nextAddress = b2;
      return { value: a2 };
    };
    $jscomp.generator.Context.prototype.yieldAll = function(a2, b2) {
      a2 = $jscomp.makeIterator(a2);
      var c = a2.next();
      $jscomp.generator.ensureIteratorResultIsObject_(c);
      if (c.done)
        this.yieldResult = c.value, this.nextAddress = b2;
      else
        return this.yieldAllIterator_ = a2, this.yield(c.value, b2);
    };
    $jscomp.generator.Context.prototype.jumpTo = function(a2) {
      this.nextAddress = a2;
    };
    $jscomp.generator.Context.prototype.jumpToEnd = function() {
      this.nextAddress = 0;
    };
    $jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(a2, b2) {
      this.catchAddress_ = a2;
      b2 != void 0 && (this.finallyAddress_ = b2);
    };
    $jscomp.generator.Context.prototype.setFinallyBlock = function(a2) {
      this.catchAddress_ = 0;
      this.finallyAddress_ = a2 || 0;
    };
    $jscomp.generator.Context.prototype.leaveTryBlock = function(a2, b2) {
      this.nextAddress = a2;
      this.catchAddress_ = b2 || 0;
    };
    $jscomp.generator.Context.prototype.enterCatchBlock = function(a2) {
      this.catchAddress_ = a2 || 0;
      a2 = this.abruptCompletion_.exception;
      this.abruptCompletion_ = null;
      return a2;
    };
    $jscomp.generator.Context.prototype.enterFinallyBlock = function(a2, b2, c) {
      c ? this.finallyContexts_[c] = this.abruptCompletion_ : this.finallyContexts_ = [this.abruptCompletion_];
      this.catchAddress_ = a2 || 0;
      this.finallyAddress_ = b2 || 0;
    };
    $jscomp.generator.Context.prototype.leaveFinallyBlock = function(a2, b2) {
      b2 = this.finallyContexts_.splice(b2 || 0)[0];
      if (b2 = this.abruptCompletion_ = this.abruptCompletion_ || b2) {
        if (b2.isException)
          return this.jumpToErrorHandler_();
        b2.jumpTo != void 0 && this.finallyAddress_ < b2.jumpTo ? (this.nextAddress = b2.jumpTo, this.abruptCompletion_ = null) : this.nextAddress = this.finallyAddress_;
      } else
        this.nextAddress = a2;
    };
    $jscomp.generator.Context.prototype.forIn = function(a2) {
      return new $jscomp.generator.Context.PropertyIterator(a2);
    };
    $jscomp.generator.Context.PropertyIterator = function(a2) {
      this.object_ = a2;
      this.properties_ = [];
      for (var b2 in a2)
        this.properties_.push(b2);
      this.properties_.reverse();
    };
    $jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {
      for (; 0 < this.properties_.length; ) {
        var a2 = this.properties_.pop();
        if (a2 in this.object_)
          return a2;
      }
      return null;
    };
    $jscomp.generator.Engine_ = function(a2) {
      this.context_ = new $jscomp.generator.Context();
      this.program_ = a2;
    };
    $jscomp.generator.Engine_.prototype.next_ = function(a2) {
      this.context_.start_();
      if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_.next, a2, this.context_.next_);
      this.context_.next_(a2);
      return this.nextStep_();
    };
    $jscomp.generator.Engine_.prototype.return_ = function(a2) {
      this.context_.start_();
      var b2 = this.context_.yieldAllIterator_;
      if (b2)
        return this.yieldAllStep_("return" in b2 ? b2["return"] : function(c) {
          return { value: c, done: true };
        }, a2, this.context_.return);
      this.context_.return(a2);
      return this.nextStep_();
    };
    $jscomp.generator.Engine_.prototype.throw_ = function(a2) {
      this.context_.start_();
      if (this.context_.yieldAllIterator_)
        return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"], a2, this.context_.next_);
      this.context_.throw_(a2);
      return this.nextStep_();
    };
    $jscomp.generator.Engine_.prototype.yieldAllStep_ = function(a2, b2, c) {
      try {
        var d = a2.call(this.context_.yieldAllIterator_, b2);
        $jscomp.generator.ensureIteratorResultIsObject_(d);
        if (!d.done)
          return this.context_.stop_(), d;
        var e = d.value;
      } catch (f) {
        return this.context_.yieldAllIterator_ = null, this.context_.throw_(f), this.nextStep_();
      }
      this.context_.yieldAllIterator_ = null;
      c.call(this.context_, e);
      return this.nextStep_();
    };
    $jscomp.generator.Engine_.prototype.nextStep_ = function() {
      for (; this.context_.nextAddress; )
        try {
          var a2 = this.program_(this.context_);
          if (a2)
            return this.context_.stop_(), { value: a2.value, done: false };
        } catch (b2) {
          this.context_.yieldResult = void 0, this.context_.throw_(b2);
        }
      this.context_.stop_();
      if (this.context_.abruptCompletion_) {
        a2 = this.context_.abruptCompletion_;
        this.context_.abruptCompletion_ = null;
        if (a2.isException)
          throw a2.exception;
        return { value: a2.return, done: true };
      }
      return { value: void 0, done: true };
    };
    $jscomp.generator.Generator_ = function(a2) {
      this.next = function(b2) {
        return a2.next_(b2);
      };
      this.throw = function(b2) {
        return a2.throw_(b2);
      };
      this.return = function(b2) {
        return a2.return_(b2);
      };
      this[Symbol.iterator] = function() {
        return this;
      };
    };
    $jscomp.generator.createGenerator = function(a2, b2) {
      b2 = new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(b2));
      $jscomp.setPrototypeOf && a2.prototype && $jscomp.setPrototypeOf(b2, a2.prototype);
      return b2;
    };
    $jscomp.asyncExecutePromiseGenerator = function(a2) {
      function b2(d) {
        return a2.next(d);
      }
      function c(d) {
        return a2.throw(d);
      }
      return new Promise(function(d, e) {
        function f(g) {
          g.done ? d(g.value) : Promise.resolve(g.value).then(b2, c).then(f, e);
        }
        f(a2.next());
      });
    };
    $jscomp.asyncExecutePromiseGeneratorFunction = function(a2) {
      return $jscomp.asyncExecutePromiseGenerator(a2());
    };
    $jscomp.asyncExecutePromiseGeneratorProgram = function(a2) {
      return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(a2)));
    };
    $jscomp.polyfill("Reflect", function(a2) {
      return a2 ? a2 : {};
    }, "es6", "es3");
    $jscomp.polyfill("Reflect.construct", function() {
      return $jscomp.construct;
    }, "es6", "es3");
    $jscomp.polyfill("Reflect.setPrototypeOf", function(a2) {
      if (a2)
        return a2;
      if ($jscomp.setPrototypeOf) {
        var b2 = $jscomp.setPrototypeOf;
        return function(c, d) {
          try {
            return b2(c, d), true;
          } catch (e) {
            return false;
          }
        };
      }
      return null;
    }, "es6", "es5");
    $jscomp.polyfill("Promise", function(a2) {
      function b2() {
        this.batch_ = null;
      }
      function c(k) {
        return k instanceof f ? k : new f(function(h) {
          h(k);
        });
      }
      if (a2 && (!($jscomp.FORCE_POLYFILL_PROMISE || $jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION && typeof $jscomp.global.PromiseRejectionEvent === "undefined") || !$jscomp.global.Promise || $jscomp.global.Promise.toString().indexOf("[native code]") === -1))
        return a2;
      b2.prototype.asyncExecute = function(k) {
        if (this.batch_ == null) {
          this.batch_ = [];
          var h = this;
          this.asyncExecuteFunction(function() {
            h.executeBatch_();
          });
        }
        this.batch_.push(k);
      };
      var d = $jscomp.global.setTimeout;
      b2.prototype.asyncExecuteFunction = function(k) {
        d(k, 0);
      };
      b2.prototype.executeBatch_ = function() {
        for (; this.batch_ && this.batch_.length; ) {
          var k = this.batch_;
          this.batch_ = [];
          for (var h = 0; h < k.length; ++h) {
            var l = k[h];
            k[h] = null;
            try {
              l();
            } catch (m) {
              this.asyncThrow_(m);
            }
          }
        }
        this.batch_ = null;
      };
      b2.prototype.asyncThrow_ = function(k) {
        this.asyncExecuteFunction(function() {
          throw k;
        });
      };
      var e = { PENDING: 0, FULFILLED: 1, REJECTED: 2 }, f = function(k) {
        this.state_ = e.PENDING;
        this.result_ = void 0;
        this.onSettledCallbacks_ = [];
        this.isRejectionHandled_ = false;
        var h = this.createResolveAndReject_();
        try {
          k(h.resolve, h.reject);
        } catch (l) {
          h.reject(l);
        }
      };
      f.prototype.createResolveAndReject_ = function() {
        function k(m) {
          return function(n) {
            l || (l = true, m.call(h, n));
          };
        }
        var h = this, l = false;
        return { resolve: k(this.resolveTo_), reject: k(this.reject_) };
      };
      f.prototype.resolveTo_ = function(k) {
        if (k === this)
          this.reject_(new TypeError("A Promise cannot resolve to itself"));
        else if (k instanceof f)
          this.settleSameAsPromise_(k);
        else {
          a:
            switch (typeof k) {
              case "object":
                var h = k != null;
                break a;
              case "function":
                h = true;
                break a;
              default:
                h = false;
            }
          h ? this.resolveToNonPromiseObj_(k) : this.fulfill_(k);
        }
      };
      f.prototype.resolveToNonPromiseObj_ = function(k) {
        var h = void 0;
        try {
          h = k.then;
        } catch (l) {
          this.reject_(l);
          return;
        }
        typeof h == "function" ? this.settleSameAsThenable_(h, k) : this.fulfill_(k);
      };
      f.prototype.reject_ = function(k) {
        this.settle_(e.REJECTED, k);
      };
      f.prototype.fulfill_ = function(k) {
        this.settle_(e.FULFILLED, k);
      };
      f.prototype.settle_ = function(k, h) {
        if (this.state_ != e.PENDING)
          throw Error("Cannot settle(" + k + ", " + h + "): Promise already settled in state" + this.state_);
        this.state_ = k;
        this.result_ = h;
        this.state_ === e.REJECTED && this.scheduleUnhandledRejectionCheck_();
        this.executeOnSettledCallbacks_();
      };
      f.prototype.scheduleUnhandledRejectionCheck_ = function() {
        var k = this;
        d(function() {
          if (k.notifyUnhandledRejection_()) {
            var h = $jscomp.global.console;
            typeof h !== "undefined" && h.error(k.result_);
          }
        }, 1);
      };
      f.prototype.notifyUnhandledRejection_ = function() {
        if (this.isRejectionHandled_)
          return false;
        var k = $jscomp.global.CustomEvent, h = $jscomp.global.Event, l = $jscomp.global.dispatchEvent;
        if (typeof l === "undefined")
          return true;
        typeof k === "function" ? k = new k("unhandledrejection", { cancelable: true }) : typeof h === "function" ? k = new h("unhandledrejection", { cancelable: true }) : (k = $jscomp.global.document.createEvent("CustomEvent"), k.initCustomEvent("unhandledrejection", false, true, k));
        k.promise = this;
        k.reason = this.result_;
        return l(k);
      };
      f.prototype.executeOnSettledCallbacks_ = function() {
        if (this.onSettledCallbacks_ != null) {
          for (var k = 0; k < this.onSettledCallbacks_.length; ++k)
            g.asyncExecute(this.onSettledCallbacks_[k]);
          this.onSettledCallbacks_ = null;
        }
      };
      var g = new b2();
      f.prototype.settleSameAsPromise_ = function(k) {
        var h = this.createResolveAndReject_();
        k.callWhenSettled_(h.resolve, h.reject);
      };
      f.prototype.settleSameAsThenable_ = function(k, h) {
        var l = this.createResolveAndReject_();
        try {
          k.call(h, l.resolve, l.reject);
        } catch (m) {
          l.reject(m);
        }
      };
      f.prototype.then = function(k, h) {
        function l(q, r) {
          return typeof q == "function" ? function(t) {
            try {
              m(q(t));
            } catch (v) {
              n(v);
            }
          } : r;
        }
        var m, n, p = new f(function(q, r) {
          m = q;
          n = r;
        });
        this.callWhenSettled_(l(k, m), l(h, n));
        return p;
      };
      f.prototype.catch = function(k) {
        return this.then(void 0, k);
      };
      f.prototype.callWhenSettled_ = function(k, h) {
        function l() {
          switch (m.state_) {
            case e.FULFILLED:
              k(m.result_);
              break;
            case e.REJECTED:
              h(m.result_);
              break;
            default:
              throw Error("Unexpected state: " + m.state_);
          }
        }
        var m = this;
        this.onSettledCallbacks_ == null ? g.asyncExecute(l) : this.onSettledCallbacks_.push(l);
        this.isRejectionHandled_ = true;
      };
      f.resolve = c;
      f.reject = function(k) {
        return new f(function(h, l) {
          l(k);
        });
      };
      f.race = function(k) {
        return new f(function(h, l) {
          for (var m = $jscomp.makeIterator(k), n = m.next(); !n.done; n = m.next())
            c(n.value).callWhenSettled_(h, l);
        });
      };
      f.all = function(k) {
        var h = $jscomp.makeIterator(k), l = h.next();
        return l.done ? c([]) : new f(function(m, n) {
          function p(t) {
            return function(v) {
              q[t] = v;
              r--;
              r == 0 && m(q);
            };
          }
          var q = [], r = 0;
          do
            q.push(void 0), r++, c(l.value).callWhenSettled_(p(q.length - 1), n), l = h.next();
          while (!l.done);
        });
      };
      return f;
    }, "es6", "es3");
    $jscomp.findInternal = function(a2, b2, c) {
      a2 instanceof String && (a2 = String(a2));
      for (var d = a2.length, e = 0; e < d; e++) {
        var f = a2[e];
        if (b2.call(c, f, e, a2))
          return { i: e, v: f };
      }
      return { i: -1, v: void 0 };
    };
    $jscomp.polyfill("Array.prototype.find", function(a2) {
      return a2 ? a2 : function(b2, c) {
        return $jscomp.findInternal(this, b2, c).v;
      };
    }, "es6", "es3");
    $jscomp.checkEs6ConformanceViaProxy = function() {
      try {
        var a2 = {}, b2 = Object.create(new $jscomp.global.Proxy(a2, { get: function(c, d, e) {
          return c == a2 && d == "q" && e == b2;
        } }));
        return b2.q === true;
      } catch (c) {
        return false;
      }
    };
    $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = false;
    $jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
    $jscomp.owns = function(a2, b2) {
      return Object.prototype.hasOwnProperty.call(a2, b2);
    };
    $jscomp.polyfill("WeakMap", function(a2) {
      function b2() {
        if (!a2 || !Object.seal)
          return false;
        try {
          var l = Object.seal({}), m = Object.seal({}), n = new a2([[l, 2], [m, 3]]);
          if (n.get(l) != 2 || n.get(m) != 3)
            return false;
          n.delete(l);
          n.set(m, 4);
          return !n.has(l) && n.get(m) == 4;
        } catch (p) {
          return false;
        }
      }
      function c() {
      }
      function d(l) {
        var m = typeof l;
        return m === "object" && l !== null || m === "function";
      }
      function e(l) {
        if (!$jscomp.owns(l, g)) {
          var m = new c();
          $jscomp.defineProperty(l, g, { value: m });
        }
      }
      function f(l) {
        if (!$jscomp.ISOLATE_POLYFILLS) {
          var m = Object[l];
          m && (Object[l] = function(n) {
            if (n instanceof c)
              return n;
            Object.isExtensible(n) && e(n);
            return m(n);
          });
        }
      }
      if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (a2 && $jscomp.ES6_CONFORMANCE)
          return a2;
      } else if (b2())
        return a2;
      var g = "$jscomp_hidden_" + Math.random();
      f("freeze");
      f("preventExtensions");
      f("seal");
      var k = 0, h = function(l) {
        this.id_ = (k += Math.random() + 1).toString();
        if (l) {
          l = $jscomp.makeIterator(l);
          for (var m; !(m = l.next()).done; )
            m = m.value, this.set(m[0], m[1]);
        }
      };
      h.prototype.set = function(l, m) {
        if (!d(l))
          throw Error("Invalid WeakMap key");
        e(l);
        if (!$jscomp.owns(l, g))
          throw Error("WeakMap key fail: " + l);
        l[g][this.id_] = m;
        return this;
      };
      h.prototype.get = function(l) {
        return d(l) && $jscomp.owns(l, g) ? l[g][this.id_] : void 0;
      };
      h.prototype.has = function(l) {
        return d(l) && $jscomp.owns(l, g) && $jscomp.owns(l[g], this.id_);
      };
      h.prototype.delete = function(l) {
        return d(l) && $jscomp.owns(l, g) && $jscomp.owns(l[g], this.id_) ? delete l[g][this.id_] : false;
      };
      return h;
    }, "es6", "es3");
    $jscomp.MapEntry = function() {
    };
    $jscomp.polyfill("Map", function(a2) {
      function b2() {
        if ($jscomp.ASSUME_NO_NATIVE_MAP || !a2 || typeof a2 != "function" || !a2.prototype.entries || typeof Object.seal != "function")
          return false;
        try {
          var h = Object.seal({ x: 4 }), l = new a2($jscomp.makeIterator([[h, "s"]]));
          if (l.get(h) != "s" || l.size != 1 || l.get({ x: 4 }) || l.set({ x: 4 }, "t") != l || l.size != 2)
            return false;
          var m = l.entries(), n = m.next();
          if (n.done || n.value[0] != h || n.value[1] != "s")
            return false;
          n = m.next();
          return n.done || n.value[0].x != 4 || n.value[1] != "t" || !m.next().done ? false : true;
        } catch (p) {
          return false;
        }
      }
      if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
        if (a2 && $jscomp.ES6_CONFORMANCE)
          return a2;
      } else if (b2())
        return a2;
      var c = /* @__PURE__ */ new WeakMap(), d = function(h) {
        this.data_ = {};
        this.head_ = g();
        this.size = 0;
        if (h) {
          h = $jscomp.makeIterator(h);
          for (var l; !(l = h.next()).done; )
            l = l.value, this.set(l[0], l[1]);
        }
      };
      d.prototype.set = function(h, l) {
        h = h === 0 ? 0 : h;
        var m = e(this, h);
        m.list || (m.list = this.data_[m.id] = []);
        m.entry ? m.entry.value = l : (m.entry = { next: this.head_, previous: this.head_.previous, head: this.head_, key: h, value: l }, m.list.push(m.entry), this.head_.previous.next = m.entry, this.head_.previous = m.entry, this.size++);
        return this;
      };
      d.prototype.delete = function(h) {
        h = e(this, h);
        return h.entry && h.list ? (h.list.splice(h.index, 1), h.list.length || delete this.data_[h.id], h.entry.previous.next = h.entry.next, h.entry.next.previous = h.entry.previous, h.entry.head = null, this.size--, true) : false;
      };
      d.prototype.clear = function() {
        this.data_ = {};
        this.head_ = this.head_.previous = g();
        this.size = 0;
      };
      d.prototype.has = function(h) {
        return !!e(this, h).entry;
      };
      d.prototype.get = function(h) {
        return (h = e(this, h).entry) && h.value;
      };
      d.prototype.entries = function() {
        return f(this, function(h) {
          return [h.key, h.value];
        });
      };
      d.prototype.keys = function() {
        return f(this, function(h) {
          return h.key;
        });
      };
      d.prototype.values = function() {
        return f(this, function(h) {
          return h.value;
        });
      };
      d.prototype.forEach = function(h, l) {
        for (var m = this.entries(), n; !(n = m.next()).done; )
          n = n.value, h.call(l, n[1], n[0], this);
      };
      d.prototype[Symbol.iterator] = d.prototype.entries;
      var e = function(h, l) {
        var m = l && typeof l;
        m == "object" || m == "function" ? c.has(l) ? m = c.get(l) : (m = "" + ++k, c.set(l, m)) : m = "p_" + l;
        var n = h.data_[m];
        if (n && $jscomp.owns(h.data_, m))
          for (h = 0; h < n.length; h++) {
            var p = n[h];
            if (l !== l && p.key !== p.key || l === p.key)
              return { id: m, list: n, index: h, entry: p };
          }
        return { id: m, list: n, index: -1, entry: void 0 };
      }, f = function(h, l) {
        var m = h.head_;
        return $jscomp.iteratorPrototype(function() {
          if (m) {
            for (; m.head != h.head_; )
              m = m.previous;
            for (; m.next != m.head; )
              return m = m.next, { done: false, value: l(m) };
            m = null;
          }
          return { done: true, value: void 0 };
        });
      }, g = function() {
        var h = {};
        return h.previous = h.next = h.head = h;
      }, k = 0;
      return d;
    }, "es6", "es3");
    $jscomp.iteratorFromArray = function(a2, b2) {
      a2 instanceof String && (a2 += "");
      var c = 0, d = false, e = { next: function() {
        if (!d && c < a2.length) {
          var f = c++;
          return { value: b2(f, a2[f]), done: false };
        }
        d = true;
        return { done: true, value: void 0 };
      } };
      e[Symbol.iterator] = function() {
        return e;
      };
      return e;
    };
    $jscomp.polyfill("Array.prototype.entries", function(a2) {
      return a2 ? a2 : function() {
        return $jscomp.iteratorFromArray(this, function(b2, c) {
          return [b2, c];
        });
      };
    }, "es6", "es3");
    $jscomp.checkStringArgs = function(a2, b2, c) {
      if (a2 == null)
        throw new TypeError("The 'this' value for String.prototype." + c + " must not be null or undefined");
      if (b2 instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + c + " must not be a regular expression");
      return a2 + "";
    };
    $jscomp.polyfill("String.prototype.endsWith", function(a2) {
      return a2 ? a2 : function(b2, c) {
        var d = $jscomp.checkStringArgs(this, b2, "endsWith");
        b2 += "";
        c === void 0 && (c = d.length);
        c = Math.max(0, Math.min(c | 0, d.length));
        for (var e = b2.length; 0 < e && 0 < c; )
          if (d[--c] != b2[--e])
            return false;
        return 0 >= e;
      };
    }, "es6", "es3");
    $jscomp.polyfill("String.prototype.startsWith", function(a2) {
      return a2 ? a2 : function(b2, c) {
        var d = $jscomp.checkStringArgs(this, b2, "startsWith");
        b2 += "";
        var e = d.length, f = b2.length;
        c = Math.max(0, Math.min(c | 0, d.length));
        for (var g = 0; g < f && c < e; )
          if (d[c++] != b2[g++])
            return false;
        return g >= f;
      };
    }, "es6", "es3");
    $jscomp.polyfill("Number.isFinite", function(a2) {
      return a2 ? a2 : function(b2) {
        return typeof b2 !== "number" ? false : !isNaN(b2) && b2 !== Infinity && b2 !== -Infinity;
      };
    }, "es6", "es3");
    $jscomp.polyfill("String.prototype.repeat", function(a2) {
      return a2 ? a2 : function(b2) {
        var c = $jscomp.checkStringArgs(this, null, "repeat");
        if (0 > b2 || 1342177279 < b2)
          throw new RangeError("Invalid count value");
        b2 |= 0;
        for (var d = ""; b2; )
          if (b2 & 1 && (d += c), b2 >>>= 1)
            c += c;
        return d;
      };
    }, "es6", "es3");
    $jscomp.polyfill("Object.setPrototypeOf", function(a2) {
      return a2 || $jscomp.setPrototypeOf;
    }, "es6", "es5");
    $jscomp.assign = $jscomp.TRUST_ES6_POLYFILLS && typeof Object.assign == "function" ? Object.assign : function(a2, b2) {
      for (var c = 1; c < arguments.length; c++) {
        var d = arguments[c];
        if (d)
          for (var e in d)
            $jscomp.owns(d, e) && (a2[e] = d[e]);
      }
      return a2;
    };
    $jscomp.polyfill("Object.assign", function(a2) {
      return a2 || $jscomp.assign;
    }, "es6", "es3");
    var goog = goog || {};
    goog.global = exports || self;
    goog.exportPath_ = function(a2, b2, c, d) {
      a2 = a2.split(".");
      d = d || goog.global;
      a2[0] in d || typeof d.execScript == "undefined" || d.execScript("var " + a2[0]);
      for (var e; a2.length && (e = a2.shift()); )
        if (a2.length || b2 === void 0)
          d = d[e] && d[e] !== Object.prototype[e] ? d[e] : d[e] = {};
        else if (!c && goog.isObject(b2) && goog.isObject(d[e]))
          for (var f in b2)
            b2.hasOwnProperty(f) && (d[e][f] = b2[f]);
        else
          d[e] = b2;
    };
    goog.define = function(a2, b2) {
      return b2;
    };
    goog.FEATURESET_YEAR = 2012;
    goog.DEBUG = true;
    goog.LOCALE = "en";
    goog.getLocale = function() {
      return goog.LOCALE;
    };
    goog.TRUSTED_SITE = true;
    goog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG;
    goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = false;
    goog.provide = function(a2) {
      if (goog.isInModuleLoader_())
        throw Error("goog.provide cannot be used within a module.");
      goog.constructNamespace_(a2);
    };
    goog.constructNamespace_ = function(a2, b2, c) {
      goog.exportPath_(a2, b2, c);
    };
    goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
    goog.getScriptNonce_ = function(a2) {
      a2 = (a2 || goog.global).document;
      return (a2 = a2.querySelector && a2.querySelector("script[nonce]")) && (a2 = a2.nonce || a2.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(a2) ? a2 : "";
    };
    goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
    goog.module = function(a2) {
      if (typeof a2 !== "string" || !a2 || a2.search(goog.VALID_MODULE_RE_) == -1)
        throw Error("Invalid module identifier");
      if (!goog.isInGoogModuleLoader_())
        throw Error("Module " + a2 + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
      if (goog.moduleLoaderState_.moduleName)
        throw Error("goog.module may only be called once per module.");
      goog.moduleLoaderState_.moduleName = a2;
    };
    goog.module.get = function(a2) {
      return goog.module.getInternal_(a2);
    };
    goog.module.getInternal_ = function() {
      return null;
    };
    goog.ModuleType = { ES6: "es6", GOOG: "goog" };
    goog.moduleLoaderState_ = null;
    goog.isInModuleLoader_ = function() {
      return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
    };
    goog.isInGoogModuleLoader_ = function() {
      return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
    };
    goog.isInEs6ModuleLoader_ = function() {
      if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6)
        return true;
      var a2 = goog.global.$jscomp;
      return a2 ? typeof a2.getCurrentModulePath != "function" ? false : !!a2.getCurrentModulePath() : false;
    };
    goog.module.declareLegacyNamespace = function() {
      goog.moduleLoaderState_.declareLegacyNamespace = true;
    };
    goog.declareModuleId = function(a2) {
      if (goog.moduleLoaderState_)
        goog.moduleLoaderState_.moduleName = a2;
      else {
        var b2 = goog.global.$jscomp;
        if (!b2 || typeof b2.getCurrentModulePath != "function")
          throw Error('Module with namespace "' + a2 + '" has been loaded incorrectly.');
        b2 = b2.require(b2.getCurrentModulePath());
        goog.loadedModules_[a2] = { exports: b2, type: goog.ModuleType.ES6, moduleId: a2 };
      }
    };
    goog.setTestOnly = function(a2) {
      if (goog.DISALLOW_TEST_ONLY_CODE)
        throw a2 = a2 || "", Error("Importing test-only code into non-debug environment" + (a2 ? ": " + a2 : "."));
    };
    goog.forwardDeclare = function() {
    };
    goog.getObjectByName = function(a2, b2) {
      a2 = a2.split(".");
      b2 = b2 || goog.global;
      for (var c = 0; c < a2.length; c++)
        if (b2 = b2[a2[c]], b2 == null)
          return null;
      return b2;
    };
    goog.addDependency = function() {
    };
    goog.ENABLE_DEBUG_LOADER = true;
    goog.logToConsole_ = function(a2) {
      goog.global.console && goog.global.console.error(a2);
    };
    goog.require = function() {
    };
    goog.requireType = function() {
      return {};
    };
    goog.basePath = "";
    goog.nullFunction = function() {
    };
    goog.abstractMethod = function() {
      throw Error("unimplemented abstract method");
    };
    goog.addSingletonGetter = function(a2) {
      a2.instance_ = void 0;
      a2.getInstance = function() {
        if (a2.instance_)
          return a2.instance_;
        goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a2);
        return a2.instance_ = new a2();
      };
    };
    goog.instantiatedSingletons_ = [];
    goog.LOAD_MODULE_USING_EVAL = true;
    goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
    goog.loadedModules_ = {};
    goog.DEPENDENCIES_ENABLED = false;
    goog.TRANSPILE = "detect";
    goog.ASSUME_ES_MODULES_TRANSPILED = false;
    goog.TRANSPILE_TO_LANGUAGE = "";
    goog.TRANSPILER = "transpile.js";
    goog.TRUSTED_TYPES_POLICY_NAME = "goog";
    goog.hasBadLetScoping = null;
    goog.loadModule = function(a2) {
      var b2 = goog.moduleLoaderState_;
      try {
        goog.moduleLoaderState_ = { moduleName: "", declareLegacyNamespace: false, type: goog.ModuleType.GOOG };
        var c = {}, d = c;
        if (typeof a2 === "function")
          d = a2.call(void 0, d);
        else if (typeof a2 === "string")
          d = goog.loadModuleFromSource_.call(void 0, d, a2);
        else
          throw Error("Invalid module definition");
        var e = goog.moduleLoaderState_.moduleName;
        if (typeof e === "string" && e)
          goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(e, d, c !== d) : goog.SEAL_MODULE_EXPORTS && Object.seal && typeof d == "object" && d != null && Object.seal(d), goog.loadedModules_[e] = { exports: d, type: goog.ModuleType.GOOG, moduleId: goog.moduleLoaderState_.moduleName };
        else
          throw Error('Invalid module name "' + e + '"');
      } finally {
        goog.moduleLoaderState_ = b2;
      }
    };
    goog.loadModuleFromSource_ = function(a, b) {
      eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));
      return a;
    };
    goog.normalizePath_ = function(a2) {
      a2 = a2.split("/");
      for (var b2 = 0; b2 < a2.length; )
        a2[b2] == "." ? a2.splice(b2, 1) : b2 && a2[b2] == ".." && a2[b2 - 1] && a2[b2 - 1] != ".." ? a2.splice(--b2, 2) : b2++;
      return a2.join("/");
    };
    goog.loadFileSync_ = function(a2) {
      if (goog.global.CLOSURE_LOAD_FILE_SYNC)
        return goog.global.CLOSURE_LOAD_FILE_SYNC(a2);
      try {
        var b2 = new goog.global.XMLHttpRequest();
        b2.open("get", a2, false);
        b2.send();
        return b2.status == 0 || b2.status == 200 ? b2.responseText : null;
      } catch (c) {
        return null;
      }
    };
    goog.transpile_ = function(a2, b2, c) {
      var d = goog.global.$jscomp;
      d || (goog.global.$jscomp = d = {});
      var e = d.transpile;
      if (!e) {
        var f = goog.basePath + goog.TRANSPILER, g = goog.loadFileSync_(f);
        if (g) {
          (function() {
            (0, eval)(g + "\n//# sourceURL=" + f);
          }).call(goog.global);
          if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile)
            throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
          goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
          d = goog.global.$jscomp;
          e = d.transpile;
        }
      }
      if (!e) {
        var k = " requires transpilation but no transpiler was found.";
        k += ' Please add "//javascript/closure:transpiler" as a data dependency to ensure it is included.';
        e = d.transpile = function(h, l) {
          goog.logToConsole_(l + k);
          return h;
        };
      }
      return e(a2, b2, c);
    };
    goog.typeOf = function(a2) {
      var b2 = typeof a2;
      return b2 != "object" ? b2 : a2 ? Array.isArray(a2) ? "array" : b2 : "null";
    };
    goog.isArrayLike = function(a2) {
      var b2 = goog.typeOf(a2);
      return b2 == "array" || b2 == "object" && typeof a2.length == "number";
    };
    goog.isDateLike = function(a2) {
      return goog.isObject(a2) && typeof a2.getFullYear == "function";
    };
    goog.isObject = function(a2) {
      var b2 = typeof a2;
      return b2 == "object" && a2 != null || b2 == "function";
    };
    goog.getUid = function(a2) {
      return Object.prototype.hasOwnProperty.call(a2, goog.UID_PROPERTY_) && a2[goog.UID_PROPERTY_] || (a2[goog.UID_PROPERTY_] = ++goog.uidCounter_);
    };
    goog.hasUid = function(a2) {
      return !!a2[goog.UID_PROPERTY_];
    };
    goog.removeUid = function(a2) {
      a2 !== null && "removeAttribute" in a2 && a2.removeAttribute(goog.UID_PROPERTY_);
      try {
        delete a2[goog.UID_PROPERTY_];
      } catch (b2) {
      }
    };
    goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
    goog.uidCounter_ = 0;
    goog.cloneObject = function(a2) {
      var b2 = goog.typeOf(a2);
      if (b2 == "object" || b2 == "array") {
        if (typeof a2.clone === "function")
          return a2.clone();
        if (typeof Map !== "undefined" && a2 instanceof Map)
          return new Map(a2);
        if (typeof Set !== "undefined" && a2 instanceof Set)
          return new Set(a2);
        b2 = b2 == "array" ? [] : {};
        for (var c in a2)
          b2[c] = goog.cloneObject(a2[c]);
        return b2;
      }
      return a2;
    };
    goog.bindNative_ = function(a2, b2, c) {
      return a2.call.apply(a2.bind, arguments);
    };
    goog.bindJs_ = function(a2, b2, c) {
      if (!a2)
        throw Error();
      if (2 < arguments.length) {
        var d = Array.prototype.slice.call(arguments, 2);
        return function() {
          var e = Array.prototype.slice.call(arguments);
          Array.prototype.unshift.apply(e, d);
          return a2.apply(b2, e);
        };
      }
      return function() {
        return a2.apply(b2, arguments);
      };
    };
    goog.bind = function(a2, b2, c) {
      Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1 ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
      return goog.bind.apply(null, arguments);
    };
    goog.partial = function(a2, b2) {
      var c = Array.prototype.slice.call(arguments, 1);
      return function() {
        var d = c.slice();
        d.push.apply(d, arguments);
        return a2.apply(this, d);
      };
    };
    goog.mixin = function(a2, b2) {
      for (var c in b2)
        a2[c] = b2[c];
    };
    goog.now = function() {
      return Date.now();
    };
    goog.globalEval = function(a2) {
      (0, eval)(a2);
    };
    goog.getCssName = function(a2, b2) {
      if (String(a2).charAt(0) == ".")
        throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a2);
      var c = function(e) {
        return goog.cssNameMapping_[e] || e;
      }, d = function(e) {
        e = e.split("-");
        for (var f = [], g = 0; g < e.length; g++)
          f.push(c(e[g]));
        return f.join("-");
      };
      d = goog.cssNameMapping_ ? goog.cssNameMappingStyle_ == "BY_WHOLE" ? c : d : function(e) {
        return e;
      };
      a2 = b2 ? a2 + "-" + d(b2) : d(a2);
      return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a2) : a2;
    };
    goog.setCssNameMapping = function(a2, b2) {
      goog.cssNameMapping_ = a2;
      goog.cssNameMappingStyle_ = b2;
    };
    goog.getMsg = function(a2, b2, c) {
      c && c.html && (a2 = a2.replace(/</g, "&lt;"));
      c && c.unescapeHtmlEntities && (a2 = a2.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "&"));
      b2 && (a2 = a2.replace(/\{\$([^}]+)}/g, function(d, e) {
        return b2 != null && e in b2 ? b2[e] : d;
      }));
      return a2;
    };
    goog.getMsgWithFallback = function(a2) {
      return a2;
    };
    goog.exportSymbol = function(a2, b2, c) {
      goog.exportPath_(a2, b2, true, c);
    };
    goog.exportProperty = function(a2, b2, c) {
      a2[b2] = c;
    };
    goog.inherits = function(a2, b2) {
      function c() {
      }
      c.prototype = b2.prototype;
      a2.superClass_ = b2.prototype;
      a2.prototype = new c();
      a2.prototype.constructor = a2;
      a2.base = function(d, e, f) {
        for (var g = Array(arguments.length - 2), k = 2; k < arguments.length; k++)
          g[k - 2] = arguments[k];
        return b2.prototype[e].apply(d, g);
      };
    };
    goog.scope = function(a2) {
      if (goog.isInModuleLoader_())
        throw Error("goog.scope is not supported within a module.");
      a2.call(goog.global);
    };
    goog.defineClass = function(a2, b2) {
      var c = b2.constructor, d = b2.statics;
      c && c != Object.prototype.constructor || (c = function() {
        throw Error("cannot instantiate an interface (no constructor defined).");
      });
      c = goog.defineClass.createSealingConstructor_(c, a2);
      a2 && goog.inherits(c, a2);
      delete b2.constructor;
      delete b2.statics;
      goog.defineClass.applyProperties_(c.prototype, b2);
      d != null && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
      return c;
    };
    goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
    goog.defineClass.createSealingConstructor_ = function(a2) {
      return goog.defineClass.SEAL_CLASS_INSTANCES ? function() {
        var b2 = a2.apply(this, arguments) || this;
        b2[goog.UID_PROPERTY_] = b2[goog.UID_PROPERTY_];
        return b2;
      } : a2;
    };
    goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    goog.defineClass.applyProperties_ = function(a2, b2) {
      for (var c in b2)
        Object.prototype.hasOwnProperty.call(b2, c) && (a2[c] = b2[c]);
      for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++)
        c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b2, c) && (a2[c] = b2[c]);
    };
    goog.identity_ = function(a2) {
      return a2;
    };
    goog.createTrustedTypesPolicy = function(a2) {
      var b2 = null, c = goog.global.trustedTypes;
      if (!c || !c.createPolicy)
        return b2;
      try {
        b2 = c.createPolicy(a2, { createHTML: goog.identity_, createScript: goog.identity_, createScriptURL: goog.identity_ });
      } catch (d) {
        goog.logToConsole_(d.message);
      }
      return b2;
    };
    var module$exports$jspb$BinaryConstants = { FieldType: { INVALID: -1, DOUBLE: 1, FLOAT: 2, INT64: 3, UINT64: 4, INT32: 5, FIXED64: 6, FIXED32: 7, BOOL: 8, STRING: 9, GROUP: 10, MESSAGE: 11, BYTES: 12, UINT32: 13, ENUM: 14, SFIXED32: 15, SFIXED64: 16, SINT32: 17, SINT64: 18 }, WireType: { INVALID: -1, VARINT: 0, FIXED64: 1, DELIMITED: 2, START_GROUP: 3, END_GROUP: 4, FIXED32: 5 } };
    function module$contents$jspb$BinaryConstants_isValidWireType(a2) {
      return 0 <= a2 && 5 >= a2;
    }
    function module$contents$jspb$BinaryConstants_FieldTypeToWireType(a2) {
      switch (a2) {
        case module$exports$jspb$BinaryConstants.FieldType.INT32:
        case module$exports$jspb$BinaryConstants.FieldType.INT64:
        case module$exports$jspb$BinaryConstants.FieldType.UINT32:
        case module$exports$jspb$BinaryConstants.FieldType.UINT64:
        case module$exports$jspb$BinaryConstants.FieldType.SINT32:
        case module$exports$jspb$BinaryConstants.FieldType.SINT64:
        case module$exports$jspb$BinaryConstants.FieldType.BOOL:
        case module$exports$jspb$BinaryConstants.FieldType.ENUM:
          return module$exports$jspb$BinaryConstants.WireType.VARINT;
        case module$exports$jspb$BinaryConstants.FieldType.DOUBLE:
        case module$exports$jspb$BinaryConstants.FieldType.FIXED64:
        case module$exports$jspb$BinaryConstants.FieldType.SFIXED64:
          return module$exports$jspb$BinaryConstants.WireType.FIXED64;
        case module$exports$jspb$BinaryConstants.FieldType.STRING:
        case module$exports$jspb$BinaryConstants.FieldType.MESSAGE:
        case module$exports$jspb$BinaryConstants.FieldType.BYTES:
          return module$exports$jspb$BinaryConstants.WireType.DELIMITED;
        case module$exports$jspb$BinaryConstants.FieldType.FLOAT:
        case module$exports$jspb$BinaryConstants.FieldType.FIXED32:
        case module$exports$jspb$BinaryConstants.FieldType.SFIXED32:
          return module$exports$jspb$BinaryConstants.WireType.FIXED32;
        default:
          return module$exports$jspb$BinaryConstants.WireType.INVALID;
      }
    }
    module$exports$jspb$BinaryConstants.INVALID_FIELD_NUMBER = -1;
    module$exports$jspb$BinaryConstants.INVALID_TAG = -1;
    module$exports$jspb$BinaryConstants.FLOAT32_EPS = 1401298464324817e-60;
    module$exports$jspb$BinaryConstants.FLOAT32_MIN = 11754943508222875e-54;
    module$exports$jspb$BinaryConstants.FLOAT32_MAX = 34028234663852886e22;
    module$exports$jspb$BinaryConstants.FLOAT64_EPS = 5e-324;
    module$exports$jspb$BinaryConstants.FLOAT64_MIN = 22250738585072014e-324;
    module$exports$jspb$BinaryConstants.FLOAT64_MAX = 17976931348623157e292;
    module$exports$jspb$BinaryConstants.TWO_TO_20 = 1048576;
    module$exports$jspb$BinaryConstants.TWO_TO_23 = 8388608;
    module$exports$jspb$BinaryConstants.TWO_TO_31 = 2147483648;
    module$exports$jspb$BinaryConstants.TWO_TO_32 = 4294967296;
    module$exports$jspb$BinaryConstants.TWO_TO_52 = 4503599627370496;
    module$exports$jspb$BinaryConstants.TWO_TO_63 = 9223372036854776e3;
    module$exports$jspb$BinaryConstants.TWO_TO_64 = 18446744073709552e3;
    module$exports$jspb$BinaryConstants.ZERO_HASH = "\0\0\0\0\0\0\0\0";
    module$exports$jspb$BinaryConstants.FieldTypeToWireType = module$contents$jspb$BinaryConstants_FieldTypeToWireType;
    module$exports$jspb$BinaryConstants.isValidWireType = module$contents$jspb$BinaryConstants_isValidWireType;
    var jspb = {};
    jspb.ByteSource = {}.ByteSource;
    function module$contents$jspb$binary$errors_invalidWireTypeError(a2, b2) {
      return Error("Invalid wire type: " + a2 + " (at position " + b2 + ")");
    }
    function module$contents$jspb$binary$errors_invalidVarintError() {
      return Error("Failed to read varint, encoding is invalid.");
    }
    function module$contents$jspb$binary$errors_readTooFarError(a2, b2) {
      return Error("Tried to read past the end of the data " + b2 + " > " + a2);
    }
    goog.debug = {};
    function module$contents$goog$debug$Error_DebugError(a2, b2) {
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, module$contents$goog$debug$Error_DebugError);
      else {
        var c = Error().stack;
        c && (this.stack = c);
      }
      a2 && (this.message = String(a2));
      b2 !== void 0 && (this.cause = b2);
      this.reportErrorToServer = true;
    }
    goog.inherits(module$contents$goog$debug$Error_DebugError, Error);
    module$contents$goog$debug$Error_DebugError.prototype.name = "CustomError";
    goog.debug.Error = module$contents$goog$debug$Error_DebugError;
    goog.dom = {};
    goog.dom.NodeType = { ELEMENT: 1, ATTRIBUTE: 2, TEXT: 3, CDATA_SECTION: 4, ENTITY_REFERENCE: 5, ENTITY: 6, PROCESSING_INSTRUCTION: 7, COMMENT: 8, DOCUMENT: 9, DOCUMENT_TYPE: 10, DOCUMENT_FRAGMENT: 11, NOTATION: 12 };
    goog.asserts = {};
    goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
    goog.asserts.AssertionError = function(a2, b2) {
      module$contents$goog$debug$Error_DebugError.call(this, goog.asserts.subs_(a2, b2));
      this.messagePattern = a2;
    };
    goog.inherits(goog.asserts.AssertionError, module$contents$goog$debug$Error_DebugError);
    goog.asserts.AssertionError.prototype.name = "AssertionError";
    goog.asserts.DEFAULT_ERROR_HANDLER = function(a2) {
      throw a2;
    };
    goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
    goog.asserts.subs_ = function(a2, b2) {
      a2 = a2.split("%s");
      for (var c = "", d = a2.length - 1, e = 0; e < d; e++)
        c += a2[e] + (e < b2.length ? b2[e] : "%s");
      return c + a2[d];
    };
    goog.asserts.doAssertFailure_ = function(a2, b2, c, d) {
      var e = "Assertion failed";
      if (c) {
        e += ": " + c;
        var f = d;
      } else
        a2 && (e += ": " + a2, f = b2);
      a2 = new goog.asserts.AssertionError("" + e, f || []);
      goog.asserts.errorHandler_(a2);
    };
    goog.asserts.setErrorHandler = function(a2) {
      goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a2);
    };
    goog.asserts.assert = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && !a2 && goog.asserts.doAssertFailure_("", null, b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertExists = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && a2 == null && goog.asserts.doAssertFailure_("Expected to exist: %s.", [a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.fail = function(a2, b2) {
      goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a2 ? ": " + a2 : ""), Array.prototype.slice.call(arguments, 1)));
    };
    goog.asserts.assertNumber = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && typeof a2 !== "number" && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertString = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && typeof a2 !== "string" && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertFunction = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && typeof a2 !== "function" && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertObject = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && !goog.isObject(a2) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertArray = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && !Array.isArray(a2) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertBoolean = function(a2, b2, c) {
      goog.asserts.ENABLE_ASSERTS && typeof a2 !== "boolean" && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertElement = function(a2, b2, c) {
      !goog.asserts.ENABLE_ASSERTS || goog.isObject(a2) && a2.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a2), a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.assertInstanceof = function(a2, b2, c, d) {
      !goog.asserts.ENABLE_ASSERTS || a2 instanceof b2 || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b2), goog.asserts.getType_(a2)], c, Array.prototype.slice.call(arguments, 3));
      return a2;
    };
    goog.asserts.assertFinite = function(a2, b2, c) {
      !goog.asserts.ENABLE_ASSERTS || typeof a2 == "number" && isFinite(a2) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [a2], b2, Array.prototype.slice.call(arguments, 2));
      return a2;
    };
    goog.asserts.getType_ = function(a2) {
      return a2 instanceof Function ? a2.displayName || a2.name || "unknown type name" : a2 instanceof Object ? a2.constructor.displayName || a2.constructor.name || Object.prototype.toString.call(a2) : a2 === null ? "null" : typeof a2;
    };
    var module$contents$jspb$binary$utf8_ENFORCE_UTF8 = goog.DEBUG ? "ALWAYS" : "DEFAULT";
    (0, goog.asserts.assert)(module$contents$jspb$binary$utf8_ENFORCE_UTF8 === "NEVER" || module$contents$jspb$binary$utf8_ENFORCE_UTF8 === "DEFAULT" || module$contents$jspb$binary$utf8_ENFORCE_UTF8 === "ALWAYS");
    var module$contents$jspb$binary$utf8_REJECT_UNPAIRED_SURROGATES = goog.DEBUG;
    var module$contents$jspb$binary$utf8_USE_TEXT_ENCODING = 2020 <= goog.FEATURESET_YEAR;
    function module$contents$jspb$binary$utf8_utf8ErrorsAreFatal(a2) {
      return module$contents$jspb$binary$utf8_ENFORCE_UTF8 === "ALWAYS" ? true : module$contents$jspb$binary$utf8_ENFORCE_UTF8 === "NEVER" ? false : a2;
    }
    function module$contents$jspb$binary$utf8_invalid(a2, b2) {
      if (module$contents$jspb$binary$utf8_utf8ErrorsAreFatal(a2))
        throw Error("Invalid UTF8");
      b2.push(65533);
    }
    function module$contents$jspb$binary$utf8_codeUnitsToString(a2, b2) {
      b2 = String.fromCharCode.apply(null, b2);
      return a2 == null ? b2 : a2 + b2;
    }
    function module$contents$jspb$binary$utf8_polyfillDecodeUtf8(a2, b2, c, d) {
      c = b2 + c;
      for (var e = [], f = null, g, k, h, l; b2 < c; )
        g = a2[b2++], 128 > g ? e.push(g) : 224 > g ? b2 >= c ? module$contents$jspb$binary$utf8_invalid(d, e) : (k = a2[b2++], 194 > g || (k & 192) !== 128 ? (b2--, module$contents$jspb$binary$utf8_invalid(d, e)) : (g = (g & 31) << 6 | k & 63, (0, goog.asserts.assert)(128 <= g && 2047 >= g), e.push(g))) : 240 > g ? b2 >= c - 1 ? module$contents$jspb$binary$utf8_invalid(d, e) : (k = a2[b2++], (k & 192) !== 128 || g === 224 && 160 > k || g === 237 && 160 <= k || ((h = a2[b2++]) & 192) !== 128 ? (b2--, module$contents$jspb$binary$utf8_invalid(d, e)) : (g = (g & 15) << 12 | (k & 63) << 6 | h & 63, (0, goog.asserts.assert)(2048 <= g && 65535 >= g), (0, goog.asserts.assert)(55296 > g || 57343 < g), e.push(g))) : 244 >= g ? b2 >= c - 2 ? module$contents$jspb$binary$utf8_invalid(d, e) : (k = a2[b2++], (k & 192) !== 128 || (g << 28) + (k - 144) >> 30 !== 0 || ((h = a2[b2++]) & 192) !== 128 || ((l = a2[b2++]) & 192) !== 128 ? (b2--, module$contents$jspb$binary$utf8_invalid(d, e)) : (g = (g & 7) << 18 | (k & 63) << 12 | (h & 63) << 6 | l & 63, (0, goog.asserts.assert)(65536 <= g && 1114111 >= g), g -= 65536, e.push((g >> 10 & 1023) + 55296, (g & 1023) + 56320))) : module$contents$jspb$binary$utf8_invalid(d, e), 8192 <= e.length && (f = module$contents$jspb$binary$utf8_codeUnitsToString(f, e), e.length = 0);
      (0, goog.asserts.assert)(b2 === c, "expected " + b2 + " === " + c);
      return module$contents$jspb$binary$utf8_codeUnitsToString(f, e);
    }
    var module$contents$jspb$binary$utf8_fatalDecoderInstance;
    function module$contents$jspb$binary$utf8_getFatalDecoderInstance() {
      var a2 = module$contents$jspb$binary$utf8_fatalDecoderInstance;
      a2 || (a2 = module$contents$jspb$binary$utf8_fatalDecoderInstance = new TextDecoder("utf-8", { fatal: true }));
      return a2;
    }
    var module$contents$jspb$binary$utf8_nonFatalDecoderInstance;
    function module$contents$jspb$binary$utf8_getNonFatalDecoderInstance() {
      var a2 = module$contents$jspb$binary$utf8_nonFatalDecoderInstance;
      a2 || (a2 = module$contents$jspb$binary$utf8_nonFatalDecoderInstance = new TextDecoder("utf-8", { fatal: false }));
      return a2;
    }
    var module$contents$jspb$binary$utf8_useTextDecoderDecode = module$contents$jspb$binary$utf8_USE_TEXT_ENCODING || typeof TextDecoder !== "undefined";
    var module$contents$jspb$binary$utf8_textEncoderInstance;
    var module$contents$jspb$binary$utf8_useTextEncoderEncode = module$contents$jspb$binary$utf8_USE_TEXT_ENCODING || typeof TextEncoder !== "undefined";
    function module$contents$jspb$binary$utf8_encodeUtf8(a2, b2) {
      (0, goog.asserts.assertString)(a2);
      if (module$contents$jspb$binary$utf8_useTextEncoderEncode) {
        if (((b2 === void 0 ? 0 : b2) || module$contents$jspb$binary$utf8_REJECT_UNPAIRED_SURROGATES) && /(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(a2))
          throw Error("Found an unpaired surrogate");
        a2 = (module$contents$jspb$binary$utf8_textEncoderInstance || (module$contents$jspb$binary$utf8_textEncoderInstance = new TextEncoder())).encode(a2);
      } else {
        b2 = b2 === void 0 ? false : b2;
        for (var c = 0, d = new Uint8Array(3 * a2.length), e = 0; e < a2.length; e++) {
          var f = a2.charCodeAt(e);
          if (128 > f)
            d[c++] = f;
          else {
            if (2048 > f)
              d[c++] = f >> 6 | 192;
            else {
              (0, goog.asserts.assert)(65536 > f);
              if (55296 <= f && 57343 >= f) {
                if (56319 >= f && e < a2.length) {
                  var g = a2.charCodeAt(++e);
                  if (56320 <= g && 57343 >= g) {
                    f = 1024 * (f - 55296) + g - 56320 + 65536;
                    d[c++] = f >> 18 | 240;
                    d[c++] = f >> 12 & 63 | 128;
                    d[c++] = f >> 6 & 63 | 128;
                    d[c++] = f & 63 | 128;
                    continue;
                  } else
                    e--;
                }
                if (b2 || module$contents$jspb$binary$utf8_REJECT_UNPAIRED_SURROGATES)
                  throw Error("Found an unpaired surrogate");
                f = 65533;
              }
              d[c++] = f >> 12 | 224;
              d[c++] = f >> 6 & 63 | 128;
            }
            d[c++] = f & 63 | 128;
          }
        }
        a2 = d.subarray(0, c);
      }
      return a2;
    }
    goog.crypt = {};
    goog.crypt.stringToByteArray = function(a2) {
      for (var b2 = [], c = 0, d = 0; d < a2.length; d++) {
        var e = a2.charCodeAt(d);
        255 < e && (b2[c++] = e & 255, e >>= 8);
        b2[c++] = e;
      }
      return b2;
    };
    goog.crypt.byteArrayToString = function(a2) {
      if (8192 >= a2.length)
        return String.fromCharCode.apply(null, a2);
      for (var b2 = "", c = 0; c < a2.length; c += 8192) {
        var d = Array.prototype.slice.call(a2, c, c + 8192);
        b2 += String.fromCharCode.apply(null, d);
      }
      return b2;
    };
    goog.crypt.byteArrayToHex = function(a2, b2) {
      return Array.prototype.map.call(a2, function(c) {
        c = c.toString(16);
        return 1 < c.length ? c : "0" + c;
      }).join(b2 || "");
    };
    goog.crypt.hexToByteArray = function(a2) {
      goog.asserts.assert(a2.length % 2 == 0, "Key string length must be multiple of 2");
      for (var b2 = [], c = 0; c < a2.length; c += 2)
        b2.push(parseInt(a2.substring(c, c + 2), 16));
      return b2;
    };
    goog.crypt.stringToUtf8ByteArray = function(a2) {
      for (var b2 = [], c = 0, d = 0; d < a2.length; d++) {
        var e = a2.charCodeAt(d);
        128 > e ? b2[c++] = e : (2048 > e ? b2[c++] = e >> 6 | 192 : ((e & 64512) == 55296 && d + 1 < a2.length && (a2.charCodeAt(d + 1) & 64512) == 56320 ? (e = 65536 + ((e & 1023) << 10) + (a2.charCodeAt(++d) & 1023), b2[c++] = e >> 18 | 240, b2[c++] = e >> 12 & 63 | 128) : b2[c++] = e >> 12 | 224, b2[c++] = e >> 6 & 63 | 128), b2[c++] = e & 63 | 128);
      }
      return b2;
    };
    goog.crypt.utf8ByteArrayToString = function(a2) {
      for (var b2 = [], c = 0, d = 0; c < a2.length; ) {
        var e = a2[c++];
        if (128 > e)
          b2[d++] = String.fromCharCode(e);
        else if (191 < e && 224 > e) {
          var f = a2[c++];
          b2[d++] = String.fromCharCode((e & 31) << 6 | f & 63);
        } else if (239 < e && 365 > e) {
          f = a2[c++];
          var g = a2[c++], k = a2[c++];
          e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | k & 63) - 65536;
          b2[d++] = String.fromCharCode(55296 + (e >> 10));
          b2[d++] = String.fromCharCode(56320 + (e & 1023));
        } else
          f = a2[c++], g = a2[c++], b2[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);
      }
      return b2.join("");
    };
    goog.crypt.xorByteArray = function(a2, b2) {
      goog.asserts.assert(a2.length == b2.length, "XOR array lengths must match");
      for (var c = [], d = 0; d < a2.length; d++)
        c.push(a2[d] ^ b2[d]);
      return c;
    };
    goog.string = {};
    goog.string.internal = {};
    goog.string.internal.startsWith = function(a2, b2) {
      return a2.lastIndexOf(b2, 0) == 0;
    };
    goog.string.internal.endsWith = function(a2, b2) {
      var c = a2.length - b2.length;
      return 0 <= c && a2.indexOf(b2, c) == c;
    };
    goog.string.internal.caseInsensitiveStartsWith = function(a2, b2) {
      return goog.string.internal.caseInsensitiveCompare(b2, a2.substr(0, b2.length)) == 0;
    };
    goog.string.internal.caseInsensitiveEndsWith = function(a2, b2) {
      return goog.string.internal.caseInsensitiveCompare(b2, a2.substr(a2.length - b2.length, b2.length)) == 0;
    };
    goog.string.internal.caseInsensitiveEquals = function(a2, b2) {
      return a2.toLowerCase() == b2.toLowerCase();
    };
    goog.string.internal.isEmptyOrWhitespace = function(a2) {
      return /^[\s\xa0]*$/.test(a2);
    };
    goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a2) {
      return a2.trim();
    } : function(a2) {
      return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a2)[1];
    };
    goog.string.internal.caseInsensitiveCompare = function(a2, b2) {
      a2 = String(a2).toLowerCase();
      b2 = String(b2).toLowerCase();
      return a2 < b2 ? -1 : a2 == b2 ? 0 : 1;
    };
    goog.string.internal.newLineToBr = function(a2, b2) {
      return a2.replace(/(\r\n|\r|\n)/g, b2 ? "<br />" : "<br>");
    };
    goog.string.internal.htmlEscape = function(a2, b2) {
      if (b2)
        a2 = a2.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
      else {
        if (!goog.string.internal.ALL_RE_.test(a2))
          return a2;
        a2.indexOf("&") != -1 && (a2 = a2.replace(goog.string.internal.AMP_RE_, "&amp;"));
        a2.indexOf("<") != -1 && (a2 = a2.replace(goog.string.internal.LT_RE_, "&lt;"));
        a2.indexOf(">") != -1 && (a2 = a2.replace(goog.string.internal.GT_RE_, "&gt;"));
        a2.indexOf('"') != -1 && (a2 = a2.replace(goog.string.internal.QUOT_RE_, "&quot;"));
        a2.indexOf("'") != -1 && (a2 = a2.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;"));
        a2.indexOf("\0") != -1 && (a2 = a2.replace(goog.string.internal.NULL_RE_, "&#0;"));
      }
      return a2;
    };
    goog.string.internal.AMP_RE_ = /&/g;
    goog.string.internal.LT_RE_ = /</g;
    goog.string.internal.GT_RE_ = />/g;
    goog.string.internal.QUOT_RE_ = /"/g;
    goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
    goog.string.internal.NULL_RE_ = /\x00/g;
    goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
    goog.string.internal.whitespaceEscape = function(a2, b2) {
      return goog.string.internal.newLineToBr(a2.replace(/  /g, " &#160;"), b2);
    };
    goog.string.internal.contains = function(a2, b2) {
      return a2.indexOf(b2) != -1;
    };
    goog.string.internal.caseInsensitiveContains = function(a2, b2) {
      return goog.string.internal.contains(a2.toLowerCase(), b2.toLowerCase());
    };
    goog.string.internal.compareVersions = function(a2, b2) {
      var c = 0;
      a2 = goog.string.internal.trim(String(a2)).split(".");
      b2 = goog.string.internal.trim(String(b2)).split(".");
      for (var d = Math.max(a2.length, b2.length), e = 0; c == 0 && e < d; e++) {
        var f = a2[e] || "", g = b2[e] || "";
        do {
          f = /(\d*)(\D*)(.*)/.exec(f) || ["", "", "", ""];
          g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
          if (f[0].length == 0 && g[0].length == 0)
            break;
          c = goog.string.internal.compareElements_(f[1].length == 0 ? 0 : parseInt(f[1], 10), g[1].length == 0 ? 0 : parseInt(g[1], 10)) || goog.string.internal.compareElements_(f[2].length == 0, g[2].length == 0) || goog.string.internal.compareElements_(f[2], g[2]);
          f = f[3];
          g = g[3];
        } while (c == 0);
      }
      return c;
    };
    goog.string.internal.compareElements_ = function(a2, b2) {
      return a2 < b2 ? -1 : a2 > b2 ? 1 : 0;
    };
    var module$exports$goog$labs$userAgent = { USE_CLIENT_HINTS: false };
    goog.labs = {};
    goog.labs.userAgent = {};
    goog.labs.userAgent.util = {};
    function module$contents$goog$labs$userAgent$util_getNativeUserAgentString() {
      var a2 = goog.global.navigator;
      return a2 && (a2 = a2.userAgent) ? a2 : "";
    }
    function module$contents$goog$labs$userAgent$util_getNativeUserAgentData() {
      if (!module$exports$goog$labs$userAgent.USE_CLIENT_HINTS)
        return null;
      var a2 = goog.global.navigator;
      return a2 ? a2.userAgentData || null : null;
    }
    var module$contents$goog$labs$userAgent$util_userAgentInternal = null;
    var module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
    function module$contents$goog$labs$userAgent$util_getUserAgent() {
      return module$contents$goog$labs$userAgent$util_userAgentInternal == null ? module$contents$goog$labs$userAgent$util_getNativeUserAgentString() : module$contents$goog$labs$userAgent$util_userAgentInternal;
    }
    function module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a2) {
      var b2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal;
      return b2 ? b2.brands.some(function(c) {
        return (c = c.brand) && (0, goog.string.internal.contains)(c, a2);
      }) : false;
    }
    function module$contents$goog$labs$userAgent$util_matchUserAgent(a2) {
      return (0, goog.string.internal.contains)(module$contents$goog$labs$userAgent$util_getUserAgent(), a2);
    }
    function module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a2) {
      return (0, goog.string.internal.caseInsensitiveContains)(module$contents$goog$labs$userAgent$util_getUserAgent(), a2);
    }
    function module$contents$goog$labs$userAgent$util_extractVersionTuples(a2) {
      for (var b2 = RegExp("([A-Z][\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [], d; d = b2.exec(a2); )
        c.push([d[1], d[2], d[3] || void 0]);
      return c;
    }
    goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT = false;
    goog.labs.userAgent.util.extractVersionTuples = module$contents$goog$labs$userAgent$util_extractVersionTuples;
    goog.labs.userAgent.util.getNativeUserAgentString = module$contents$goog$labs$userAgent$util_getNativeUserAgentString;
    goog.labs.userAgent.util.getUserAgent = module$contents$goog$labs$userAgent$util_getUserAgent;
    goog.labs.userAgent.util.getUserAgentData = function() {
      return module$contents$goog$labs$userAgent$util_userAgentDataInternal;
    };
    goog.labs.userAgent.util.matchUserAgent = module$contents$goog$labs$userAgent$util_matchUserAgent;
    goog.labs.userAgent.util.matchUserAgentDataBrand = module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;
    goog.labs.userAgent.util.matchUserAgentIgnoreCase = module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;
    goog.labs.userAgent.util.resetUserAgentData = function() {
      module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
    };
    goog.labs.userAgent.util.setUserAgent = function(a2) {
      module$contents$goog$labs$userAgent$util_userAgentInternal = typeof a2 === "string" ? a2 : module$contents$goog$labs$userAgent$util_getNativeUserAgentString();
    };
    goog.labs.userAgent.util.setUserAgentData = function(a2) {
      module$contents$goog$labs$userAgent$util_userAgentDataInternal = a2;
    };
    var module$exports$goog$labs$userAgent$highEntropy$highEntropyValue = { AsyncValue: function() {
    } };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.AsyncValue.prototype.getIfLoaded = function() {
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.AsyncValue.prototype.load = function() {
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue = function(a2) {
      this.key_ = a2;
      this.promise_ = this.value_ = void 0;
      this.pending_ = false;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.getIfLoaded = function() {
      if (module$contents$goog$labs$userAgent$util_userAgentDataInternal)
        return this.value_;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.load = function() {
      var a2 = this, b2;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(c) {
        if (c.nextAddress == 1) {
          b2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal;
          if (!b2)
            return c.return(void 0);
          a2.promise_ || (a2.pending_ = true, a2.promise_ = function() {
            var d;
            return $jscomp.asyncExecutePromiseGeneratorProgram(function(e) {
              if (e.nextAddress == 1)
                return e.setFinallyBlock(2), e.yield(b2.getHighEntropyValues([a2.key_]), 4);
              if (e.nextAddress != 2)
                return d = e.yieldResult, a2.value_ = d[a2.key_], e.return(a2.value_);
              e.enterFinallyBlock();
              a2.pending_ = false;
              return e.leaveFinallyBlock(0);
            });
          }());
          return c.yield(a2.promise_, 2);
        }
        return c.return(c.yieldResult);
      });
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue.prototype.resetForTesting = function() {
      if (this.pending_)
        throw Error("Unsafe call to resetForTesting");
      this.value_ = this.promise_ = void 0;
      this.pending_ = false;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version = function(a2) {
      this.versionString_ = a2;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version.prototype.toVersionStringForLogging = function() {
      return this.versionString_;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version.prototype.isAtLeast = function(a2) {
      return 0 <= (0, goog.string.internal.compareVersions)(this.versionString_, a2);
    };
    var module$exports$goog$labs$userAgent$highEntropy$highEntropyData = {};
    var module$contents$goog$labs$userAgent$highEntropy$highEntropyData_fullVersionListAvailable = false;
    module$exports$goog$labs$userAgent$highEntropy$highEntropyData.hasFullVersionList = function() {
      return module$contents$goog$labs$userAgent$highEntropy$highEntropyData_fullVersionListAvailable;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyData.setHasFullVersionListForTesting = function(a2) {
      module$contents$goog$labs$userAgent$highEntropy$highEntropyData_fullVersionListAvailable = a2;
    };
    module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("fullVersionList");
    module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.HighEntropyValue("platformVersion");
    module$exports$goog$labs$userAgent$highEntropy$highEntropyData.resetAllForTesting = function() {
      module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.resetForTesting();
      module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.resetForTesting();
    };
    goog.labs.userAgent.browser = {};
    var module$contents$goog$labs$userAgent$browser_Brand = { ANDROID_BROWSER: "Android Browser", CHROMIUM: "Chromium", EDGE: "Microsoft Edge", FIREFOX: "Firefox", IE: "Internet Explorer", OPERA: "Opera", SAFARI: "Safari", SILK: "Silk" };
    goog.labs.userAgent.browser.Brand = module$contents$goog$labs$userAgent$browser_Brand;
    function module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() {
      var a2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal;
      return !!a2 && 0 < a2.brands.length;
    }
    function module$contents$goog$labs$userAgent$browser_matchOpera() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? false : module$contents$goog$labs$userAgent$util_matchUserAgent("Opera");
    }
    function module$contents$goog$labs$userAgent$browser_matchIE() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? false : module$contents$goog$labs$userAgent$util_matchUserAgent("Trident") || module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE");
    }
    function module$contents$goog$labs$userAgent$browser_matchEdgeHtml() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? false : module$contents$goog$labs$userAgent$util_matchUserAgent("Edge");
    }
    function module$contents$goog$labs$userAgent$browser_matchEdgeChromium() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.EDGE) : module$contents$goog$labs$userAgent$util_matchUserAgent("Edg/");
    }
    function module$contents$goog$labs$userAgent$browser_matchOperaChromium() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.OPERA) : module$contents$goog$labs$userAgent$util_matchUserAgent("OPR");
    }
    function module$contents$goog$labs$userAgent$browser_matchFirefox() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Firefox") || module$contents$goog$labs$userAgent$util_matchUserAgent("FxiOS");
    }
    function module$contents$goog$labs$userAgent$browser_matchSafari() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Safari") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchCoast() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml() || module$contents$goog$labs$userAgent$browser_matchEdgeChromium() || module$contents$goog$labs$userAgent$browser_matchOperaChromium() || module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_isSilk() || module$contents$goog$labs$userAgent$util_matchUserAgent("Android"));
    }
    function module$contents$goog$labs$userAgent$browser_matchCoast() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? false : module$contents$goog$labs$userAgent$util_matchUserAgent("Coast");
    }
    function module$contents$goog$labs$userAgent$browser_matchChrome() {
      return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM) : (module$contents$goog$labs$userAgent$util_matchUserAgent("Chrome") || module$contents$goog$labs$userAgent$util_matchUserAgent("CriOS")) && !module$contents$goog$labs$userAgent$browser_matchEdgeHtml() || module$contents$goog$labs$userAgent$browser_isSilk();
    }
    function module$contents$goog$labs$userAgent$browser_matchAndroidBrowser() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Android") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_isSilk());
    }
    goog.labs.userAgent.browser.isOpera = module$contents$goog$labs$userAgent$browser_matchOpera;
    goog.labs.userAgent.browser.isIE = module$contents$goog$labs$userAgent$browser_matchIE;
    goog.labs.userAgent.browser.isEdge = module$contents$goog$labs$userAgent$browser_matchEdgeHtml;
    goog.labs.userAgent.browser.isEdgeChromium = module$contents$goog$labs$userAgent$browser_matchEdgeChromium;
    goog.labs.userAgent.browser.isOperaChromium = module$contents$goog$labs$userAgent$browser_matchOperaChromium;
    goog.labs.userAgent.browser.isFirefox = module$contents$goog$labs$userAgent$browser_matchFirefox;
    goog.labs.userAgent.browser.isSafari = module$contents$goog$labs$userAgent$browser_matchSafari;
    goog.labs.userAgent.browser.isCoast = module$contents$goog$labs$userAgent$browser_matchCoast;
    goog.labs.userAgent.browser.isIosWebview = function() {
      return (module$contents$goog$labs$userAgent$util_matchUserAgent("iPad") || module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone")) && !module$contents$goog$labs$userAgent$browser_matchSafari() && !module$contents$goog$labs$userAgent$browser_matchChrome() && !module$contents$goog$labs$userAgent$browser_matchCoast() && !module$contents$goog$labs$userAgent$browser_matchFirefox() && module$contents$goog$labs$userAgent$util_matchUserAgent("AppleWebKit");
    };
    goog.labs.userAgent.browser.isChrome = module$contents$goog$labs$userAgent$browser_matchChrome;
    goog.labs.userAgent.browser.isAndroidBrowser = module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;
    function module$contents$goog$labs$userAgent$browser_isSilk() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Silk");
    }
    goog.labs.userAgent.browser.isSilk = module$contents$goog$labs$userAgent$browser_isSilk;
    function module$contents$goog$labs$userAgent$browser_createVersionMap(a2) {
      var b2 = {};
      a2.forEach(function(c) {
        b2[c[0]] = c[1];
      });
      return function(c) {
        return b2[c.find(function(d) {
          return d in b2;
        })] || "";
      };
    }
    function module$contents$goog$labs$userAgent$browser_getVersion() {
      var a2 = module$contents$goog$labs$userAgent$util_getUserAgent();
      if (module$contents$goog$labs$userAgent$browser_matchIE())
        return module$contents$goog$labs$userAgent$browser_getIEVersion(a2);
      a2 = module$contents$goog$labs$userAgent$util_extractVersionTuples(a2);
      var b2 = module$contents$goog$labs$userAgent$browser_createVersionMap(a2);
      return module$contents$goog$labs$userAgent$browser_matchOpera() ? b2(["Version", "Opera"]) : module$contents$goog$labs$userAgent$browser_matchEdgeHtml() ? b2(["Edge"]) : module$contents$goog$labs$userAgent$browser_matchEdgeChromium() ? b2(["Edg"]) : module$contents$goog$labs$userAgent$browser_isSilk() ? b2(["Silk"]) : module$contents$goog$labs$userAgent$browser_matchChrome() ? b2(["Chrome", "CriOS", "HeadlessChrome"]) : (a2 = a2[2]) && a2[1] || "";
    }
    goog.labs.userAgent.browser.getVersion = module$contents$goog$labs$userAgent$browser_getVersion;
    goog.labs.userAgent.browser.isVersionOrHigher = function(a2) {
      return 0 <= (0, goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(), a2);
    };
    function module$contents$goog$labs$userAgent$browser_getIEVersion(a2) {
      var b2 = /rv: *([\d\.]*)/.exec(a2);
      if (b2 && b2[1])
        return b2[1];
      b2 = "";
      var c = /MSIE +([\d\.]+)/.exec(a2);
      if (c && c[1])
        if (a2 = /Trident\/(\d.\d)/.exec(a2), c[1] == "7.0")
          if (a2 && a2[1])
            switch (a2[1]) {
              case "4.0":
                b2 = "8.0";
                break;
              case "5.0":
                b2 = "9.0";
                break;
              case "6.0":
                b2 = "10.0";
                break;
              case "7.0":
                b2 = "11.0";
            }
          else
            b2 = "7.0";
        else
          b2 = c[1];
      return b2;
    }
    function module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a2) {
      var b2 = module$contents$goog$labs$userAgent$util_getUserAgent();
      if (a2 === module$contents$goog$labs$userAgent$browser_Brand.IE)
        return module$contents$goog$labs$userAgent$browser_matchIE() ? module$contents$goog$labs$userAgent$browser_getIEVersion(b2) : "";
      b2 = module$contents$goog$labs$userAgent$util_extractVersionTuples(b2);
      var c = module$contents$goog$labs$userAgent$browser_createVersionMap(b2);
      switch (a2) {
        case module$contents$goog$labs$userAgent$browser_Brand.OPERA:
          if (module$contents$goog$labs$userAgent$browser_matchOpera())
            return c([
              "Version",
              "Opera"
            ]);
          if (module$contents$goog$labs$userAgent$browser_matchOperaChromium())
            return c(["OPR"]);
          break;
        case module$contents$goog$labs$userAgent$browser_Brand.EDGE:
          if (module$contents$goog$labs$userAgent$browser_matchEdgeHtml())
            return c(["Edge"]);
          if (module$contents$goog$labs$userAgent$browser_matchEdgeChromium())
            return c(["Edg"]);
          break;
        case module$contents$goog$labs$userAgent$browser_Brand.CHROMIUM:
          if (module$contents$goog$labs$userAgent$browser_matchChrome())
            return c(["Chrome", "CriOS", "HeadlessChrome"]);
      }
      return a2 === module$contents$goog$labs$userAgent$browser_Brand.FIREFOX && module$contents$goog$labs$userAgent$browser_matchFirefox() || a2 === module$contents$goog$labs$userAgent$browser_Brand.SAFARI && module$contents$goog$labs$userAgent$browser_matchSafari() || a2 === module$contents$goog$labs$userAgent$browser_Brand.ANDROID_BROWSER && module$contents$goog$labs$userAgent$browser_matchAndroidBrowser() || a2 === module$contents$goog$labs$userAgent$browser_Brand.SILK && module$contents$goog$labs$userAgent$browser_isSilk() ? (a2 = b2[2]) && a2[1] || "" : "";
    }
    function module$contents$goog$labs$userAgent$browser_versionOf(a2) {
      if (module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() && a2 !== module$contents$goog$labs$userAgent$browser_Brand.SILK) {
        var b2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal.brands.find(function(c) {
          return c.brand === a2;
        });
        if (!b2 || !b2.version)
          return NaN;
        b2 = b2.version.split(".");
      } else {
        b2 = module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a2);
        if (b2 === "")
          return NaN;
        b2 = b2.split(".");
      }
      return b2.length === 0 ? NaN : Number(b2[0]);
    }
    goog.labs.userAgent.browser.versionOf = module$contents$goog$labs$userAgent$browser_versionOf;
    goog.labs.userAgent.browser.isAtLeast = function(a2, b2) {
      goog.asserts.assert(Math.floor(b2) === b2, "Major version must be an integer");
      return module$contents$goog$labs$userAgent$browser_versionOf(a2) >= b2;
    };
    goog.labs.userAgent.browser.isAtMost = function(a2, b2) {
      goog.asserts.assert(Math.floor(b2) === b2, "Major version must be an integer");
      return module$contents$goog$labs$userAgent$browser_versionOf(a2) <= b2;
    };
    var module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion = function(a2) {
      this.brand_ = a2;
    };
    module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion.prototype.getIfLoaded = function() {
      var a2 = this, b2 = module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.getIfLoaded();
      if (b2 !== void 0)
        return b2 = b2.find(function(c) {
          return a2.brand_ === c.brand;
        }), goog.asserts.assertExists(b2), new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(b2.version);
    };
    module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion.prototype.load = function() {
      var a2 = this, b2, c;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(d) {
        if (d.nextAddress == 1)
          return d.yield(module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load(), 2);
        b2 = d.yieldResult;
        c = b2.find(function(e) {
          return a2.brand_ === e.brand;
        });
        goog.asserts.assertExists(c);
        return d.return(new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(c.version));
      });
    };
    var module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion = function(a2) {
      this.version_ = new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a2);
    };
    module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion.prototype.getIfLoaded = function() {
      return this.version_;
    };
    module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion.prototype.load = function() {
      var a2 = this;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(b2) {
        return b2.return(a2.version_);
      });
    };
    goog.labs.userAgent.browser.loadFullVersions = function() {
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(a2) {
        return module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() && module$contents$goog$labs$userAgent$highEntropy$highEntropyData_fullVersionListAvailable ? a2.yield(module$exports$goog$labs$userAgent$highEntropy$highEntropyData.fullVersionList.load(), 0) : a2.jumpTo(0);
      });
    };
    function module$contents$goog$labs$userAgent$browser_fullVersionOf(a2) {
      if (module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand() && module$contents$goog$labs$userAgent$highEntropy$highEntropyData_fullVersionListAvailable)
        return module$contents$goog$labs$userAgent$util_userAgentDataInternal.brands.find(function(c) {
          return c.brand === a2;
        }) ? new module$contents$goog$labs$userAgent$browser_HighEntropyBrandVersion(a2) : void 0;
      var b2 = module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a2);
      return b2 === "" ? void 0 : new module$contents$goog$labs$userAgent$browser_UserAgentStringFallbackBrandVersion(b2);
    }
    goog.labs.userAgent.browser.fullVersionOf = module$contents$goog$labs$userAgent$browser_fullVersionOf;
    goog.labs.userAgent.browser.getVersionStringForLogging = function(a2) {
      if (module$contents$goog$labs$userAgent$browser_useUserAgentDataBrand()) {
        var b2 = module$contents$goog$labs$userAgent$browser_fullVersionOf(a2);
        if (b2) {
          if (b2 = b2.getIfLoaded())
            return b2.toVersionStringForLogging();
          b2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal.brands.find(function(c) {
            return c.brand === a2;
          });
          goog.asserts.assertExists(b2);
          return b2.version;
        }
        return "";
      }
      return module$contents$goog$labs$userAgent$browser_getFullVersionFromUserAgentString(a2);
    };
    goog.labs.userAgent.platform = {};
    function module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() {
      var a2 = module$contents$goog$labs$userAgent$util_userAgentDataInternal;
      return !!a2 && !!a2.platform;
    }
    function module$contents$goog$labs$userAgent$platform_isAndroid() {
      return module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() ? module$contents$goog$labs$userAgent$util_userAgentDataInternal.platform === "Android" : module$contents$goog$labs$userAgent$util_matchUserAgent("Android");
    }
    function module$contents$goog$labs$userAgent$platform_isIpod() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("iPod");
    }
    function module$contents$goog$labs$userAgent$platform_isIphone() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone") && !module$contents$goog$labs$userAgent$util_matchUserAgent("iPod") && !module$contents$goog$labs$userAgent$util_matchUserAgent("iPad");
    }
    function module$contents$goog$labs$userAgent$platform_isIpad() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("iPad");
    }
    function module$contents$goog$labs$userAgent$platform_isIos() {
      return module$contents$goog$labs$userAgent$platform_isIphone() || module$contents$goog$labs$userAgent$platform_isIpad() || module$contents$goog$labs$userAgent$platform_isIpod();
    }
    function module$contents$goog$labs$userAgent$platform_isMacintosh() {
      return module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() ? module$contents$goog$labs$userAgent$util_userAgentDataInternal.platform === "macOS" : module$contents$goog$labs$userAgent$util_matchUserAgent("Macintosh");
    }
    function module$contents$goog$labs$userAgent$platform_isLinux() {
      return module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() ? module$contents$goog$labs$userAgent$util_userAgentDataInternal.platform === "Linux" : module$contents$goog$labs$userAgent$util_matchUserAgent("Linux");
    }
    function module$contents$goog$labs$userAgent$platform_isWindows() {
      return module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() ? module$contents$goog$labs$userAgent$util_userAgentDataInternal.platform === "Windows" : module$contents$goog$labs$userAgent$util_matchUserAgent("Windows");
    }
    function module$contents$goog$labs$userAgent$platform_isChromeOS() {
      return module$contents$goog$labs$userAgent$platform_useUserAgentDataPlatform() ? module$contents$goog$labs$userAgent$util_userAgentDataInternal.platform === "Chrome OS" : module$contents$goog$labs$userAgent$util_matchUserAgent("CrOS");
    }
    function module$contents$goog$labs$userAgent$platform_isKaiOS() {
      return module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase("KaiOS");
    }
    function module$contents$goog$labs$userAgent$platform_getVersion() {
      var a2 = module$contents$goog$labs$userAgent$util_getUserAgent(), b2 = "";
      module$contents$goog$labs$userAgent$platform_isWindows() ? (b2 = /Windows (?:NT|Phone) ([0-9.]+)/, b2 = (a2 = b2.exec(a2)) ? a2[1] : "0.0") : module$contents$goog$labs$userAgent$platform_isIos() ? (b2 = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b2 = (a2 = b2.exec(a2)) && a2[1].replace(/_/g, ".")) : module$contents$goog$labs$userAgent$platform_isMacintosh() ? (b2 = /Mac OS X ([0-9_.]+)/, b2 = (a2 = b2.exec(a2)) ? a2[1].replace(/_/g, ".") : "10") : module$contents$goog$labs$userAgent$platform_isKaiOS() ? (b2 = /(?:KaiOS)\/(\S+)/i, b2 = (a2 = b2.exec(a2)) && a2[1]) : module$contents$goog$labs$userAgent$platform_isAndroid() ? (b2 = /Android\s+([^\);]+)(\)|;)/, b2 = (a2 = b2.exec(a2)) && a2[1]) : module$contents$goog$labs$userAgent$platform_isChromeOS() && (b2 = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b2 = (a2 = b2.exec(a2)) && a2[1]);
      return b2 || "";
    }
    var module$contents$goog$labs$userAgent$platform_PlatformVersion = function() {
    };
    module$contents$goog$labs$userAgent$platform_PlatformVersion.prototype.getIfLoaded = function() {
      if (module$contents$goog$labs$userAgent$util_userAgentDataInternal) {
        var a2 = module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.getIfLoaded();
        if (a2 !== void 0)
          return new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(a2);
      } else
        return new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(module$contents$goog$labs$userAgent$platform_getVersion());
    };
    module$contents$goog$labs$userAgent$platform_PlatformVersion.prototype.load = function() {
      var a2;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(b2) {
        if (b2.nextAddress == 1) {
          if (!module$contents$goog$labs$userAgent$util_userAgentDataInternal)
            return b2.return(new module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version(module$contents$goog$labs$userAgent$platform_getVersion()));
          a2 = module$exports$goog$labs$userAgent$highEntropy$highEntropyValue.Version;
          return b2.yield(module$exports$goog$labs$userAgent$highEntropy$highEntropyData.platformVersion.load(), 3);
        }
        return b2.return(new a2(b2.yieldResult));
      });
    };
    var module$contents$goog$labs$userAgent$platform_version = new module$contents$goog$labs$userAgent$platform_PlatformVersion();
    goog.labs.userAgent.platform.getVersion = module$contents$goog$labs$userAgent$platform_getVersion;
    goog.labs.userAgent.platform.isAndroid = module$contents$goog$labs$userAgent$platform_isAndroid;
    goog.labs.userAgent.platform.isChromeOS = module$contents$goog$labs$userAgent$platform_isChromeOS;
    goog.labs.userAgent.platform.isChromecast = function() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("CrKey");
    };
    goog.labs.userAgent.platform.isIos = module$contents$goog$labs$userAgent$platform_isIos;
    goog.labs.userAgent.platform.isIpad = module$contents$goog$labs$userAgent$platform_isIpad;
    goog.labs.userAgent.platform.isIphone = module$contents$goog$labs$userAgent$platform_isIphone;
    goog.labs.userAgent.platform.isIpod = module$contents$goog$labs$userAgent$platform_isIpod;
    goog.labs.userAgent.platform.isKaiOS = module$contents$goog$labs$userAgent$platform_isKaiOS;
    goog.labs.userAgent.platform.isLinux = module$contents$goog$labs$userAgent$platform_isLinux;
    goog.labs.userAgent.platform.isMacintosh = module$contents$goog$labs$userAgent$platform_isMacintosh;
    goog.labs.userAgent.platform.isVersionOrHigher = function(a2) {
      return 0 <= goog.string.internal.compareVersions(module$contents$goog$labs$userAgent$platform_getVersion(), a2);
    };
    goog.labs.userAgent.platform.isWindows = module$contents$goog$labs$userAgent$platform_isWindows;
    goog.labs.userAgent.platform.version = module$contents$goog$labs$userAgent$platform_version;
    goog.array = {};
    goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
    var module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;
    goog.array.ASSUME_NATIVE_FUNCTIONS = module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;
    function module$contents$goog$array_peek(a2) {
      return a2[a2.length - 1];
    }
    goog.array.peek = module$contents$goog$array_peek;
    goog.array.last = module$contents$goog$array_peek;
    var module$contents$goog$array_indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.indexOf.call(a2, b2, c);
    } : function(a2, b2, c) {
      c = c == null ? 0 : 0 > c ? Math.max(0, a2.length + c) : c;
      if (typeof a2 === "string")
        return typeof b2 !== "string" || b2.length != 1 ? -1 : a2.indexOf(b2, c);
      for (; c < a2.length; c++)
        if (c in a2 && a2[c] === b2)
          return c;
      return -1;
    };
    goog.array.indexOf = module$contents$goog$array_indexOf;
    var module$contents$goog$array_lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.lastIndexOf.call(a2, b2, c == null ? a2.length - 1 : c);
    } : function(a2, b2, c) {
      c = c == null ? a2.length - 1 : c;
      0 > c && (c = Math.max(0, a2.length + c));
      if (typeof a2 === "string")
        return typeof b2 !== "string" || b2.length != 1 ? -1 : a2.lastIndexOf(b2, c);
      for (; 0 <= c; c--)
        if (c in a2 && a2[c] === b2)
          return c;
      return -1;
    };
    goog.array.lastIndexOf = module$contents$goog$array_lastIndexOf;
    var module$contents$goog$array_forEach = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      Array.prototype.forEach.call(a2, b2, c);
    } : function(a2, b2, c) {
      for (var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2, f = 0; f < d; f++)
        f in e && b2.call(c, e[f], f, a2);
    };
    goog.array.forEach = module$contents$goog$array_forEach;
    function module$contents$goog$array_forEachRight(a2, b2, c) {
      var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2;
      for (--d; 0 <= d; --d)
        d in e && b2.call(c, e[d], d, a2);
    }
    goog.array.forEachRight = module$contents$goog$array_forEachRight;
    goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.filter.call(a2, b2, c);
    } : function(a2, b2, c) {
      for (var d = a2.length, e = [], f = 0, g = typeof a2 === "string" ? a2.split("") : a2, k = 0; k < d; k++)
        if (k in g) {
          var h = g[k];
          b2.call(c, h, k, a2) && (e[f++] = h);
        }
      return e;
    };
    var module$contents$goog$array_map = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.map.call(a2, b2, c);
    } : function(a2, b2, c) {
      for (var d = a2.length, e = Array(d), f = typeof a2 === "string" ? a2.split("") : a2, g = 0; g < d; g++)
        g in f && (e[g] = b2.call(c, f[g], g, a2));
      return e;
    };
    goog.array.map = module$contents$goog$array_map;
    goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a2, b2, c, d) {
      goog.asserts.assert(a2.length != null);
      d && (b2 = goog.bind(b2, d));
      return Array.prototype.reduce.call(a2, b2, c);
    } : function(a2, b2, c, d) {
      var e = c;
      module$contents$goog$array_forEach(a2, function(f, g) {
        e = b2.call(d, e, f, g, a2);
      });
      return e;
    };
    goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a2, b2, c, d) {
      goog.asserts.assert(a2.length != null);
      goog.asserts.assert(b2 != null);
      d && (b2 = goog.bind(b2, d));
      return Array.prototype.reduceRight.call(a2, b2, c);
    } : function(a2, b2, c, d) {
      var e = c;
      module$contents$goog$array_forEachRight(a2, function(f, g) {
        e = b2.call(d, e, f, g, a2);
      });
      return e;
    };
    goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.some.call(a2, b2, c);
    } : function(a2, b2, c) {
      for (var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2, f = 0; f < d; f++)
        if (f in e && b2.call(c, e[f], f, a2))
          return true;
      return false;
    };
    goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.every.call(a2, b2, c);
    } : function(a2, b2, c) {
      for (var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2, f = 0; f < d; f++)
        if (f in e && !b2.call(c, e[f], f, a2))
          return false;
      return true;
    };
    goog.array.count = function(a2, b2, c) {
      var d = 0;
      module$contents$goog$array_forEach(a2, function(e, f, g) {
        b2.call(c, e, f, g) && ++d;
      }, c);
      return d;
    };
    function module$contents$goog$array_find(a2, b2, c) {
      b2 = module$contents$goog$array_findIndex(a2, b2, c);
      return 0 > b2 ? null : typeof a2 === "string" ? a2.charAt(b2) : a2[b2];
    }
    goog.array.find = module$contents$goog$array_find;
    function module$contents$goog$array_findIndex(a2, b2, c) {
      for (var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2, f = 0; f < d; f++)
        if (f in e && b2.call(c, e[f], f, a2))
          return f;
      return -1;
    }
    goog.array.findIndex = module$contents$goog$array_findIndex;
    goog.array.findRight = function(a2, b2, c) {
      b2 = module$contents$goog$array_findIndexRight(a2, b2, c);
      return 0 > b2 ? null : typeof a2 === "string" ? a2.charAt(b2) : a2[b2];
    };
    function module$contents$goog$array_findIndexRight(a2, b2, c) {
      var d = a2.length, e = typeof a2 === "string" ? a2.split("") : a2;
      for (--d; 0 <= d; d--)
        if (d in e && b2.call(c, e[d], d, a2))
          return d;
      return -1;
    }
    goog.array.findIndexRight = module$contents$goog$array_findIndexRight;
    function module$contents$goog$array_contains(a2, b2) {
      return 0 <= module$contents$goog$array_indexOf(a2, b2);
    }
    goog.array.contains = module$contents$goog$array_contains;
    goog.array.isEmpty = function(a2) {
      return a2.length == 0;
    };
    goog.array.clear = function(a2) {
      if (!Array.isArray(a2))
        for (var b2 = a2.length - 1; 0 <= b2; b2--)
          delete a2[b2];
      a2.length = 0;
    };
    goog.array.insert = function(a2, b2) {
      module$contents$goog$array_contains(a2, b2) || a2.push(b2);
    };
    function module$contents$goog$array_insertAt(a2, b2, c) {
      module$contents$goog$array_splice(a2, c, 0, b2);
    }
    goog.array.insertAt = module$contents$goog$array_insertAt;
    goog.array.insertArrayAt = function(a2, b2, c) {
      goog.partial(module$contents$goog$array_splice, a2, c, 0).apply(null, b2);
    };
    goog.array.insertBefore = function(a2, b2, c) {
      var d;
      arguments.length == 2 || 0 > (d = module$contents$goog$array_indexOf(a2, c)) ? a2.push(b2) : module$contents$goog$array_insertAt(a2, b2, d);
    };
    goog.array.remove = function(a2, b2) {
      b2 = module$contents$goog$array_indexOf(a2, b2);
      var c;
      (c = 0 <= b2) && module$contents$goog$array_removeAt(a2, b2);
      return c;
    };
    goog.array.removeLast = function(a2, b2) {
      b2 = module$contents$goog$array_lastIndexOf(a2, b2);
      return 0 <= b2 ? (module$contents$goog$array_removeAt(a2, b2), true) : false;
    };
    function module$contents$goog$array_removeAt(a2, b2) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.splice.call(a2, b2, 1).length == 1;
    }
    goog.array.removeAt = module$contents$goog$array_removeAt;
    goog.array.removeIf = function(a2, b2, c) {
      b2 = module$contents$goog$array_findIndex(a2, b2, c);
      return 0 <= b2 ? (module$contents$goog$array_removeAt(a2, b2), true) : false;
    };
    goog.array.removeAllIf = function(a2, b2, c) {
      var d = 0;
      module$contents$goog$array_forEachRight(a2, function(e, f) {
        b2.call(c, e, f, a2) && module$contents$goog$array_removeAt(a2, f) && d++;
      });
      return d;
    };
    function module$contents$goog$array_concat(a2) {
      return Array.prototype.concat.apply([], arguments);
    }
    goog.array.concat = module$contents$goog$array_concat;
    goog.array.join = function(a2) {
      return Array.prototype.concat.apply([], arguments);
    };
    function module$contents$goog$array_toArray(a2) {
      var b2 = a2.length;
      if (0 < b2) {
        for (var c = Array(b2), d = 0; d < b2; d++)
          c[d] = a2[d];
        return c;
      }
      return [];
    }
    goog.array.toArray = module$contents$goog$array_toArray;
    goog.array.clone = module$contents$goog$array_toArray;
    goog.array.extend = function(a2, b2) {
      for (var c = 1; c < arguments.length; c++) {
        var d = arguments[c];
        if (goog.isArrayLike(d)) {
          var e = a2.length || 0, f = d.length || 0;
          a2.length = e + f;
          for (var g = 0; g < f; g++)
            a2[e + g] = d[g];
        } else
          a2.push(d);
      }
    };
    function module$contents$goog$array_splice(a2, b2, c, d) {
      goog.asserts.assert(a2.length != null);
      return Array.prototype.splice.apply(a2, module$contents$goog$array_slice(arguments, 1));
    }
    goog.array.splice = module$contents$goog$array_splice;
    function module$contents$goog$array_slice(a2, b2, c) {
      goog.asserts.assert(a2.length != null);
      return 2 >= arguments.length ? Array.prototype.slice.call(a2, b2) : Array.prototype.slice.call(a2, b2, c);
    }
    goog.array.slice = module$contents$goog$array_slice;
    goog.array.removeDuplicates = function(a2, b2, c) {
      b2 = b2 || a2;
      var d = function(h) {
        return goog.isObject(h) ? "o" + goog.getUid(h) : (typeof h).charAt(0) + h;
      };
      c = c || d;
      for (var e = d = 0, f = {}; e < a2.length; ) {
        var g = a2[e++], k = c(g);
        Object.prototype.hasOwnProperty.call(f, k) || (f[k] = true, b2[d++] = g);
      }
      b2.length = d;
    };
    function module$contents$goog$array_binarySearch(a2, b2, c) {
      return module$contents$goog$array_binarySearch_(a2, c || module$contents$goog$array_defaultCompare, false, b2);
    }
    goog.array.binarySearch = module$contents$goog$array_binarySearch;
    goog.array.binarySelect = function(a2, b2, c) {
      return module$contents$goog$array_binarySearch_(a2, b2, true, void 0, c);
    };
    function module$contents$goog$array_binarySearch_(a2, b2, c, d, e) {
      for (var f = 0, g = a2.length, k; f < g; ) {
        var h = f + (g - f >>> 1);
        var l = c ? b2.call(e, a2[h], h, a2) : b2(d, a2[h]);
        0 < l ? f = h + 1 : (g = h, k = !l);
      }
      return k ? f : -f - 1;
    }
    function module$contents$goog$array_sort(a2, b2) {
      a2.sort(b2 || module$contents$goog$array_defaultCompare);
    }
    goog.array.sort = module$contents$goog$array_sort;
    goog.array.stableSort = function(a2, b2) {
      for (var c = Array(a2.length), d = 0; d < a2.length; d++)
        c[d] = { index: d, value: a2[d] };
      var e = b2 || module$contents$goog$array_defaultCompare;
      module$contents$goog$array_sort(c, function(f, g) {
        return e(f.value, g.value) || f.index - g.index;
      });
      for (b2 = 0; b2 < a2.length; b2++)
        a2[b2] = c[b2].value;
    };
    function module$contents$goog$array_sortByKey(a2, b2, c) {
      var d = c || module$contents$goog$array_defaultCompare;
      module$contents$goog$array_sort(a2, function(e, f) {
        return d(b2(e), b2(f));
      });
    }
    goog.array.sortByKey = module$contents$goog$array_sortByKey;
    goog.array.sortObjectsByKey = function(a2, b2, c) {
      module$contents$goog$array_sortByKey(a2, function(d) {
        return d[b2];
      }, c);
    };
    goog.array.isSorted = function(a2, b2, c) {
      b2 = b2 || module$contents$goog$array_defaultCompare;
      for (var d = 1; d < a2.length; d++) {
        var e = b2(a2[d - 1], a2[d]);
        if (0 < e || e == 0 && c)
          return false;
      }
      return true;
    };
    goog.array.equals = function(a2, b2, c) {
      if (!goog.isArrayLike(a2) || !goog.isArrayLike(b2) || a2.length != b2.length)
        return false;
      var d = a2.length;
      c = c || module$contents$goog$array_defaultCompareEquality;
      for (var e = 0; e < d; e++)
        if (!c(a2[e], b2[e]))
          return false;
      return true;
    };
    goog.array.compare3 = function(a2, b2, c) {
      c = c || module$contents$goog$array_defaultCompare;
      for (var d = Math.min(a2.length, b2.length), e = 0; e < d; e++) {
        var f = c(a2[e], b2[e]);
        if (f != 0)
          return f;
      }
      return module$contents$goog$array_defaultCompare(a2.length, b2.length);
    };
    function module$contents$goog$array_defaultCompare(a2, b2) {
      return a2 > b2 ? 1 : a2 < b2 ? -1 : 0;
    }
    goog.array.defaultCompare = module$contents$goog$array_defaultCompare;
    goog.array.inverseDefaultCompare = function(a2, b2) {
      return -module$contents$goog$array_defaultCompare(a2, b2);
    };
    function module$contents$goog$array_defaultCompareEquality(a2, b2) {
      return a2 === b2;
    }
    goog.array.defaultCompareEquality = module$contents$goog$array_defaultCompareEquality;
    goog.array.binaryInsert = function(a2, b2, c) {
      c = module$contents$goog$array_binarySearch(a2, b2, c);
      return 0 > c ? (module$contents$goog$array_insertAt(a2, b2, -(c + 1)), true) : false;
    };
    goog.array.binaryRemove = function(a2, b2, c) {
      b2 = module$contents$goog$array_binarySearch(a2, b2, c);
      return 0 <= b2 ? module$contents$goog$array_removeAt(a2, b2) : false;
    };
    goog.array.bucket = function(a2, b2, c) {
      for (var d = {}, e = 0; e < a2.length; e++) {
        var f = a2[e], g = b2.call(c, f, e, a2);
        g !== void 0 && (d[g] || (d[g] = [])).push(f);
      }
      return d;
    };
    goog.array.bucketToMap = function(a2, b2) {
      for (var c = /* @__PURE__ */ new Map(), d = 0; d < a2.length; d++) {
        var e = a2[d], f = b2(e, d, a2);
        if (f !== void 0) {
          var g = c.get(f);
          g || (g = [], c.set(f, g));
          g.push(e);
        }
      }
      return c;
    };
    goog.array.toObject = function(a2, b2, c) {
      var d = {};
      module$contents$goog$array_forEach(a2, function(e, f) {
        d[b2.call(c, e, f, a2)] = e;
      });
      return d;
    };
    goog.array.toMap = function(a2, b2) {
      for (var c = /* @__PURE__ */ new Map(), d = 0; d < a2.length; d++) {
        var e = a2[d];
        c.set(b2(e, d, a2), e);
      }
      return c;
    };
    goog.array.range = function(a2, b2, c) {
      var d = [], e = 0, f = a2;
      c = c || 1;
      b2 !== void 0 && (e = a2, f = b2);
      if (0 > c * (f - e))
        return [];
      if (0 < c)
        for (a2 = e; a2 < f; a2 += c)
          d.push(a2);
      else
        for (a2 = e; a2 > f; a2 += c)
          d.push(a2);
      return d;
    };
    goog.array.repeat = function(a2, b2) {
      for (var c = [], d = 0; d < b2; d++)
        c[d] = a2;
      return c;
    };
    function module$contents$goog$array_flatten(a2) {
      for (var b2 = [], c = 0; c < arguments.length; c++) {
        var d = arguments[c];
        if (Array.isArray(d))
          for (var e = 0; e < d.length; e += 8192) {
            var f = module$contents$goog$array_slice(d, e, e + 8192);
            f = module$contents$goog$array_flatten.apply(null, f);
            for (var g = 0; g < f.length; g++)
              b2.push(f[g]);
          }
        else
          b2.push(d);
      }
      return b2;
    }
    goog.array.flatten = module$contents$goog$array_flatten;
    goog.array.rotate = function(a2, b2) {
      goog.asserts.assert(a2.length != null);
      a2.length && (b2 %= a2.length, 0 < b2 ? Array.prototype.unshift.apply(a2, a2.splice(-b2, b2)) : 0 > b2 && Array.prototype.push.apply(a2, a2.splice(0, -b2)));
      return a2;
    };
    goog.array.moveItem = function(a2, b2, c) {
      goog.asserts.assert(0 <= b2 && b2 < a2.length);
      goog.asserts.assert(0 <= c && c < a2.length);
      b2 = Array.prototype.splice.call(a2, b2, 1);
      Array.prototype.splice.call(a2, c, 0, b2[0]);
    };
    goog.array.zip = function(a2) {
      if (!arguments.length)
        return [];
      for (var b2 = [], c = arguments[0].length, d = 1; d < arguments.length; d++)
        arguments[d].length < c && (c = arguments[d].length);
      for (d = 0; d < c; d++) {
        for (var e = [], f = 0; f < arguments.length; f++)
          e.push(arguments[f][d]);
        b2.push(e);
      }
      return b2;
    };
    goog.array.shuffle = function(a2, b2) {
      b2 = b2 || Math.random;
      for (var c = a2.length - 1; 0 < c; c--) {
        var d = Math.floor(b2() * (c + 1)), e = a2[c];
        a2[c] = a2[d];
        a2[d] = e;
      }
    };
    goog.array.copyByIndex = function(a2, b2) {
      var c = [];
      module$contents$goog$array_forEach(b2, function(d) {
        c.push(a2[d]);
      });
      return c;
    };
    goog.array.concatMap = function(a2, b2, c) {
      return module$contents$goog$array_concat.apply([], module$contents$goog$array_map(a2, b2, c));
    };
    goog.labs.userAgent.engine = {};
    function module$contents$goog$labs$userAgent$engine_isTrident() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Trident") || module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE");
    }
    function module$contents$goog$labs$userAgent$engine_isEdge() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Edge");
    }
    function module$contents$goog$labs$userAgent$engine_isWebKit() {
      return module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase("WebKit") && !module$contents$goog$labs$userAgent$engine_isEdge();
    }
    function module$contents$goog$labs$userAgent$engine_isGecko() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Gecko") && !module$contents$goog$labs$userAgent$engine_isWebKit() && !module$contents$goog$labs$userAgent$engine_isTrident() && !module$contents$goog$labs$userAgent$engine_isEdge();
    }
    function module$contents$goog$labs$userAgent$engine_getVersion() {
      var a2 = module$contents$goog$labs$userAgent$util_getUserAgent();
      if (a2) {
        a2 = module$contents$goog$labs$userAgent$util_extractVersionTuples(a2);
        var b2;
        a:
          if (module$contents$goog$labs$userAgent$engine_isEdge()) {
            for (b2 = 0; b2 < a2.length; b2++) {
              var c = a2[b2];
              if (c[0] == "Edge") {
                b2 = c;
                break a;
              }
            }
            b2 = void 0;
          } else
            b2 = a2[1];
        if (b2)
          return b2[0] == "Gecko" ? module$contents$goog$labs$userAgent$engine_getVersionForKey(a2, "Firefox") : b2[1];
        a2 = a2[0];
        var d;
        if (a2 && (d = a2[2]) && (d = /Trident\/([^\s;]+)/.exec(d)))
          return d[1];
      }
      return "";
    }
    function module$contents$goog$labs$userAgent$engine_getVersionForKey(a2, b2) {
      return (a2 = module$contents$goog$array_find(a2, function(c) {
        return b2 == c[0];
      })) && a2[1] || "";
    }
    goog.labs.userAgent.engine.getVersion = module$contents$goog$labs$userAgent$engine_getVersion;
    goog.labs.userAgent.engine.isEdge = module$contents$goog$labs$userAgent$engine_isEdge;
    goog.labs.userAgent.engine.isGecko = module$contents$goog$labs$userAgent$engine_isGecko;
    goog.labs.userAgent.engine.isPresto = function() {
      return module$contents$goog$labs$userAgent$util_matchUserAgent("Presto");
    };
    goog.labs.userAgent.engine.isTrident = module$contents$goog$labs$userAgent$engine_isTrident;
    goog.labs.userAgent.engine.isVersionOrHigher = function(a2) {
      return 0 <= goog.string.internal.compareVersions(module$contents$goog$labs$userAgent$engine_getVersion(), a2);
    };
    goog.labs.userAgent.engine.isWebKit = module$contents$goog$labs$userAgent$engine_isWebKit;
    goog.reflect = {};
    goog.reflect.object = function(a2, b2) {
      return b2;
    };
    goog.reflect.objectProperty = function(a2) {
      return a2;
    };
    goog.reflect.sinkValue = function(a2) {
      goog.reflect.sinkValue[" "](a2);
      return a2;
    };
    goog.reflect.sinkValue[" "] = goog.nullFunction;
    goog.reflect.canAccessProperty = function(a2, b2) {
      try {
        return goog.reflect.sinkValue(a2[b2]), true;
      } catch (c) {
      }
      return false;
    };
    goog.reflect.cache = function(a2, b2, c, d) {
      d = d ? d(b2) : b2;
      return Object.prototype.hasOwnProperty.call(a2, d) ? a2[d] : a2[d] = c(b2);
    };
    goog.userAgent = {};
    goog.userAgent.ASSUME_IE = false;
    goog.userAgent.ASSUME_EDGE = false;
    goog.userAgent.ASSUME_GECKO = false;
    goog.userAgent.ASSUME_WEBKIT = false;
    goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
    goog.userAgent.ASSUME_OPERA = false;
    goog.userAgent.ASSUME_ANY_VERSION = false;
    goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
    goog.userAgent.getUserAgentString = function() {
      return module$contents$goog$labs$userAgent$util_getUserAgent();
    };
    goog.userAgent.getNavigatorTyped = function() {
      return goog.global.navigator || null;
    };
    goog.userAgent.getNavigator = function() {
      return goog.userAgent.getNavigatorTyped();
    };
    goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : module$contents$goog$labs$userAgent$browser_matchOpera();
    goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : module$contents$goog$labs$userAgent$browser_matchIE();
    goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : module$contents$goog$labs$userAgent$engine_isEdge();
    goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
    goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : module$contents$goog$labs$userAgent$engine_isGecko();
    goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : module$contents$goog$labs$userAgent$engine_isWebKit();
    goog.userAgent.isMobile_ = function() {
      return goog.userAgent.WEBKIT && module$contents$goog$labs$userAgent$util_matchUserAgent("Mobile");
    };
    goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
    goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
    goog.userAgent.determinePlatform_ = function() {
      var a2 = goog.userAgent.getNavigatorTyped();
      return a2 && a2.platform || "";
    };
    goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
    goog.userAgent.ASSUME_MAC = false;
    goog.userAgent.ASSUME_WINDOWS = false;
    goog.userAgent.ASSUME_LINUX = false;
    goog.userAgent.ASSUME_X11 = false;
    goog.userAgent.ASSUME_ANDROID = false;
    goog.userAgent.ASSUME_IPHONE = false;
    goog.userAgent.ASSUME_IPAD = false;
    goog.userAgent.ASSUME_IPOD = false;
    goog.userAgent.ASSUME_KAIOS = false;
    goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
    goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : module$contents$goog$labs$userAgent$platform_isMacintosh();
    goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : module$contents$goog$labs$userAgent$platform_isWindows();
    goog.userAgent.isLegacyLinux_ = function() {
      return module$contents$goog$labs$userAgent$platform_isLinux() || module$contents$goog$labs$userAgent$platform_isChromeOS();
    };
    goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
    goog.userAgent.isX11_ = function() {
      var a2 = goog.userAgent.getNavigatorTyped();
      return !!a2 && goog.string.internal.contains(a2.appVersion || "", "X11");
    };
    goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
    goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : module$contents$goog$labs$userAgent$platform_isAndroid();
    goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : module$contents$goog$labs$userAgent$platform_isIphone();
    goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : module$contents$goog$labs$userAgent$platform_isIpad();
    goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : module$contents$goog$labs$userAgent$platform_isIpod();
    goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : module$contents$goog$labs$userAgent$platform_isIos();
    goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : module$contents$goog$labs$userAgent$platform_isKaiOS();
    goog.userAgent.determineVersion_ = function() {
      var a2 = "", b2 = goog.userAgent.getVersionRegexResult_();
      b2 && (a2 = b2 ? b2[1] : "");
      return goog.userAgent.IE && (b2 = goog.userAgent.getDocumentMode_(), b2 != null && b2 > parseFloat(a2)) ? String(b2) : a2;
    };
    goog.userAgent.getVersionRegexResult_ = function() {
      var a2 = goog.userAgent.getUserAgentString();
      if (goog.userAgent.GECKO)
        return /rv:([^\);]+)(\)|;)/.exec(a2);
      if (goog.userAgent.EDGE)
        return /Edge\/([\d\.]+)/.exec(a2);
      if (goog.userAgent.IE)
        return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a2);
      if (goog.userAgent.WEBKIT)
        return /WebKit\/(\S+)/.exec(a2);
      if (goog.userAgent.OPERA)
        return /(?:Version)[ \/]?(\S+)/.exec(a2);
    };
    goog.userAgent.getDocumentMode_ = function() {
      var a2 = goog.global.document;
      return a2 ? a2.documentMode : void 0;
    };
    goog.userAgent.VERSION = goog.userAgent.determineVersion_();
    goog.userAgent.compare = function(a2, b2) {
      return goog.string.internal.compareVersions(a2, b2);
    };
    goog.userAgent.isVersionOrHigherCache_ = {};
    goog.userAgent.isVersionOrHigher = function(a2) {
      return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a2, function() {
        return 0 <= goog.string.internal.compareVersions(goog.userAgent.VERSION, a2);
      });
    };
    goog.userAgent.isDocumentModeOrHigher = function(a2) {
      return Number(goog.userAgent.DOCUMENT_MODE) >= a2;
    };
    goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
    var JSCompiler_inline_result$jscomp$82;
    if (goog.global.document && goog.userAgent.IE) {
      documentMode$jscomp$inline_116 = goog.userAgent.getDocumentMode_();
      JSCompiler_inline_result$jscomp$82 = documentMode$jscomp$inline_116 ? documentMode$jscomp$inline_116 : parseInt(goog.userAgent.VERSION, 10) || void 0;
    } else
      JSCompiler_inline_result$jscomp$82 = void 0;
    var documentMode$jscomp$inline_116;
    goog.userAgent.DOCUMENT_MODE = JSCompiler_inline_result$jscomp$82;
    goog.userAgent.product = {};
    goog.userAgent.product.ASSUME_FIREFOX = false;
    goog.userAgent.product.ASSUME_IPHONE = false;
    goog.userAgent.product.ASSUME_IPAD = false;
    goog.userAgent.product.ASSUME_ANDROID = false;
    goog.userAgent.product.ASSUME_CHROME = false;
    goog.userAgent.product.ASSUME_SAFARI = false;
    goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
    goog.userAgent.product.OPERA = goog.userAgent.OPERA;
    goog.userAgent.product.IE = goog.userAgent.IE;
    goog.userAgent.product.EDGE = goog.userAgent.EDGE;
    goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : module$contents$goog$labs$userAgent$browser_matchFirefox();
    goog.userAgent.product.isIphoneOrIpod_ = function() {
      return module$contents$goog$labs$userAgent$platform_isIphone() || module$contents$goog$labs$userAgent$platform_isIpod();
    };
    goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
    goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : module$contents$goog$labs$userAgent$platform_isIpad();
    goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : module$contents$goog$labs$userAgent$browser_matchAndroidBrowser();
    goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : module$contents$goog$labs$userAgent$browser_matchChrome();
    goog.userAgent.product.isSafariDesktop_ = function() {
      return module$contents$goog$labs$userAgent$browser_matchSafari() && !module$contents$goog$labs$userAgent$platform_isIos();
    };
    goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
    goog.crypt.base64 = {};
    goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "+/=";
    goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "-_.";
    goog.crypt.base64.Alphabet = { DEFAULT: 0, NO_PADDING: 1, WEBSAFE: 2, WEBSAFE_DOT_PADDING: 3, WEBSAFE_NO_PADDING: 4 };
    goog.crypt.base64.paddingChars_ = "=.";
    goog.crypt.base64.isPadding_ = function(a2) {
      return goog.string.internal.contains(goog.crypt.base64.paddingChars_, a2);
    };
    goog.crypt.base64.byteToCharMaps_ = {};
    goog.crypt.base64.charToByteMap_ = null;
    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT;
    goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || typeof goog.global.btoa == "function";
    goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && typeof goog.global.atob == "function";
    goog.crypt.base64.encodeByteArray = function(a2, b2) {
      goog.asserts.assert(goog.isArrayLike(a2), "encodeByteArray takes an array as a parameter");
      b2 === void 0 && (b2 = goog.crypt.base64.Alphabet.DEFAULT);
      goog.crypt.base64.init_();
      b2 = goog.crypt.base64.byteToCharMaps_[b2];
      for (var c = Array(Math.floor(a2.length / 3)), d = b2[64] || "", e = 0, f = 0; e < a2.length - 2; e += 3) {
        var g = a2[e], k = a2[e + 1], h = a2[e + 2], l = b2[g >> 2];
        g = b2[(g & 3) << 4 | k >> 4];
        k = b2[(k & 15) << 2 | h >> 6];
        h = b2[h & 63];
        c[f++] = "" + l + g + k + h;
      }
      l = 0;
      h = d;
      switch (a2.length - e) {
        case 2:
          l = a2[e + 1], h = b2[(l & 15) << 2] || d;
        case 1:
          a2 = a2[e], c[f] = "" + b2[a2 >> 2] + b2[(a2 & 3) << 4 | l >> 4] + h + d;
      }
      return c.join("");
    };
    goog.crypt.base64.encodeString = function(a2, b2) {
      return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b2 ? goog.global.btoa(a2) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a2), b2);
    };
    goog.crypt.base64.decodeString = function(a2, b2) {
      if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b2)
        return goog.global.atob(a2);
      var c = "";
      goog.crypt.base64.decodeStringInternal_(a2, function(d) {
        c += String.fromCharCode(d);
      });
      return c;
    };
    goog.crypt.base64.decodeStringToByteArray = function(a2) {
      var b2 = [];
      goog.crypt.base64.decodeStringInternal_(a2, function(c) {
        b2.push(c);
      });
      return b2;
    };
    goog.crypt.base64.decodeStringToUint8Array = function(a2) {
      goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
      var b2 = a2.length, c = 3 * b2 / 4;
      c % 3 ? c = Math.floor(c) : goog.crypt.base64.isPadding_(a2[b2 - 1]) && (c = goog.crypt.base64.isPadding_(a2[b2 - 2]) ? c - 2 : c - 1);
      var d = new Uint8Array(c), e = 0;
      goog.crypt.base64.decodeStringInternal_(a2, function(f) {
        d[e++] = f;
      });
      return d.subarray(0, e);
    };
    goog.crypt.base64.decodeStringInternal_ = function(a2, b2) {
      function c(h) {
        for (; d < a2.length; ) {
          var l = a2.charAt(d++), m = goog.crypt.base64.charToByteMap_[l];
          if (m != null)
            return m;
          if (!goog.string.internal.isEmptyOrWhitespace(l))
            throw Error("Unknown base64 encoding at char: " + l);
        }
        return h;
      }
      goog.crypt.base64.init_();
      for (var d = 0; ; ) {
        var e = c(-1), f = c(0), g = c(64), k = c(64);
        if (k === 64 && e === -1)
          break;
        b2(e << 2 | f >> 4);
        g != 64 && (b2(f << 4 & 240 | g >> 2), k != 64 && b2(g << 6 & 192 | k));
      }
    };
    goog.crypt.base64.init_ = function() {
      if (!goog.crypt.base64.charToByteMap_) {
        goog.crypt.base64.charToByteMap_ = {};
        for (var a2 = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""), b2 = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {
          var d = a2.concat(b2[c].split(""));
          goog.crypt.base64.byteToCharMaps_[c] = d;
          for (var e = 0; e < d.length; e++) {
            var f = d[e], g = goog.crypt.base64.charToByteMap_[f];
            g === void 0 ? goog.crypt.base64.charToByteMap_[f] = e : goog.asserts.assert(g === e);
          }
        }
      }
    };
    var module$exports$jspb$internal_bytes = {};
    module$exports$jspb$internal_bytes.SUPPORTS_UINT8ARRAY = typeof Uint8Array === "function";
    function module$contents$jspb$internal_bytes_dataAsB64(a2) {
      if (a2 == null || typeof a2 === "string")
        return a2;
      if (module$exports$jspb$internal_bytes.SUPPORTS_UINT8ARRAY && a2 instanceof Uint8Array)
        return goog.crypt.base64.encodeByteArray(a2);
      (0, goog.asserts.fail)("Cannot coerce to b64 string: " + goog.typeOf(a2));
      return null;
    }
    function module$contents$jspb$internal_bytes_dataAsU8(a2) {
      if (a2 == null || module$contents$jspb$internal_bytes_isU8(a2))
        return a2;
      if (typeof a2 === "string")
        return goog.crypt.base64.decodeStringToUint8Array(a2);
      (0, goog.asserts.fail)("Cannot coerce to Uint8Array: " + goog.typeOf(a2));
      return null;
    }
    function module$contents$jspb$internal_bytes_isU8(a2) {
      return module$exports$jspb$internal_bytes.SUPPORTS_UINT8ARRAY && a2 != null && a2 instanceof Uint8Array;
    }
    var module$contents$jspb$internal_bytes_emptyUint8Array_;
    function module$contents$jspb$internal_bytes_emptyUint8Array() {
      return module$contents$jspb$internal_bytes_emptyUint8Array_ || (module$contents$jspb$internal_bytes_emptyUint8Array_ = new Uint8Array(0));
    }
    module$exports$jspb$internal_bytes.dataAsB64 = module$contents$jspb$internal_bytes_dataAsB64;
    module$exports$jspb$internal_bytes.dataAsU8 = module$contents$jspb$internal_bytes_dataAsU8;
    module$exports$jspb$internal_bytes.emptyUint8Array = module$contents$jspb$internal_bytes_emptyUint8Array;
    module$exports$jspb$internal_bytes.isU8 = module$contents$jspb$internal_bytes_isU8;
    var module$exports$jspb$bytestring = {};
    var module$contents$jspb$bytestring_emptyByteString;
    module$exports$jspb$bytestring.ByteString = function(a2) {
      this.value_ = a2;
      if (a2 !== null && a2.length === 0)
        throw Error("ByteString should be constructed with non-empty values");
    };
    module$exports$jspb$bytestring.ByteString.fromBase64 = function(a2) {
      return a2 ? new module$exports$jspb$bytestring.ByteString(a2) : module$exports$jspb$bytestring.ByteString.empty();
    };
    module$exports$jspb$bytestring.ByteString.fromUint8Array = function(a2) {
      return a2.length ? new module$exports$jspb$bytestring.ByteString(new Uint8Array(a2)) : module$exports$jspb$bytestring.ByteString.empty();
    };
    module$exports$jspb$bytestring.ByteString.fromStringUtf8 = function(a2) {
      return a2.length ? new module$exports$jspb$bytestring.ByteString(module$contents$jspb$binary$utf8_encodeUtf8(a2, true)) : module$exports$jspb$bytestring.ByteString.empty();
    };
    module$exports$jspb$bytestring.ByteString.empty = function() {
      return module$contents$jspb$bytestring_emptyByteString || (module$contents$jspb$bytestring_emptyByteString = new module$exports$jspb$bytestring.ByteString(null));
    };
    module$exports$jspb$bytestring.ByteString.prototype.asBase64 = function() {
      return this.isEmpty() ? "" : this.ensureBase64String_();
    };
    module$exports$jspb$bytestring.ByteString.prototype.asUint8Array = function() {
      return this.isEmpty() ? module$contents$jspb$internal_bytes_emptyUint8Array() : new Uint8Array(this.ensureUint8Array_());
    };
    module$exports$jspb$bytestring.ByteString.prototype.isEmpty = function() {
      return this.value_ == null;
    };
    module$exports$jspb$bytestring.ByteString.prototype.asStringUtf8 = function() {
      var a2 = this.ensureUint8Array_();
      if (a2) {
        var b2 = a2.length;
        a2 = module$contents$jspb$binary$utf8_useTextDecoderDecode ? (module$contents$jspb$binary$utf8_utf8ErrorsAreFatal(true) ? module$contents$jspb$binary$utf8_getFatalDecoderInstance() : module$contents$jspb$binary$utf8_getNonFatalDecoderInstance()).decode(a2.subarray(0, 0 + b2)) : module$contents$jspb$binary$utf8_polyfillDecodeUtf8(a2, 0, b2, true);
      } else
        a2 = "";
      return a2;
    };
    module$exports$jspb$bytestring.ByteString.prototype.ensureBase64String_ = function() {
      return this.value_ = module$contents$jspb$internal_bytes_dataAsB64(this.value_);
    };
    module$exports$jspb$bytestring.ByteString.prototype.ensureUint8Array_ = function() {
      return this.value_ = module$contents$jspb$internal_bytes_dataAsU8(this.value_);
    };
    var module$contents$jspb$utils_SUPPORTS_UINT8ARRAY_SLICING = typeof Uint8Array.prototype.slice === "function";
    function module$contents$jspb$utils_sliceUint8Array(a2, b2, c) {
      return b2 === c ? module$contents$jspb$internal_bytes_emptyUint8Array() : module$contents$jspb$utils_SUPPORTS_UINT8ARRAY_SLICING ? a2.slice(b2, c) : new Uint8Array(a2.subarray(b2, c));
    }
    var module$contents$jspb$utils_split64Low = 0;
    var module$contents$jspb$utils_split64High = 0;
    function module$contents$jspb$utils_splitUint64(a2) {
      var b2 = a2 >>> 0;
      a2 = Math.floor((a2 - b2) / module$exports$jspb$BinaryConstants.TWO_TO_32) >>> 0;
      module$contents$jspb$utils_split64Low = b2;
      module$contents$jspb$utils_split64High = a2;
    }
    function module$contents$jspb$utils_splitInt64(a2) {
      var b2 = 0 > a2;
      a2 = Math.abs(a2);
      var c = a2 >>> 0;
      a2 = Math.floor((a2 - c) / module$exports$jspb$BinaryConstants.TWO_TO_32);
      a2 >>>= 0;
      b2 && (a2 = ~a2 >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a2++, 4294967295 < a2 && (a2 = 0)));
      module$contents$jspb$utils_split64Low = c;
      module$contents$jspb$utils_split64High = a2;
    }
    function module$contents$jspb$utils_splitBytes64(a2) {
      var b2 = $jscomp.makeIterator(a2);
      a2 = b2.next().value;
      var c = b2.next().value, d = b2.next().value, e = b2.next().value, f = b2.next().value, g = b2.next().value, k = b2.next().value;
      b2 = b2.next().value;
      module$contents$jspb$utils_split64Low = a2 + (c << 8) + (d << 16) + (e << 24) >>> 0;
      module$contents$jspb$utils_split64High = f + (g << 8) + (k << 16) + (b2 << 24) >>> 0;
    }
    function module$contents$jspb$utils_joinUint64(a2, b2) {
      return b2 * module$exports$jspb$BinaryConstants.TWO_TO_32 + (a2 >>> 0);
    }
    function module$contents$jspb$utils_joinInt64(a2, b2) {
      var c = b2 & 2147483648;
      c && (a2 = ~a2 + 1 >>> 0, b2 = ~b2 >>> 0, a2 == 0 && (b2 = b2 + 1 >>> 0));
      a2 = module$contents$jspb$utils_joinUint64(a2, b2);
      return c ? -a2 : a2;
    }
    function module$contents$jspb$utils_toZigzag64(a2, b2, c) {
      var d = b2 >> 31;
      return c(a2 << 1 ^ d, (b2 << 1 | a2 >>> 31) ^ d);
    }
    function module$contents$jspb$utils_joinZigzag64(a2, b2) {
      return module$contents$jspb$utils_fromZigzag64(a2, b2, module$contents$jspb$utils_joinInt64);
    }
    function module$contents$jspb$utils_fromZigzag64(a2, b2, c) {
      var d = -(a2 & 1);
      return c((a2 >>> 1 | b2 << 31) ^ d, b2 >>> 1 ^ d);
    }
    function module$contents$jspb$utils_joinUnsignedDecimalString(a2, b2) {
      function c(e, f) {
        e = e ? String(e) : "";
        return f ? "0000000".slice(e.length) + e : e;
      }
      if (2097151 >= b2)
        return "" + (module$exports$jspb$BinaryConstants.TWO_TO_32 * b2 + a2);
      var d = (a2 >>> 24 | b2 << 8) >>> 0 & 16777215;
      b2 = b2 >> 16 & 65535;
      a2 = (a2 & 16777215) + 6777216 * d + 6710656 * b2;
      d += 8147497 * b2;
      b2 *= 2;
      1e7 <= a2 && (d += Math.floor(a2 / 1e7), a2 %= 1e7);
      1e7 <= d && (b2 += Math.floor(d / 1e7), d %= 1e7);
      return c(b2, 0) + c(d, b2) + c(a2, 1);
    }
    function module$contents$jspb$utils_joinSignedDecimalString(a2, b2) {
      var c = b2 & 2147483648;
      c && (a2 = ~a2 + 1 >>> 0, b2 = ~b2 + (a2 == 0 ? 1 : 0) >>> 0);
      a2 = module$contents$jspb$utils_joinUnsignedDecimalString(a2, b2);
      return c ? "-" + a2 : a2;
    }
    function module$contents$jspb$utils_decimalStringToBytes64(a2) {
      function b2(g, k) {
        for (var h = 0; 8 > h && (g !== 1 || 0 < k); h++)
          k = g * e[h] + k, e[h] = k & 255, k >>>= 8;
      }
      function c() {
        for (var g = 0; 8 > g; g++)
          e[g] = ~e[g] & 255;
      }
      (0, goog.asserts.assert)(0 < a2.length);
      var d = false;
      a2[0] === "-" && (d = true, a2 = a2.slice(1));
      for (var e = [0, 0, 0, 0, 0, 0, 0, 0], f = 0; f < a2.length; f++)
        b2(10, a2.charCodeAt(f) - 48);
      d && (c(), b2(1, 1));
      return e;
    }
    function module$contents$jspb$utils_byteSourceToUint8Array(a2) {
      if (a2.constructor === Uint8Array)
        return a2;
      if (a2.constructor === ArrayBuffer)
        return new Uint8Array(a2);
      if (a2.constructor === Array)
        return new Uint8Array(a2);
      if (a2.constructor === String)
        return goog.crypt.base64.decodeStringToUint8Array(a2);
      if (a2.constructor === module$exports$jspb$bytestring.ByteString)
        return a2.asUint8Array();
      if (a2 instanceof Uint8Array)
        return new Uint8Array(a2.buffer, a2.byteOffset, a2.byteLength);
      throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers");
    }
    var module$exports$jspb$binary$decoder = { BinaryDecoderOptions: function() {
    }, BinaryDecoder: function(a2, b2, c, d) {
      d = d === void 0 ? {} : d;
      d = d.bytesFieldsAsMutableViews === void 0 ? false : d.bytesFieldsAsMutableViews;
      this.dataView_ = this.bytes_ = null;
      this.cursor_ = this.end_ = this.start_ = 0;
      this.bytesFieldsAsMutableViews = d;
      a2 && this.setBlock(a2, b2, c);
    } };
    module$exports$jspb$binary$decoder.BinaryDecoder.alloc = function(a2, b2, c, d) {
      if (module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_.length) {
        var e = module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_.pop();
        d && (e.bytesFieldsAsMutableViews = d.bytesFieldsAsMutableViews);
        a2 && e.setBlock(a2, b2, c);
        return e;
      }
      return new module$exports$jspb$binary$decoder.BinaryDecoder(a2, b2, c, d);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.free = function() {
      this.clear();
      100 > module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_.length && module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_.push(this);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.clear = function() {
      this.dataView_ = this.bytes_ = null;
      this.cursor_ = this.end_ = this.start_ = 0;
      this.bytesFieldsAsMutableViews = false;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.getBuffer = function() {
      return this.bytes_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.setBlock = function(a2, b2, c) {
      this.bytes_ = module$contents$jspb$utils_byteSourceToUint8Array(a2);
      module$contents$jspb$binary$decoder_ASSUME_DATAVIEW_IS_FAST && (this.dataView_ = new DataView(this.bytes_.buffer, this.bytes_.byteOffset, this.bytes_.byteLength));
      this.start_ = b2 !== void 0 ? b2 : 0;
      this.end_ = c !== void 0 ? this.start_ + c : this.bytes_.length;
      this.cursor_ = this.start_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.getEnd = function() {
      return this.end_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.setEnd = function(a2) {
      this.end_ = a2;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.reset = function() {
      this.cursor_ = this.start_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.getCursor = function() {
      return this.cursor_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.setCursor = function(a2) {
      this.cursor_ = a2;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.advance = function(a2) {
      this.cursor_ += a2;
      this.checkCursor();
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.atEnd = function() {
      return this.cursor_ == this.end_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.pastEnd = function() {
      return this.cursor_ > this.end_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSplitVarint64 = function(a2) {
      for (var b2 = 128, c = 0, d = 0, e = 0; 4 > e && 128 <= b2; e++)
        b2 = this.bytes_[this.cursor_++], c |= (b2 & 127) << 7 * e;
      128 <= b2 && (b2 = this.bytes_[this.cursor_++], c |= (b2 & 127) << 28, d |= (b2 & 127) >> 4);
      if (128 <= b2)
        for (e = 0; 5 > e && 128 <= b2; e++)
          b2 = this.bytes_[this.cursor_++], d |= (b2 & 127) << 7 * e + 3;
      if (128 > b2)
        return a2(c >>> 0, d >>> 0);
      throw module$contents$jspb$binary$errors_invalidVarintError();
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSplitZigzagVarint64 = function(a2) {
      return this.readSplitVarint64(function(b2, c) {
        return module$contents$jspb$utils_fromZigzag64(b2, c, a2);
      });
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSplitFixed64 = function(a2) {
      var b2 = this.bytes_, c = this.cursor_;
      this.cursor_ += 8;
      this.checkCursor();
      for (var d = 0, e = 0, f = c + 7; f >= c; f--)
        d = d << 8 | b2[f], e = e << 8 | b2[f + 4];
      return a2(d, e);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.skipVarint = function() {
      for (var a2 = this.cursor_, b2 = 0; 10 > b2; b2++) {
        if ((this.bytes_[a2] & 128) === 0) {
          this.cursor_ = a2 + 1;
          this.checkCursor();
          return;
        }
        a2++;
      }
      throw module$contents$jspb$binary$errors_invalidVarintError();
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.checkCursor = function() {
      if (this.cursor_ > this.end_)
        throw module$contents$jspb$binary$errors_readTooFarError(this.end_, this.cursor_);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint32 = function() {
      var a2 = this.bytes_, b2 = a2[this.cursor_ + 0], c = b2 & 127;
      if (128 > b2)
        return this.cursor_ += 1, this.checkCursor(), c;
      b2 = a2[this.cursor_ + 1];
      c |= (b2 & 127) << 7;
      if (128 > b2)
        return this.cursor_ += 2, this.checkCursor(), c;
      b2 = a2[this.cursor_ + 2];
      c |= (b2 & 127) << 14;
      if (128 > b2)
        return this.cursor_ += 3, this.checkCursor(), c;
      b2 = a2[this.cursor_ + 3];
      c |= (b2 & 127) << 21;
      if (128 > b2)
        return this.cursor_ += 4, this.checkCursor(), c;
      b2 = a2[this.cursor_ + 4];
      c |= (b2 & 15) << 28;
      if (128 > b2)
        return this.cursor_ += 5, this.checkCursor(), c >>> 0;
      this.cursor_ += 5;
      if (128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++] && 128 <= a2[this.cursor_++])
        throw module$contents$jspb$binary$errors_invalidVarintError();
      this.checkCursor();
      return c;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint32 = function() {
      return this.readUnsignedVarint32();
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint32 = function() {
      var a2 = this.readUnsignedVarint32();
      return a2 >>> 1 ^ -(a2 & 1);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint64 = function() {
      return this.readSplitVarint64(module$contents$jspb$utils_joinUint64);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint64String = function() {
      return this.readSplitVarint64(module$contents$jspb$utils_joinUnsignedDecimalString);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint64 = function() {
      return this.readSplitVarint64(module$contents$jspb$utils_joinInt64);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint64String = function() {
      return this.readSplitVarint64(module$contents$jspb$utils_joinSignedDecimalString);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint64 = function() {
      return this.readSplitVarint64(module$contents$jspb$utils_joinZigzag64);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint64String = function() {
      return this.readSplitZigzagVarint64(module$contents$jspb$utils_joinSignedDecimalString);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint8 = function() {
      var a2 = this.bytes_[this.cursor_ + 0];
      this.cursor_ += 1;
      this.checkCursor();
      return a2;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint16 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1];
      this.cursor_ += 2;
      this.checkCursor();
      return a2 << 0 | b2 << 8;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint32 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];
      this.cursor_ += 4;
      this.checkCursor();
      return (a2 << 0 | b2 << 8 | c << 16 | d << 24) >>> 0;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint64 = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return module$contents$jspb$utils_joinUint64(a2, b2);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint64String = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return module$contents$jspb$utils_joinUnsignedDecimalString(a2, b2);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt8 = function() {
      var a2 = this.bytes_[this.cursor_ + 0];
      this.cursor_ += 1;
      this.checkCursor();
      return a2 << 24 >> 24;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt16 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1];
      this.cursor_ += 2;
      this.checkCursor();
      return (a2 << 0 | b2 << 8) << 16 >> 16;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt32 = function() {
      var a2 = this.bytes_[this.cursor_ + 0], b2 = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];
      this.cursor_ += 4;
      this.checkCursor();
      return a2 << 0 | b2 << 8 | c << 16 | d << 24;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt64 = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return module$contents$jspb$utils_joinInt64(a2, b2);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt64String = function() {
      var a2 = this.readUint32(), b2 = this.readUint32();
      return module$contents$jspb$utils_joinSignedDecimalString(a2, b2);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readFloat = function() {
      var a2 = this.readUint32(), b2 = 2 * (a2 >> 31) + 1, c = a2 >>> 23 & 255;
      a2 &= 8388607;
      return c == 255 ? a2 ? NaN : Infinity * b2 : c == 0 ? b2 * Math.pow(2, -149) * a2 : b2 * Math.pow(2, c - 150) * (a2 + Math.pow(2, 23));
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readDouble = function() {
      if (module$contents$jspb$binary$decoder_ASSUME_DATAVIEW_IS_FAST) {
        var a2 = this.dataView_.getFloat64(this.cursor_, true);
        this.cursor_ += 8;
        this.checkCursor();
        return a2;
      }
      var b2 = this.readUint32(), c = this.readUint32();
      a2 = 2 * (c >> 31) + 1;
      var d = c >>> 20 & 2047;
      b2 = module$exports$jspb$BinaryConstants.TWO_TO_32 * (c & 1048575) + b2;
      return d == 2047 ? b2 ? NaN : Infinity * a2 : d == 0 ? a2 * Math.pow(2, -1074) * b2 : a2 * Math.pow(2, d - 1075) * (b2 + module$exports$jspb$BinaryConstants.TWO_TO_52);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readDoubleArrayInto = function(a2, b2) {
      var c = this.cursor_, d = 8 * a2;
      if (c + d > this.end_)
        throw module$contents$jspb$binary$errors_readTooFarError(d, this.end_ - c);
      c += this.bytes_.byteOffset;
      if (module$contents$jspb$binary$decoder_ASSUME_DATAVIEW_IS_FAST)
        for (this.cursor_ += d, a2 = new DataView(this.bytes_.buffer, c, d), d = 0; ; ) {
          c = d + 8;
          if (c > a2.byteLength)
            break;
          b2.push(a2.getFloat64(d, true));
          d = c;
        }
      else if (module$contents$jspb$binary$decoder_isLittleEndianCache === void 0 && (module$contents$jspb$binary$decoder_isLittleEndianCache = new Uint16Array(new Uint8Array([1, 2]).buffer)[0] == 513), goog.asserts.assertBoolean(module$contents$jspb$binary$decoder_isLittleEndianCache))
        for (this.cursor_ += d, a2 = new Float64Array(this.bytes_.buffer.slice(c, c + d)), d = 0; d < a2.length; d++)
          b2.push(a2[d]);
      else
        for (d = 0; d < a2; d++)
          b2.push(this.readDouble());
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readBool = function() {
      var a2 = !!this.bytes_[this.cursor_++];
      this.checkCursor();
      return a2;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readEnum = function() {
      return this.readSignedVarint32();
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readString = function(a2, b2) {
      var c = this.cursor_;
      this.cursor_ += a2;
      this.checkCursor();
      var d = goog.asserts.assert(this.bytes_);
      return module$contents$jspb$binary$utf8_useTextDecoderDecode ? (module$contents$jspb$binary$utf8_utf8ErrorsAreFatal(b2) ? module$contents$jspb$binary$utf8_getFatalDecoderInstance() : module$contents$jspb$binary$utf8_getNonFatalDecoderInstance()).decode(d.subarray(c, c + a2)) : module$contents$jspb$binary$utf8_polyfillDecodeUtf8(d, c, a2, b2);
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readBytes = function(a2) {
      if (0 > a2 || this.cursor_ + a2 > this.bytes_.length) {
        if (0 > a2)
          throw Error("Tried to read a negative byte length: " + a2);
        throw module$contents$jspb$binary$errors_readTooFarError(a2, this.bytes_.length - this.cursor_);
      }
      var b2 = this.bytesFieldsAsMutableViews ? this.bytes_.subarray(this.cursor_, this.cursor_ + a2) : module$contents$jspb$utils_sliceUint8Array(this.bytes_, this.cursor_, this.cursor_ + a2);
      this.cursor_ += a2;
      return b2;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.resetInstanceCache = function() {
      module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_ = [];
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.getInstanceCache = function() {
      return module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_;
    };
    module$exports$jspb$binary$decoder.BinaryDecoder.instanceCache_ = [];
    var module$contents$jspb$binary$decoder_isLittleEndianCache = void 0;
    var module$contents$jspb$binary$decoder_ASSUME_DATAVIEW_IS_FAST = 2019 <= goog.FEATURESET_YEAR;
    var module$exports$jspb$binary$reader = { BinaryReader: function(a2, b2, c, d) {
      d = d === void 0 ? {} : d;
      var e = d.discardUnknownFields === void 0 ? false : d.discardUnknownFields;
      this.decoderOptions = { bytesFieldsAsMutableViews: d.bytesFieldsAsMutableViews === void 0 ? false : d.bytesFieldsAsMutableViews };
      this.discardUnknownFields = e;
      this.decoder_ = module$exports$jspb$binary$decoder.BinaryDecoder.alloc(a2, b2, c, this.decoderOptions);
      this.fieldCursor_ = this.decoder_.getCursor();
      this.nextField_ = module$exports$jspb$BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextTag_ = module$exports$jspb$BinaryConstants.INVALID_TAG;
      this.nextWireType_ = module$exports$jspb$BinaryConstants.WireType.INVALID;
    } };
    module$exports$jspb$binary$reader.BinaryReader.alloc = function(a2, b2, c) {
      if (module$exports$jspb$binary$reader.BinaryReader.instanceCache_.length) {
        var d = module$exports$jspb$binary$reader.BinaryReader.instanceCache_.pop();
        a2 && d.setBlock(a2, b2, c);
        return d;
      }
      return new module$exports$jspb$binary$reader.BinaryReader(a2, b2, c);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.free = function() {
      this.decoder_.clear();
      this.nextTag_ = module$exports$jspb$BinaryConstants.INVALID_TAG;
      this.nextField_ = module$exports$jspb$BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = module$exports$jspb$BinaryConstants.WireType.INVALID;
      100 > module$exports$jspb$binary$reader.BinaryReader.instanceCache_.length && module$exports$jspb$binary$reader.BinaryReader.instanceCache_.push(this);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getFieldCursor = function() {
      return this.fieldCursor_;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getCursor = function() {
      return this.decoder_.getCursor();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getBuffer = function() {
      return this.decoder_.getBuffer();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getTag = function() {
      return this.nextTag_;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getFieldNumber = function() {
      return this.nextField_;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.getWireType = function() {
      return this.nextWireType_;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.isEndGroup = function() {
      return this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.END_GROUP;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.isDelimited = function() {
      return this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.setBlock = function(a2, b2, c) {
      this.decoder_.setBlock(a2, b2, c);
      this.nextField_ = module$exports$jspb$BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = module$exports$jspb$BinaryConstants.WireType.INVALID;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.reset = function() {
      this.decoder_.reset();
      this.nextField_ = module$exports$jspb$BinaryConstants.INVALID_FIELD_NUMBER;
      this.nextWireType_ = module$exports$jspb$BinaryConstants.WireType.INVALID;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.advance = function(a2) {
      this.decoder_.advance(a2);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.nextField = function() {
      if (this.decoder_.atEnd())
        return false;
      this.fieldCursor_ = this.decoder_.getCursor();
      var a2 = this.decoder_.readUnsignedVarint32(), b2 = a2 & 7;
      if (!module$contents$jspb$BinaryConstants_isValidWireType(b2))
        throw module$contents$jspb$binary$errors_invalidWireTypeError(b2, this.fieldCursor_);
      this.nextTag_ = a2;
      this.nextField_ = a2 >>> 3;
      this.nextWireType_ = b2;
      return true;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipVarintField = function() {
      this.nextWireType_ != module$exports$jspb$BinaryConstants.WireType.VARINT ? (goog.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipDelimitedField = function() {
      if (this.nextWireType_ != module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        goog.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
      else {
        var a2 = this.decoder_.readUnsignedVarint32();
        this.decoder_.advance(a2);
      }
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipFixed32Field = function() {
      goog.asserts.assert(this.nextWireType_ === module$exports$jspb$BinaryConstants.WireType.FIXED32);
      this.decoder_.advance(4);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipFixed64Field = function() {
      goog.asserts.assert(this.nextWireType_ === module$exports$jspb$BinaryConstants.WireType.FIXED64);
      this.decoder_.advance(8);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipGroup = function() {
      var a2 = this.nextField_;
      do {
        if (!this.nextField())
          throw Error("Unmatched start-group tag: stream EOF");
        if (this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.END_GROUP) {
          if (this.nextField_ != a2)
            throw Error("Unmatched end-group tag");
          break;
        }
        this.skipField();
      } while (1);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.skipField = function() {
      switch (this.nextWireType_) {
        case module$exports$jspb$BinaryConstants.WireType.VARINT:
          this.skipVarintField();
          break;
        case module$exports$jspb$BinaryConstants.WireType.FIXED64:
          this.skipFixed64Field();
          break;
        case module$exports$jspb$BinaryConstants.WireType.DELIMITED:
          this.skipDelimitedField();
          break;
        case module$exports$jspb$BinaryConstants.WireType.FIXED32:
          this.skipFixed32Field();
          break;
        case module$exports$jspb$BinaryConstants.WireType.START_GROUP:
          this.skipGroup();
          break;
        default:
          throw module$contents$jspb$binary$errors_invalidWireTypeError(this.nextWireType_, this.fieldCursor_);
      }
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.handleUnknownField = function(a2) {
      var b2 = this.getFieldCursor();
      this.skipField();
      this.addUnknownFieldsStartingFrom(a2, b2);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.addUnknownFieldsStartingFrom = function(a2, b2) {
      if (!this.discardUnknownFields) {
        b2 = module$contents$jspb$utils_sliceUint8Array(goog.asserts.assert(this.decoder_.getBuffer()), b2, this.decoder_.getCursor());
        var c = a2.internalUnknownFields_;
        c ? c.push(b2) : a2.internalUnknownFields_ = [b2];
      }
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readAny = function(a2) {
      if (module$contents$jspb$BinaryConstants_FieldTypeToWireType(a2) !== this.nextWireType_)
        return null;
      var b2 = module$exports$jspb$BinaryConstants.FieldType;
      switch (a2) {
        case b2.DOUBLE:
          return this.readDouble();
        case b2.FLOAT:
          return this.readFloat();
        case b2.INT64:
          return this.readInt64();
        case b2.UINT64:
          return this.readUint64();
        case b2.INT32:
          return this.readInt32();
        case b2.FIXED64:
          return this.readFixed64();
        case b2.FIXED32:
          return this.readFixed32();
        case b2.BOOL:
          return this.readBool();
        case b2.STRING:
          return this.readString();
        case b2.GROUP:
          goog.asserts.fail("Group field type not supported in readAny()");
        case b2.MESSAGE:
          goog.asserts.fail("Message field type not supported in readAny()");
        case b2.BYTES:
          return this.readBytes();
        case b2.UINT32:
          return this.readUint32();
        case b2.ENUM:
          return this.readEnum();
        case b2.SFIXED32:
          return this.readSfixed32();
        case b2.SFIXED64:
          return this.readSfixed64();
        case b2.SINT32:
          return this.readSint32();
        case b2.SINT64:
          return this.readSint64();
        default:
          goog.asserts.fail("Invalid field type in readAny()");
      }
      return null;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readMessage = function(a2, b2) {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      var c = this.decoder_.getEnd(), d = this.decoder_.readUnsignedVarint32(), e = this.decoder_.getCursor() + d;
      this.decoder_.setEnd(e);
      b2(a2, this);
      b2 = e - this.decoder_.getCursor();
      if (b2 !== 0)
        throw Error("Message parsing ended unexpectedly. Expected to read " + (d + " bytes, instead read " + (d - b2) + " bytes, either the data ended unexpectedly or the message misreported its own length"));
      this.decoder_.setCursor(e);
      this.decoder_.setEnd(c);
      return a2;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readGroup = function(a2, b2, c) {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.START_GROUP);
      goog.asserts.assert(this.nextField_ == a2);
      c(b2, this);
      if (this.nextWireType_ !== module$exports$jspb$BinaryConstants.WireType.END_GROUP)
        throw Error("Group submessage did not end with an END_GROUP tag");
      if (this.nextField_ !== a2)
        throw Error("Unmatched end-group tag");
      return b2;
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readInt32 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readInt64 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readInt64String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64String();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readUint32 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readUint64 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readUint64String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readUnsignedVarint64String();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSint32 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSint64 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSint64String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readZigzagVarint64String();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readFixed32 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED32);
      return this.decoder_.readUint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readFixed64 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readUint64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readFixed64String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readUint64String();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSfixed32 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED32);
      return this.decoder_.readInt32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSfixed32String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED32);
      return this.decoder_.readInt32().toString();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSfixed64 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readInt64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSfixed64String = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readInt64String();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readFloat = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED32);
      return this.decoder_.readFloat();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readDouble = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readDouble();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readBool = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return !!this.decoder_.readUnsignedVarint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readEnum = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSignedVarint64();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readString = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32();
      return this.decoder_.readString(a2, false);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readStringRequireUtf8 = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32();
      return this.decoder_.readString(a2, true);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readBytes = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      var a2 = this.decoder_.readUnsignedVarint32();
      return this.decoder_.readBytes(a2);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSplitVarint64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSplitVarint64(a2);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSplitZigzagVarint64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.VARINT);
      return this.decoder_.readSplitVarint64(function(b2, c) {
        return module$contents$jspb$utils_fromZigzag64(b2, c, a2);
      });
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readSplitFixed64 = function(a2) {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.FIXED64);
      return this.decoder_.readSplitFixed64(a2);
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackedFieldInto_ = function(a2, b2) {
      var c = this.readPackedFieldLength_();
      for (c = this.decoder_.getCursor() + c; this.decoder_.getCursor() < c; )
        b2.push(a2.call(this.decoder_));
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackedFieldLength_ = function() {
      goog.asserts.assert(this.nextWireType_ == module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      return this.decoder_.readUnsignedVarint32();
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableInt32Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint32, a2) : a2.push(this.readInt32());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableInt64Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint64, a2) : a2.push(this.readInt64());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableInt64StringInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readSignedVarint64String, a2) : a2.push(this.readInt64String());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableUint32Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint32, a2) : a2.push(this.readUint32());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableUint64Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint64, a2) : a2.push(this.readUint64());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableUint64StringInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUnsignedVarint64String, a2) : a2.push(this.readUint64String());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSint32Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint32, a2) : a2.push(this.readSint32());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSint64Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint64, a2) : a2.push(this.readSint64());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSint64StringInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readZigzagVarint64String, a2) : a2.push(this.readSint64String());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableFixed32Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint32, a2) : a2.push(this.readFixed32());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableFixed64Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint64, a2) : a2.push(this.readFixed64());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableFixed64StringInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readUint64String, a2) : a2.push(this.readFixed64String());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSfixed32Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt32, a2) : a2.push(this.readSfixed32());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSfixed64Into = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt64, a2) : a2.push(this.readSfixed64());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableSfixed64StringInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readInt64String, a2) : a2.push(this.readSfixed64String());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableFloatInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readFloat, a2) : a2.push(this.readFloat());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableDoubleInto = function(a2) {
      this.isDelimited() ? this.decoder_.readDoubleArrayInto(this.readPackedFieldLength_() / 8, a2) : a2.push(this.readDouble());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableBoolInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readBool, a2) : a2.push(this.readBool());
    };
    module$exports$jspb$binary$reader.BinaryReader.prototype.readPackableEnumInto = function(a2) {
      this.isDelimited() ? this.readPackedFieldInto_(module$exports$jspb$binary$decoder.BinaryDecoder.prototype.readEnum, a2) : a2.push(this.readEnum());
    };
    module$exports$jspb$binary$reader.BinaryReader.resetInstanceCache = function() {
      module$exports$jspb$binary$reader.BinaryReader.instanceCache_ = [];
    };
    module$exports$jspb$binary$reader.BinaryReader.getInstanceCache = function() {
      return module$exports$jspb$binary$reader.BinaryReader.instanceCache_;
    };
    module$exports$jspb$binary$reader.BinaryReader.instanceCache_ = [];
    var module$exports$jspb$arith = { UInt64: function(a2, b2) {
      this.lo = a2;
      this.hi = b2;
    } };
    module$exports$jspb$arith.UInt64.prototype.cmp = function(a2) {
      return this.hi < a2.hi || this.hi == a2.hi && this.lo < a2.lo ? -1 : this.hi == a2.hi && this.lo == a2.lo ? 0 : 1;
    };
    module$exports$jspb$arith.UInt64.prototype.rightShift = function() {
      return new module$exports$jspb$arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0);
    };
    module$exports$jspb$arith.UInt64.prototype.leftShift = function() {
      return new module$exports$jspb$arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);
    };
    module$exports$jspb$arith.UInt64.prototype.msb = function() {
      return !!(this.hi & 2147483648);
    };
    module$exports$jspb$arith.UInt64.prototype.lsb = function() {
      return !!(this.lo & 1);
    };
    module$exports$jspb$arith.UInt64.prototype.zero = function() {
      return this.lo == 0 && this.hi == 0;
    };
    module$exports$jspb$arith.UInt64.prototype.add = function(a2) {
      return new module$exports$jspb$arith.UInt64((this.lo + a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a2.lo ? 1 : 0) >>> 0);
    };
    module$exports$jspb$arith.UInt64.prototype.sub = function(a2) {
      return new module$exports$jspb$arith.UInt64((this.lo - a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a2.hi & 4294967295) >>> 0) - (0 > this.lo - a2.lo ? 1 : 0) >>> 0);
    };
    module$exports$jspb$arith.UInt64.mul32x32 = function(a2, b2) {
      var c = a2 & 65535;
      a2 >>>= 16;
      var d = b2 & 65535, e = b2 >>> 16;
      b2 = c * d + 65536 * (c * e & 65535) + 65536 * (a2 * d & 65535);
      for (c = a2 * e + (c * e >>> 16) + (a2 * d >>> 16); 4294967296 <= b2; )
        b2 -= 4294967296, c += 1;
      return new module$exports$jspb$arith.UInt64(b2 >>> 0, c >>> 0);
    };
    module$exports$jspb$arith.UInt64.prototype.mul = function(a2) {
      var b2 = module$exports$jspb$arith.UInt64.mul32x32(this.lo, a2);
      a2 = module$exports$jspb$arith.UInt64.mul32x32(this.hi, a2);
      a2.hi = a2.lo;
      a2.lo = 0;
      return b2.add(a2);
    };
    module$exports$jspb$arith.UInt64.prototype.div = function(a2) {
      if (a2 == 0)
        return [];
      for (var b2 = new module$exports$jspb$arith.UInt64(0, 0), c = new module$exports$jspb$arith.UInt64(this.lo, this.hi), d = new module$exports$jspb$arith.UInt64(a2, 0), e = new module$exports$jspb$arith.UInt64(1, 0); !d.msb(); )
        d = d.leftShift(), e = e.leftShift();
      for (; !e.zero(); )
        0 >= d.cmp(c) && (b2 = b2.add(e), c = c.sub(d)), d = d.rightShift(), e = e.rightShift();
      return [b2, c];
    };
    module$exports$jspb$arith.UInt64.prototype.toString = function() {
      for (var a2 = "", b2 = this; !b2.zero(); ) {
        b2 = b2.div(10);
        var c = b2[0];
        a2 = b2[1].lo + a2;
        b2 = c;
      }
      a2 == "" && (a2 = "0");
      return a2;
    };
    module$exports$jspb$arith.UInt64.fromString = function(a2) {
      for (var b2 = new module$exports$jspb$arith.UInt64(0, 0), c = new module$exports$jspb$arith.UInt64(0, 0), d = 0; d < a2.length; d++) {
        if ("0" > a2[d] || "9" < a2[d])
          return null;
        c.lo = parseInt(a2[d], 10);
        b2 = b2.mul(10).add(c);
      }
      return b2;
    };
    module$exports$jspb$arith.UInt64.prototype.clone = function() {
      return new module$exports$jspb$arith.UInt64(this.lo, this.hi);
    };
    module$exports$jspb$arith.Int64 = function(a2, b2) {
      this.lo = a2;
      this.hi = b2;
    };
    module$exports$jspb$arith.Int64.prototype.add = function(a2) {
      return new module$exports$jspb$arith.Int64((this.lo + a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a2.lo ? 1 : 0) >>> 0);
    };
    module$exports$jspb$arith.Int64.prototype.sub = function(a2) {
      return new module$exports$jspb$arith.Int64((this.lo - a2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a2.hi & 4294967295) >>> 0) - (0 > this.lo - a2.lo ? 1 : 0) >>> 0);
    };
    module$exports$jspb$arith.Int64.prototype.clone = function() {
      return new module$exports$jspb$arith.Int64(this.lo, this.hi);
    };
    module$exports$jspb$arith.Int64.prototype.toString = function() {
      var a2 = (this.hi & 2147483648) != 0, b2 = new module$exports$jspb$arith.UInt64(this.lo, this.hi);
      a2 && (b2 = new module$exports$jspb$arith.UInt64(0, 0).sub(b2));
      return (a2 ? "-" : "") + b2.toString();
    };
    module$exports$jspb$arith.Int64.fromString = function(a2) {
      var b2 = 0 < a2.length && a2[0] == "-";
      b2 && (a2 = a2.substring(1));
      a2 = module$exports$jspb$arith.UInt64.fromString(a2);
      if (a2 === null)
        return null;
      b2 && (a2 = new module$exports$jspb$arith.UInt64(0, 0).sub(a2));
      return new module$exports$jspb$arith.Int64(a2.lo, a2.hi);
    };
    var module$exports$jspb$binary$encoder = { BinaryEncoder: function() {
      this.buffer_ = new Uint8Array(64);
      this.length_ = 0;
    } };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.ensureSpace_ = function(a2) {
      if (!(this.length_ + a2 < this.buffer_.length)) {
        var b2 = this.buffer_;
        this.buffer_ = new Uint8Array(Math.ceil(a2 + 2 * this.buffer_.length));
        this.buffer_.set(b2);
      }
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.push = function(a2) {
      this.ensureSpace_(1);
      this.buffer_[this.length_++] = a2;
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeBytes = function(a2) {
      this.ensureSpace_(a2.length);
      this.buffer_.set(a2, this.length_);
      this.length_ += a2.length;
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.length = function() {
      return this.length_;
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.end = function() {
      var a2 = this.buffer_, b2 = this.length_;
      this.length_ = 0;
      return module$contents$jspb$utils_sliceUint8Array(a2, 0, b2);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeAndEnd = function(a2, b2) {
      var c = this.length_;
      if (c === 0)
        return 0;
      a2.set(this.buffer_.subarray(0, c), b2);
      this.length_ = 0;
      return c;
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeSplitVarint64 = function(a2, b2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(b2 == Math.floor(b2));
      goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_32);
      for (goog.asserts.assert(0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_32); 0 < b2 || 127 < a2; )
        this.push(a2 & 127 | 128), a2 = (a2 >>> 7 | b2 << 25) >>> 0, b2 >>>= 7;
      this.push(a2);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeSplitFixed64 = function(a2, b2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(b2 == Math.floor(b2));
      goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_32);
      goog.asserts.assert(0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_32);
      this.writeUint32(a2);
      this.writeUint32(b2);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeSplitZigzagVarint64 = function(a2, b2) {
      var c = this;
      module$contents$jspb$utils_toZigzag64(a2, b2, function(d, e) {
        c.writeSplitVarint64(d >>> 0, e >>> 0);
      });
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUnsignedVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      for (goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_32); 127 < a2; )
        this.push(a2 & 127 | 128), a2 >>>= 7;
      this.push(a2);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeSignedVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_31);
      if (0 <= a2)
        this.writeUnsignedVarint32(a2);
      else {
        for (var b2 = 0; 9 > b2; b2++)
          this.push(a2 & 127 | 128), a2 >>= 7;
        this.push(1);
      }
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUnsignedVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_64);
      module$contents$jspb$utils_splitInt64(a2);
      this.writeSplitVarint64(module$contents$jspb$utils_split64Low, module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeSignedVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_63);
      module$contents$jspb$utils_splitInt64(a2);
      this.writeSplitVarint64(module$contents$jspb$utils_split64Low, module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeZigzagVarint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_31);
      this.writeUnsignedVarint32((a2 << 1 ^ a2 >> 31) >>> 0);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeZigzagVarint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_63);
      var b2 = a2;
      a2 = 0 > b2;
      b2 = 2 * Math.abs(b2);
      module$contents$jspb$utils_splitUint64(b2);
      b2 = module$contents$jspb$utils_split64Low;
      var c = module$contents$jspb$utils_split64High;
      a2 && (b2 == 0 ? c == 0 ? c = b2 = 4294967295 : (c--, b2 = 4294967295) : b2--);
      module$contents$jspb$utils_split64Low = b2;
      module$contents$jspb$utils_split64High = c;
      this.writeSplitVarint64(module$contents$jspb$utils_split64Low, module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeZigzagVarint64String = function(a2) {
      var b2 = this;
      module$contents$jspb$utils_splitBytes64(module$contents$jspb$utils_decimalStringToBytes64(a2));
      module$contents$jspb$utils_toZigzag64(module$contents$jspb$utils_split64Low, module$contents$jspb$utils_split64High, function(c, d) {
        b2.writeSplitVarint64(c >>> 0, d >>> 0);
      });
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUint8 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && 256 > a2);
      this.push(a2 >>> 0 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUint16 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && 65536 > a2);
      this.push(a2 >>> 0 & 255);
      this.push(a2 >>> 8 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUint32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_32);
      this.push(a2 >>> 0 & 255);
      this.push(a2 >>> 8 & 255);
      this.push(a2 >>> 16 & 255);
      this.push(a2 >>> 24 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeUint64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(0 <= a2 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_64);
      module$contents$jspb$utils_splitUint64(a2);
      this.writeUint32(module$contents$jspb$utils_split64Low);
      this.writeUint32(module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeInt8 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(-128 <= a2 && 128 > a2);
      this.push(a2 >>> 0 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeInt16 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(-32768 <= a2 && 32768 > a2);
      this.push(a2 >>> 0 & 255);
      this.push(a2 >>> 8 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeInt32 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_31);
      this.push(a2 >>> 0 & 255);
      this.push(a2 >>> 8 & 255);
      this.push(a2 >>> 16 & 255);
      this.push(a2 >>> 24 & 255);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeInt64 = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_63);
      module$contents$jspb$utils_splitInt64(a2);
      this.writeSplitFixed64(module$contents$jspb$utils_split64Low, module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeFloat = function(a2) {
      goog.asserts.assert(a2 === Infinity || a2 === -Infinity || isNaN(a2) || a2 >= -module$exports$jspb$BinaryConstants.FLOAT32_MAX && a2 <= module$exports$jspb$BinaryConstants.FLOAT32_MAX);
      var b2 = a2;
      b2 = (a2 = 0 > b2 ? 1 : 0) ? -b2 : b2;
      if (b2 === 0)
        0 < 1 / b2 ? module$contents$jspb$utils_split64Low = module$contents$jspb$utils_split64High = 0 : (module$contents$jspb$utils_split64High = 0, module$contents$jspb$utils_split64Low = 2147483648);
      else if (isNaN(b2))
        module$contents$jspb$utils_split64High = 0, module$contents$jspb$utils_split64Low = 2147483647;
      else if (b2 > module$exports$jspb$BinaryConstants.FLOAT32_MAX)
        module$contents$jspb$utils_split64High = 0, module$contents$jspb$utils_split64Low = (a2 << 31 | 2139095040) >>> 0;
      else if (b2 < module$exports$jspb$BinaryConstants.FLOAT32_MIN)
        b2 = Math.round(b2 / Math.pow(2, -149)), module$contents$jspb$utils_split64High = 0, module$contents$jspb$utils_split64Low = (a2 << 31 | b2) >>> 0;
      else {
        var c = Math.floor(Math.log(b2) / Math.LN2);
        b2 *= Math.pow(2, -c);
        b2 = Math.round(b2 * module$exports$jspb$BinaryConstants.TWO_TO_23);
        16777216 <= b2 && ++c;
        module$contents$jspb$utils_split64High = 0;
        module$contents$jspb$utils_split64Low = (a2 << 31 | c + 127 << 23 | b2 & 8388607) >>> 0;
      }
      this.writeUint32(module$contents$jspb$utils_split64Low);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeDouble = function(a2) {
      goog.asserts.assert(a2 === Infinity || a2 === -Infinity || isNaN(a2) || a2 >= -module$exports$jspb$BinaryConstants.FLOAT64_MAX && a2 <= module$exports$jspb$BinaryConstants.FLOAT64_MAX);
      var b2 = a2;
      b2 = (a2 = 0 > b2 ? 1 : 0) ? -b2 : b2;
      if (b2 === 0)
        module$contents$jspb$utils_split64High = 0 < 1 / b2 ? 0 : 2147483648, module$contents$jspb$utils_split64Low = 0;
      else if (isNaN(b2))
        module$contents$jspb$utils_split64High = 2147483647, module$contents$jspb$utils_split64Low = 4294967295;
      else if (b2 > module$exports$jspb$BinaryConstants.FLOAT64_MAX)
        module$contents$jspb$utils_split64High = (a2 << 31 | 2146435072) >>> 0, module$contents$jspb$utils_split64Low = 0;
      else if (b2 < module$exports$jspb$BinaryConstants.FLOAT64_MIN) {
        var c = b2 / Math.pow(2, -1074);
        module$contents$jspb$utils_split64High = (a2 << 31 | c / module$exports$jspb$BinaryConstants.TWO_TO_32) >>> 0;
        module$contents$jspb$utils_split64Low = c >>> 0;
      } else {
        var d = b2;
        c = 0;
        if (2 <= d)
          for (; 2 <= d && 1023 > c; )
            c++, d /= 2;
        else
          for (; 1 > d && -1022 < c; )
            d *= 2, c--;
        b2 *= Math.pow(2, -c);
        d = b2 * module$exports$jspb$BinaryConstants.TWO_TO_52 >>> 0;
        module$contents$jspb$utils_split64High = (a2 << 31 | c + 1023 << 20 | b2 * module$exports$jspb$BinaryConstants.TWO_TO_20 & 1048575) >>> 0;
        module$contents$jspb$utils_split64Low = d;
      }
      this.writeUint32(module$contents$jspb$utils_split64Low);
      this.writeUint32(module$contents$jspb$utils_split64High);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeBool = function(a2) {
      goog.asserts.assert(typeof a2 === "boolean" || typeof a2 === "number");
      this.push(a2 ? 1 : 0);
    };
    module$exports$jspb$binary$encoder.BinaryEncoder.prototype.writeEnum = function(a2) {
      goog.asserts.assert(a2 == Math.floor(a2));
      goog.asserts.assert(a2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && a2 < module$exports$jspb$BinaryConstants.TWO_TO_31);
      this.writeSignedVarint32(a2);
    };
    var module$exports$jspb$binary$writer = { BinaryWriter: function() {
      this.blocks_ = [];
      this.totalLength_ = 0;
      this.encoder_ = new module$exports$jspb$binary$encoder.BinaryEncoder();
    } };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.pushBlock = function(a2) {
      a2.length !== 0 && (this.blocks_.push(a2), this.totalLength_ += a2.length);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.endAndAccumulate = function() {
      this.pushBlock(this.encoder_.end());
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.appendUint8Array_ = function(a2) {
      this.endAndAccumulate();
      this.pushBlock(a2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.beginDelimited_ = function(a2) {
      this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      this.endAndAccumulate();
      return { lengthAtStart: this.totalLength_, blockIndex: this.blocks_.length - 1 };
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.endDelimited_ = function(a2) {
      this.endAndAccumulate();
      this.encoder_.writeUnsignedVarint32(this.totalLength_ + this.encoder_.length() - a2.lengthAtStart);
      var b2 = this.encoder_.end();
      this.totalLength_ += b2.length;
      this.blocks_.splice(1 + a2.blockIndex, 0, b2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUnknownFields = function(a2) {
      if (a2 = a2.internalUnknownFields_) {
        this.endAndAccumulate();
        for (var b2 = 0; b2 < a2.length; b2++)
          this.pushBlock(a2[b2]);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSerializedMessage = function(a2, b2, c) {
      this.appendUint8Array_(a2.subarray(b2, c));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.maybeWriteSerializedMessage = function(a2, b2, c) {
      a2 != null && b2 != null && c != null && this.writeSerializedMessage(a2, b2, c);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.getResultBuffer = function() {
      var a2 = this.totalLength_ + this.encoder_.length();
      if (a2 === 0)
        return new Uint8Array(0);
      a2 = new Uint8Array(a2);
      for (var b2 = this.blocks_, c = b2.length, d = 0, e = 0; e < c; e++) {
        var f = b2[e];
        f.length !== 0 && (a2.set(f, d), d += f.length);
      }
      d += this.encoder_.writeAndEnd(a2, d);
      (0, goog.asserts.assert)(d == a2.length);
      this.blocks_ = [a2];
      return a2;
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.getResultBase64String = function(a2) {
      return (0, goog.crypt.base64.encodeByteArray)(this.getResultBuffer(), a2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFieldHeader_ = function(a2, b2) {
      (0, goog.asserts.assert)(1 <= a2 && a2 == Math.floor(a2));
      this.encoder_.writeUnsignedVarint32(8 * a2 + b2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeAny = function(a2, b2, c) {
      switch (a2) {
        case module$exports$jspb$BinaryConstants.FieldType.DOUBLE:
          this.writeDouble(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.FLOAT:
          this.writeFloat(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.INT64:
          this.writeInt64(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.UINT64:
          this.writeUint64(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.INT32:
          this.writeInt32(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.FIXED64:
          this.writeFixed64(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.FIXED32:
          this.writeFixed32(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.BOOL:
          this.writeBool(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.STRING:
          this.writeString(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.GROUP:
          (0, goog.asserts.fail)("Group field type not supported in writeAny()");
          break;
        case module$exports$jspb$BinaryConstants.FieldType.MESSAGE:
          (0, goog.asserts.fail)("Message field type not supported in writeAny()");
          break;
        case module$exports$jspb$BinaryConstants.FieldType.BYTES:
          this.writeBytes(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.UINT32:
          this.writeUint32(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.ENUM:
          this.writeEnum(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.SFIXED32:
          this.writeSfixed32(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.SFIXED64:
          this.writeSfixed64(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.SINT32:
          this.writeSint32(b2, c);
          break;
        case module$exports$jspb$BinaryConstants.FieldType.SINT64:
          this.writeSint64(b2, c);
          break;
        default:
          (0, goog.asserts.fail)("Invalid field type in writeAny()");
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUnsignedVarint32_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSignedVarint32_ = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertSignedInteger(a2, b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUnsignedVarint64_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSignedVarint64_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeZigzagVarint32_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeZigzagVarint64_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeZigzagVarint64String_ = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64String = function(a2, b2) {
      b2 != null && (b2 = module$exports$jspb$arith.Int64.fromString(b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b2.lo, b2.hi));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, 0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, 0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64String = function(a2, b2) {
      b2 != null && (b2 = module$exports$jspb$arith.UInt64.fromString(b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b2.lo, b2.hi));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a2, b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64String = function(a2, b2) {
      b2 != null && this.writeZigzagVarint64String_(a2, b2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, 0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, 0 <= b2 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64String = function(a2, b2) {
      b2 != null && (b2 = module$exports$jspb$arith.UInt64.fromString(b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b2.lo, b2.hi));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64 = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_63 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64String = function(a2, b2) {
      b2 != null && (b2 = module$exports$jspb$arith.Int64.fromString(b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b2.lo, b2.hi));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble = function(a2, b2) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool = function(a2, b2) {
      b2 != null && (module$contents$jspb$binary$writer_assertThat(a2, b2, typeof b2 === "boolean" || typeof b2 === "number"), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum = function(a2, b2) {
      b2 != null && (b2 = parseInt(b2, 10), module$contents$jspb$binary$writer_assertSignedInteger(a2, b2), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString = function(a2, b2) {
      b2 != null && this.writeUint8Array(a2, module$contents$jspb$binary$utf8_encodeUtf8(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes = function(a2, b2) {
      b2 != null && this.writeUint8Array(a2, module$contents$jspb$utils_byteSourceToUint8Array(b2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint8Array = function(a2, b2) {
      this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED);
      this.encoder_.writeUnsignedVarint32(b2.length);
      this.appendUint8Array_(b2);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeMessage = function(a2, b2, c) {
      b2 != null && (a2 = this.beginDelimited_(a2), c(b2, this), this.endDelimited_(a2));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeMessageSet = function(a2, b2, c) {
      b2 != null && (this.writeFieldHeader_(1, module$exports$jspb$BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, module$exports$jspb$BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(a2), a2 = this.beginDelimited_(3), c(b2, this), this.endDelimited_(a2), this.writeFieldHeader_(1, module$exports$jspb$BinaryConstants.WireType.END_GROUP));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeGroup = function(a2, b2, c) {
      b2 != null && (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.START_GROUP), c(b2, this), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.END_GROUP));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSplitFixed64 = function(a2, b2, c) {
      this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.FIXED64);
      this.encoder_.writeSplitFixed64(b2, c);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSplitVarint64 = function(a2, b2, c) {
      this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT);
      this.encoder_.writeSplitVarint64(b2, c);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSplitZigzagVarint64 = function(a2, b2, c) {
      this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.VARINT);
      this.encoder_.writeSplitZigzagVarint64(b2 >>> 0, c >>> 0);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedInt32 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeSignedVarint32_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedInt64 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeSignedVarint64_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSplitFixed64 = function(a2, b2, c, d) {
      if (b2 != null)
        for (var e = 0; e < b2.length; e++)
          this.writeSplitFixed64(a2, c(b2[e]), d(b2[e]));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSplitVarint64 = function(a2, b2, c, d) {
      if (b2 != null)
        for (var e = 0; e < b2.length; e++)
          this.writeSplitVarint64(a2, c(b2[e]), d(b2[e]));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64 = function(a2, b2, c, d) {
      if (b2 != null)
        for (var e = 0; e < b2.length; e++)
          this.writeSplitZigzagVarint64(a2, c(b2[e]), d(b2[e]));
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedInt64String = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeInt64String(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedUint32 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeUnsignedVarint32_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedUint64 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeUnsignedVarint64_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedUint64String = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeUint64String(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSint32 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeZigzagVarint32_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSint64 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeZigzagVarint64_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSint64String = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeZigzagVarint64String_(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedFixed32 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeFixed32(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedFixed64 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeFixed64(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedFixed64String = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeFixed64String(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSfixed32 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeSfixed32(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSfixed64 = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeSfixed64(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedSfixed64String = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeSfixed64String(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedFloat = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeFloat(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedDouble = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeDouble(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedBool = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeBool(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedEnum = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeEnum(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedString = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeString(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedBytes = function(a2, b2) {
      if (b2 != null)
        for (var c = 0; c < b2.length; c++)
          this.writeBytes(a2, b2[c]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedMessage = function(a2, b2, c) {
      if (b2 != null)
        for (var d = 0; d < b2.length; d++) {
          var e = this.beginDelimited_(a2);
          c(b2[d], this);
          this.endDelimited_(e);
        }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writeRepeatedGroup = function(a2, b2, c) {
      if (b2 != null)
        for (var d = 0; d < b2.length; d++)
          this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.START_GROUP), c(b2[d], this), this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.END_GROUP);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedInt32 = function(a2, b2) {
      if (b2 != null && b2.length) {
        for (var c = this.beginDelimited_(a2), d = 0; d < b2.length; d++)
          module$contents$jspb$binary$writer_assertSignedInteger(a2, b2[d]), this.encoder_.writeSignedVarint32(b2[d]);
        this.endDelimited_(c);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedInt32String = function(a2, b2) {
      if (b2 != null && b2.length) {
        for (var c = this.beginDelimited_(a2), d = 0; d < b2.length; d++) {
          var e = parseInt(b2[d], 10);
          module$contents$jspb$binary$writer_assertSignedInteger(a2, e);
          this.encoder_.writeSignedVarint32(e);
        }
        this.endDelimited_(c);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedInt64 = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeSignedVarint64(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSplitFixed64 = function(a2, b2, c, d) {
      if (b2 != null) {
        a2 = this.beginDelimited_(a2);
        for (var e = 0; e < b2.length; e++)
          this.encoder_.writeSplitFixed64(c(b2[e]), d(b2[e]));
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSplitVarint64 = function(a2, b2, c, d) {
      if (b2 != null) {
        a2 = this.beginDelimited_(a2);
        for (var e = 0; e < b2.length; e++)
          this.encoder_.writeSplitVarint64(c(b2[e]), d(b2[e]));
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSplitZigzagVarint64 = function(a2, b2, c, d) {
      if (b2 != null) {
        a2 = this.beginDelimited_(a2);
        for (var e = this.encoder_, f = 0; f < b2.length; f++)
          e.writeSplitZigzagVarint64(c(b2[f]), d(b2[f]));
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedInt64String = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++) {
          var d = module$exports$jspb$arith.Int64.fromString(b2[c]);
          this.encoder_.writeSplitVarint64(d.lo, d.hi);
        }
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedUint32 = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeUnsignedVarint32(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedUint64 = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeUnsignedVarint64(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedUint64String = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++) {
          var d = module$exports$jspb$arith.UInt64.fromString(b2[c]);
          this.encoder_.writeSplitVarint64(d.lo, d.hi);
        }
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSint32 = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeZigzagVarint32(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSint64 = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeZigzagVarint64(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSint64String = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeZigzagVarint64String(b2[c]);
        this.endDelimited_(a2);
      }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedFixed32 = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeUint32(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedFixed64 = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeUint64(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedFixed64String = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++) {
          var c = module$exports$jspb$arith.UInt64.fromString(b2[a2]);
          this.encoder_.writeSplitFixed64(c.lo, c.hi);
        }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSfixed32 = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeInt32(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSfixed64 = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeInt64(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedSfixed64String = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++) {
          var c = module$exports$jspb$arith.Int64.fromString(b2[a2]);
          this.encoder_.writeSplitFixed64(c.lo, c.hi);
        }
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedFloat = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeFloat(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedDouble = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeDouble(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedBool = function(a2, b2) {
      if (b2 != null && b2.length)
        for (this.writeFieldHeader_(a2, module$exports$jspb$BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b2.length), a2 = 0; a2 < b2.length; a2++)
          this.encoder_.writeBool(b2[a2]);
    };
    module$exports$jspb$binary$writer.BinaryWriter.prototype.writePackedEnum = function(a2, b2) {
      if (b2 != null && b2.length) {
        a2 = this.beginDelimited_(a2);
        for (var c = 0; c < b2.length; c++)
          this.encoder_.writeEnum(b2[c]);
        this.endDelimited_(a2);
      }
    };
    function module$contents$jspb$binary$writer_assertSignedInteger(a2, b2) {
      module$contents$jspb$binary$writer_assertThat(a2, b2, b2 === Math.floor(b2));
      module$contents$jspb$binary$writer_assertThat(a2, b2, b2 >= -module$exports$jspb$BinaryConstants.TWO_TO_31 && b2 < module$exports$jspb$BinaryConstants.TWO_TO_31);
    }
    function module$contents$jspb$binary$writer_assertThat(a2, b2, c) {
      c || (0, goog.asserts.fail)("for [" + b2 + "] at [" + a2 + "]");
    }
    var module$exports$jspb$internal_options = {};
    var module$contents$jspb$internal_options_freezerLoaded = false;
    var module$contents$jspb$internal_options_skipMessageIdValidation = true;
    var module$contents$jspb$internal_options_skipMessageArgumentTypeValidation = false;
    module$exports$jspb$internal_options.SERIALIZE_EMPTY_TRAILING_FIELDS = true;
    module$exports$jspb$internal_options.isFreezerLoaded = function() {
      return module$contents$jspb$internal_options_freezerLoaded;
    };
    module$exports$jspb$internal_options.markFreezerLoaded = function() {
      module$contents$jspb$internal_options_freezerLoaded = true;
    };
    module$exports$jspb$internal_options.skipMessageIdValidation = function() {
      return module$contents$jspb$internal_options_skipMessageIdValidation;
    };
    module$exports$jspb$internal_options.skipMessageArgumentTypeValidation = function() {
      return module$contents$jspb$internal_options_skipMessageArgumentTypeValidation;
    };
    module$exports$jspb$internal_options.setMessageArgumentTypeValidation = function(a2) {
      module$contents$jspb$internal_options_skipMessageArgumentTypeValidation = !a2;
    };
    module$exports$jspb$internal_options.setValidateMessageIds = function(a2) {
      module$contents$jspb$internal_options_skipMessageIdValidation = !a2;
    };
    var module$contents$jspb$internal_array_state_ARRAY_STATE_SYMBOL = 2018 <= goog.FEATURESET_YEAR || typeof Symbol === "function" && typeof Symbol() === "symbol" ? Symbol(goog.DEBUG ? "INTERNAL_ARRAY_STATE" : void 0) : void 0;
    var module$contents$jspb$internal_array_state_ARRAY_STATE_BIT_MASKS = { IS_REPEATED_FIELD: 1, IS_IMMUTABLE_ARRAY: 2 };
    function module$contents$jspb$internal_array_state_addMask(a2, b2) {
      Object.isFrozen(a2) || (module$contents$jspb$internal_array_state_ARRAY_STATE_SYMBOL ? a2[module$contents$jspb$internal_array_state_ARRAY_STATE_SYMBOL] |= b2 : a2.internalArrayState !== void 0 ? a2.internalArrayState |= b2 : Object.defineProperties(a2, { internalArrayState: { value: b2, configurable: true, writable: true, enumerable: false } }));
    }
    function module$contents$jspb$internal_array_state_getState(a2) {
      goog.asserts.assertArray(a2, "state is only maintained on arrays.");
      a2 = module$contents$jspb$internal_array_state_ARRAY_STATE_SYMBOL ? a2[module$contents$jspb$internal_array_state_ARRAY_STATE_SYMBOL] : a2.internalArrayState;
      return a2 == null ? 0 : a2;
    }
    function module$contents$jspb$internal_array_state_isRepeatedField(a2) {
      return Array.isArray(a2) ? !!(module$contents$jspb$internal_array_state_getState(a2) & module$contents$jspb$internal_array_state_ARRAY_STATE_BIT_MASKS.IS_REPEATED_FIELD) : false;
    }
    function module$contents$jspb$internal_array_state_markRepeatedField(a2) {
      goog.asserts.assertArray(a2, "state is only maintained on arrays.");
      module$contents$jspb$internal_array_state_addMask(a2, module$contents$jspb$internal_array_state_ARRAY_STATE_BIT_MASKS.IS_REPEATED_FIELD);
      return a2;
    }
    function module$contents$jspb$internal_array_state_isImmutableArray(a2) {
      return module$contents$jspb$internal_options_freezerLoaded && Array.isArray(a2) ? !!(module$contents$jspb$internal_array_state_getState(a2) & module$contents$jspb$internal_array_state_ARRAY_STATE_BIT_MASKS.IS_IMMUTABLE_ARRAY) : false;
    }
    function module$contents$jspb$internal_array_state_markArrayImmutable(a2) {
      if (!Array.isArray(a2))
        throw Error("cannot mark non-array as immutable");
      module$contents$jspb$internal_array_state_addMask(a2, module$contents$jspb$internal_array_state_ARRAY_STATE_BIT_MASKS.IS_IMMUTABLE_ARRAY);
      return a2;
    }
    var module$exports$jspb$internal = { InternalMessage: function() {
    } };
    function module$contents$jspb$internal_isImmutableMessage(a2) {
      return module$contents$jspb$internal_options_freezerLoaded ? module$contents$jspb$internal_array_state_isImmutableArray(a2.internalArray_) : false;
    }
    function module$contents$jspb$internal_internalMarkMessageImmutable(a2) {
      (0, goog.asserts.assert)(module$contents$jspb$internal_options_freezerLoaded);
      module$contents$jspb$internal_array_state_markArrayImmutable(a2.internalArray_);
    }
    function module$contents$jspb$internal_isExtensionObject(a2) {
      return a2 !== null && typeof a2 === "object" && a2.constructor === Object;
    }
    function module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(a2, b2) {
      return goog.TRUSTED_SITE || Object.prototype.hasOwnProperty.call(a2, b2);
    }
    function module$contents$jspb$internal_newRepeatedField() {
      return module$contents$jspb$internal_array_state_markRepeatedField([]);
    }
    var module$contents$jspb$internal_inSerialize;
    module$exports$jspb$internal.EXEMPTED_SUBCLASS_MARKER = goog.asserts.ENABLE_ASSERTS ? Symbol(goog.DEBUG ? "exempted jspb subclass" : void 0) : void 0;
    module$exports$jspb$internal.GENERATED_SUBCLASS_MARKER = goog.asserts.ENABLE_ASSERTS ? Symbol(goog.DEBUG ? "generated by jspb" : void 0) : void 0;
    function module$contents$jspb$internal_bytesAsB64(a2) {
      return module$contents$jspb$internal_bytes_dataAsB64(module$contents$jspb$internal_maybeUnwrapByteString(a2));
    }
    function module$contents$jspb$internal_bytesAsU8(a2) {
      return module$contents$jspb$internal_bytes_dataAsU8(module$contents$jspb$internal_maybeUnwrapByteString(a2));
    }
    function module$contents$jspb$internal_bytesAsByteString(a2) {
      if (a2 == null)
        return module$exports$jspb$bytestring.ByteString.empty();
      if (a2.constructor === module$exports$jspb$bytestring.ByteString)
        return a2;
      if (typeof a2 === "string")
        return module$exports$jspb$bytestring.ByteString.fromBase64(a2);
      if (module$contents$jspb$internal_bytes_isU8(a2))
        return module$exports$jspb$bytestring.ByteString.fromUint8Array(a2);
      (0, goog.asserts.fail)("Cannot coerce to ByteString: " + goog.typeOf(a2));
      return module$exports$jspb$bytestring.ByteString.empty();
    }
    function module$contents$jspb$internal_maybeUnwrapByteString(a2) {
      return a2 instanceof module$exports$jspb$bytestring.ByteString ? a2.value_ || "" : a2;
    }
    function module$contents$jspb$internal_isEmptyRepeatedField(a2) {
      return Array.isArray(a2) && module$contents$jspb$internal_array_state_isRepeatedField(a2) && !a2.length;
    }
    module$exports$jspb$internal.bytesAsB64 = module$contents$jspb$internal_bytesAsB64;
    module$exports$jspb$internal.bytesAsByteString = module$contents$jspb$internal_bytesAsByteString;
    module$exports$jspb$internal.bytesAsU8 = module$contents$jspb$internal_bytesAsU8;
    module$exports$jspb$internal.fieldNumberFromIndex = function(a2, b2) {
      return b2 - a2.arrayIndexOffset;
    };
    module$exports$jspb$internal.getInSerialize = function() {
      return module$contents$jspb$internal_inSerialize;
    };
    module$exports$jspb$internal.hasOwnPropertyIfNotTrusted = module$contents$jspb$internal_hasOwnPropertyIfNotTrusted;
    module$exports$jspb$internal.indexFromFieldNumber = function(a2, b2) {
      return b2 + a2.arrayIndexOffset;
    };
    module$exports$jspb$internal.internalMarkMessageImmutable = module$contents$jspb$internal_internalMarkMessageImmutable;
    module$exports$jspb$internal.isEmptyRepeatedField = module$contents$jspb$internal_isEmptyRepeatedField;
    module$exports$jspb$internal.isExtensionObject = module$contents$jspb$internal_isExtensionObject;
    module$exports$jspb$internal.isImmutableMessage = module$contents$jspb$internal_isImmutableMessage;
    module$exports$jspb$internal.newRepeatedField = module$contents$jspb$internal_newRepeatedField;
    module$exports$jspb$internal.setInSerialize = function(a2) {
      module$contents$jspb$internal_inSerialize = a2;
    };
    module$exports$jspb$internal.maybeUnwrapByteString = module$contents$jspb$internal_maybeUnwrapByteString;
    jspb.extension_field_info = {};
    var module$contents$jspb$extension_field_info_ExtensionFieldInfo = function(a2, b2, c, d, e) {
      this.fieldIndex = a2;
      this.fieldName = b2;
      this.ctor = c;
      this.toObjectFn = d;
      this.isRepeated = e;
    };
    module$contents$jspb$extension_field_info_ExtensionFieldInfo.prototype.isMessageType = function() {
      return !!this.ctor;
    };
    jspb.extension_field_info.ExtensionFieldInfo = module$contents$jspb$extension_field_info_ExtensionFieldInfo;
    var module$exports$jspb$map = { Map: function(a2, b2) {
      this.arr_ = a2;
      this.valueCtor = b2;
      this.map = {};
      this.arrClean = true;
      this.isImmutable_ = false;
      0 < this.arr_.length && this.loadFromArray_();
    } };
    module$exports$jspb$map.Map.prototype.internalMarkImmutable = function() {
      goog.asserts.assert(module$contents$jspb$internal_options_freezerLoaded);
      this.isImmutable_ = true;
    };
    module$exports$jspb$map.Map.prototype.checkNotImmutable_ = function() {
      if (module$contents$jspb$internal_options_freezerLoaded && this.isImmutable_)
        throw Error("Cannot mutate an immutable Map");
    };
    module$exports$jspb$map.Map.prototype.loadFromArray_ = function() {
      for (var a2 = 0; a2 < this.arr_.length; a2++) {
        var b2 = this.arr_[a2], c = b2[0];
        this.map[c.toString()] = new module$contents$jspb$map_Entry_(c, b2[1]);
      }
      this.arrClean = true;
    };
    module$exports$jspb$map.Map.prototype.toArrayInternal = function() {
      if (!this.arrClean) {
        this.arr_.length = 0;
        var a2 = this.stringKeys_();
        a2.sort();
        for (var b2 = 0; b2 < a2.length; b2++) {
          var c = this.map[a2[b2]];
          this.arr_.push([c.key, c.value]);
        }
        this.arrClean = true;
      }
      return this.arr_;
    };
    module$exports$jspb$map.Map.prototype.internalClone = function(a2, b2) {
      var c = this.valueCtor, d = new module$exports$jspb$map.Map(module$contents$jspb$internal_newRepeatedField(), c), e;
      for (e in this.map) {
        var f = this.map[e];
        c ? d.set(f.key, b2(this.wrapEntry_(f))) : d.set(f.key, a2(f.value));
      }
      return d;
    };
    module$exports$jspb$map.Map.prototype.getLength = function() {
      return this.size;
    };
    module$exports$jspb$map.Map.prototype.clear = function() {
      this.checkNotImmutable_();
      this.map = {};
      this.arrClean = false;
    };
    module$exports$jspb$map.Map.prototype.delete = function(a2) {
      this.checkNotImmutable_();
      a2 = a2.toString();
      var b2 = this.map.hasOwnProperty(a2);
      delete this.map[a2];
      this.arrClean = false;
      return b2;
    };
    module$exports$jspb$map.Map.prototype.del = function(a2) {
      return this.delete(a2);
    };
    module$exports$jspb$map.Map.prototype.getEntryList = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c = 0; c < b2.length; c++) {
        var d = this.map[b2[c]];
        a2.push([d.key, d.value]);
      }
      return a2;
    };
    module$exports$jspb$map.Map.prototype.entries = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c = 0; c < b2.length; c++) {
        var d = this.map[b2[c]];
        a2.push([d.key, this.wrapEntry_(d)]);
      }
      return new module$contents$jspb$map_ArrayIteratorIterable(a2);
    };
    module$exports$jspb$map.Map.prototype.keys = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c = 0; c < b2.length; c++)
        a2.push(this.map[b2[c]].key);
      return new module$contents$jspb$map_ArrayIteratorIterable(a2);
    };
    module$exports$jspb$map.Map.prototype.values = function() {
      var a2 = [], b2 = this.stringKeys_();
      b2.sort();
      for (var c = 0; c < b2.length; c++)
        a2.push(this.wrapEntry_(this.map[b2[c]]));
      return new module$contents$jspb$map_ArrayIteratorIterable(a2);
    };
    module$exports$jspb$map.Map.prototype.forEach = function(a2, b2) {
      var c = this.stringKeys_();
      c.sort();
      for (var d = 0; d < c.length; d++) {
        var e = this.map[c[d]];
        a2.call(b2, this.wrapEntry_(e), e.key, this);
      }
    };
    module$exports$jspb$map.Map.prototype.set = function(a2, b2) {
      this.checkNotImmutable_();
      var c = new module$contents$jspb$map_Entry_(a2);
      this.valueCtor ? (c.valueWrapper = b2, c.value = b2.toArrayInternal()) : c.value = b2;
      this.map[a2.toString()] = c;
      this.arrClean = false;
      return this;
    };
    module$exports$jspb$map.Map.prototype.wrapEntry_ = function(a2) {
      return this.valueCtor ? (a2.valueWrapper || (a2.valueWrapper = new this.valueCtor(a2.value), this.isImmutable_ && module$contents$jspb$internal_internalMarkMessageImmutable(a2.valueWrapper)), a2.valueWrapper) : a2.value;
    };
    module$exports$jspb$map.Map.prototype.get = function(a2) {
      if (a2 = this.map[a2.toString()])
        return this.wrapEntry_(a2);
    };
    module$exports$jspb$map.Map.prototype.has = function(a2) {
      return a2.toString() in this.map;
    };
    module$exports$jspb$map.Map.prototype.stringKeys_ = function() {
      var a2 = this.map, b2 = [], c;
      for (c in a2)
        Object.prototype.hasOwnProperty.call(a2, c) && b2.push(c);
      return b2;
    };
    module$exports$jspb$map.Map.prototype[Symbol.iterator] = function() {
      return this.entries();
    };
    $jscomp.global.Object.defineProperties(module$exports$jspb$map.Map.prototype, { size: { configurable: true, enumerable: true, get: function() {
      return this.stringKeys_().length;
    } } });
    var module$contents$jspb$map_Entry_ = function(a2, b2) {
      this.key = a2;
      this.value = b2;
      this.valueWrapper = void 0;
    };
    var module$contents$jspb$map_ArrayIteratorIterable = function(a2) {
      this.idx_ = 0;
      this.arr_ = a2;
    };
    module$contents$jspb$map_ArrayIteratorIterable.prototype.next = function() {
      return this.idx_ < this.arr_.length ? { done: false, value: this.arr_[this.idx_++] } : { done: true, value: void 0 };
    };
    module$contents$jspb$map_ArrayIteratorIterable.prototype[Symbol.iterator] = function() {
      return this;
    };
    function module$contents$jspb$internal_compare_compareExtensions(a2, b2) {
      a2 = a2 || {};
      b2 = b2 || {};
      var c = {}, d;
      for (d in a2)
        module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(a2, d) && (c[d] = 0);
      for (var e in b2)
        module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(b2, e) && (c[e] = 0);
      for (var f in c)
        if (module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(c, f) && !module$contents$jspb$internal_compare_compareFields(a2[f], b2[f]))
          return false;
      return true;
    }
    function module$contents$jspb$internal_compare_maybeUnwrapMap(a2) {
      return a2 instanceof module$exports$jspb$map.Map ? a2.toArrayInternal() : a2;
    }
    function module$contents$jspb$internal_compare_compareFields(a2, b2) {
      a2 = module$contents$jspb$internal_maybeUnwrapByteString(a2);
      b2 = module$contents$jspb$internal_maybeUnwrapByteString(b2);
      a2 = module$contents$jspb$internal_compare_maybeUnwrapMap(a2);
      b2 = module$contents$jspb$internal_compare_maybeUnwrapMap(b2);
      if (a2 == b2)
        return true;
      if (module$exports$jspb$internal_bytes.SUPPORTS_UINT8ARRAY) {
        var c = module$contents$jspb$internal_bytes_isU8(a2), d = module$contents$jspb$internal_bytes_isU8(b2);
        if (c || d) {
          if (!c)
            if (typeof a2 === "string")
              a2 = module$contents$jspb$internal_bytes_dataAsU8(a2);
            else
              return false;
          if (d)
            d = b2;
          else if (typeof b2 === "string")
            d = module$contents$jspb$internal_bytes_dataAsU8(b2);
          else
            return false;
          if (a2.length !== d.length)
            return false;
          for (b2 = 0; b2 < a2.length; b2++)
            if (a2[b2] !== d[b2])
              return false;
          return true;
        }
      }
      if (a2 == null && module$contents$jspb$internal_isEmptyRepeatedField(b2) || b2 == null && module$contents$jspb$internal_isEmptyRepeatedField(a2))
        return true;
      if (!goog.isObject(a2) || !goog.isObject(b2))
        return typeof a2 === "number" && isNaN(a2) || typeof b2 === "number" && isNaN(b2) ? String(a2) == String(b2) : false;
      if (a2.constructor != b2.constructor)
        return false;
      if (a2.constructor === Array) {
        d = a2;
        c = a2 = void 0;
        for (var e = Math.max(d.length, b2.length), f = 0; f < e; f++) {
          var g = d[f], k = b2[f];
          g && g.constructor == Object && ((0, goog.asserts.assert)(a2 === void 0), (0, goog.asserts.assert)(f === d.length - 1), a2 = g, g = void 0);
          k && k.constructor == Object && ((0, goog.asserts.assert)(c === void 0), (0, goog.asserts.assert)(f === b2.length - 1), c = k, k = void 0);
          if (!module$contents$jspb$internal_compare_compareFields(g, k))
            return false;
        }
        return a2 || c ? (a2 = a2 || {}, c = c || {}, module$contents$jspb$internal_compare_compareExtensions(a2, c)) : true;
      }
      if (a2.constructor === Object)
        return module$contents$jspb$internal_compare_compareExtensions(a2, b2);
      throw Error("Invalid type in JSPB array");
    }
    function module$contents$jspb$internal_json_convertToJsonFormat(a2) {
      switch (typeof a2) {
        case "number":
          return isFinite(a2) ? a2 : String(a2);
        case "object":
          if (module$contents$jspb$internal_bytes_isU8(a2))
            return (0, goog.crypt.base64.encodeByteArray)(a2);
          if (a2 instanceof module$exports$jspb$bytestring.ByteString)
            return a2.asBase64();
          if (a2 instanceof module$exports$jspb$map.Map)
            return a2 = a2.toArrayInternal(), module$exports$jspb$internal_options.SERIALIZE_EMPTY_TRAILING_FIELDS || a2.length !== 0 ? a2 : void 0;
      }
      return a2;
    }
    function module$contents$jspb$internal_copy_cloneJspbField(a2) {
      return module$contents$jspb$internal_copy_cloneJspbFieldInternal(a2, module$contents$jspb$internal_copy_convertToJspbFormat);
    }
    function module$contents$jspb$internal_copy_cloneJspbFieldInternal(a2, b2) {
      if (a2 != null)
        return Array.isArray(a2) || module$contents$jspb$internal_isExtensionObject(a2) ? module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2, b2) : b2(a2);
    }
    function module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2, b2) {
      if (Array.isArray(a2)) {
        for (var c = Array(a2.length), d = 0; d < a2.length; d++)
          c[d] = module$contents$jspb$internal_copy_cloneJspbFieldInternal(a2[d], b2);
        module$contents$jspb$internal_array_state_isRepeatedField(a2) && module$contents$jspb$internal_array_state_markRepeatedField(c);
        return c;
      }
      c = {};
      for (d in a2)
        module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(a2, d) && (c[d] = module$contents$jspb$internal_copy_cloneJspbFieldInternal(a2[d], b2));
      return c;
    }
    function module$contents$jspb$internal_copy_convertToStructuredCloneableFormat(a2) {
      a2 = module$contents$jspb$internal_maybeUnwrapByteString(a2);
      return module$contents$jspb$internal_bytes_isU8(a2) ? new Uint8Array(a2) : a2 instanceof module$exports$jspb$map.Map ? module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2.toArrayInternal(), module$contents$jspb$internal_copy_convertToStructuredCloneableFormat) : a2;
    }
    function module$contents$jspb$internal_copy_convertToJsonFormat(a2) {
      a2 = module$contents$jspb$internal_json_convertToJsonFormat(a2);
      return Array.isArray(a2) ? module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2, module$contents$jspb$internal_copy_convertToJsonFormat) : a2;
    }
    function module$contents$jspb$internal_copy_messageCloner(a2) {
      return a2.clone();
    }
    function module$contents$jspb$internal_copy_convertToJspbFormat(a2) {
      return module$contents$jspb$internal_bytes_isU8(a2) ? new Uint8Array(a2) : a2 instanceof module$exports$jspb$map.Map ? a2.internalClone(module$contents$jspb$internal_copy_cloneJspbField, module$contents$jspb$internal_copy_messageCloner) : a2;
    }
    var module$contents$jspb$message_ctor_alternateDataPayload;
    function module$contents$jspb$message_ctor_newMessage(a2, b2) {
      module$contents$jspb$message_ctor_alternateDataPayload = b2;
      a2 = new a2(b2);
      module$contents$jspb$message_ctor_alternateDataPayload = null;
      return a2;
    }
    var module$exports$jspb = { Message: function(a2, b2, c) {
      goog.asserts.assertInstanceof(this, module$exports$jspb.Message, "The message constructor should only be used by subclasses");
      goog.asserts.assert(this.constructor !== module$exports$jspb.Message, "Message is an abstract class and cannot be directly constructed");
      if (goog.asserts.ENABLE_ASSERTS && this[module$exports$jspb$internal.EXEMPTED_SUBCLASS_MARKER] !== true) {
        goog.asserts.assert(this[module$exports$jspb$internal.GENERATED_SUBCLASS_MARKER] === true, "Message can only be subclassed by proto gencode.");
        var d = Object.getPrototypeOf(goog.asserts.assert(Object.getPrototypeOf(this)));
        goog.asserts.assert(d.hasOwnProperty(module$exports$jspb$internal.GENERATED_SUBCLASS_MARKER), "Generated jspb classes should not be extended");
      }
      d = module$contents$jspb$message_ctor_alternateDataPayload;
      module$contents$jspb$message_ctor_alternateDataPayload = null;
      a2 || (a2 = d);
      d = this.getJsPbMessageId();
      if (!a2)
        a2 = d ? [d] : [];
      else if (!module$contents$jspb$internal_options_skipMessageIdValidation && d && d !== "_" && d !== a2[0])
        throw Error('Expected message to have a message id: "' + d + '" in the array, got: ' + JSON.stringify(a2) + ", are you parsing with the wrong proto?");
      this.arrayIndexOffset = (d ? 0 : -1) - (this.constructor.internalGroupNumberDoNotUse || 0);
      this.convertedPrimitiveFields_ = this.internalWrappers_ = null;
      this.internalArray_ = a2;
      module$contents$jspb_initPivotAndExtensionObject(this, b2);
      if (c)
        for (a2 = 0; a2 < c.length; a2++)
          b2 = c[a2], b2 < this.pivot_ ? (b2 += this.arrayIndexOffset, (d = this.internalArray_[b2]) ? Array.isArray(d) && module$contents$jspb$internal_array_state_markRepeatedField(d) : this.internalArray_[b2] = module$contents$jspb_EMPTY_LIST_SENTINEL) : (module$contents$jspb_maybeInitEmptyExtensionObject(this), (d = this.internalExtensionObject_[b2]) ? Array.isArray(d) && module$contents$jspb$internal_array_state_markRepeatedField(d) : this.internalExtensionObject_[b2] = module$contents$jspb_EMPTY_LIST_SENTINEL);
    } };
    module$exports$jspb.Message.prototype.getJsPbMessageId = function() {
      return this.constructor.messageId;
    };
    var module$contents$jspb_EMPTY_LIST_SENTINEL = Object.freeze(module$contents$jspb$internal_newRepeatedField());
    var module$contents$jspb_initPivotAndExtensionObject = function(a2, b2) {
      var c = a2.internalArray_.length, d = c - 1;
      if (c && (c = a2.internalArray_[d], module$contents$jspb$internal_isExtensionObject(c))) {
        a2.pivot_ = d - a2.arrayIndexOffset;
        a2.internalExtensionObject_ = c;
        return;
      }
      b2 !== void 0 && -1 < b2 ? (a2.pivot_ = Math.max(b2, d + 1 - a2.arrayIndexOffset), a2.internalExtensionObject_ = null) : a2.pivot_ = Number.MAX_VALUE;
    };
    var module$contents$jspb_maybeInitEmptyExtensionObject = function(a2) {
      var b2 = a2.pivot_ + a2.arrayIndexOffset;
      a2.internalArray_[b2] || (module$contents$jspb$internal_isImmutableMessage(a2) ? (a2.internalExtensionObject_ = {}, Object.freeze(a2.internalExtensionObject_)) : a2.internalExtensionObject_ = a2.internalArray_[b2] = {});
    };
    module$exports$jspb.Message.prototype.internal_getField = function(a2, b2) {
      return a2 === -1 ? null : a2 >= this.pivot_ ? this.internalExtensionObject_ ? this.internalExtensionObject_[a2] : void 0 : (b2 === void 0 ? 0 : b2) && this.internalExtensionObject_ && this.internalExtensionObject_[a2] ? this.internalExtensionObject_[a2] : this.internalArray_[a2 + this.arrayIndexOffset];
    };
    module$exports$jspb.Message.prototype.internal_hasField = function(a2) {
      return this.internal_getField(a2) != null;
    };
    module$exports$jspb.Message.prototype.internal_hasOneofField = function(a2, b2) {
      return this.internal_computeOneofCase(b2) === a2;
    };
    module$exports$jspb.Message.prototype.internal_getRepeatedField = function(a2, b2, c) {
      b2 = b2 === void 0 ? true : b2;
      c = c === void 0 ? false : c;
      var d = this.internal_getField(a2, c);
      d == null && (d = module$contents$jspb_EMPTY_LIST_SENTINEL);
      if (module$contents$jspb$internal_isImmutableMessage(this))
        b2 && (module$contents$jspb$internal_array_state_markArrayImmutable(d), Object.freeze(d));
      else if (d === module$contents$jspb_EMPTY_LIST_SENTINEL || module$contents$jspb$internal_array_state_isImmutableArray(d))
        d = module$contents$jspb$internal_array_state_markRepeatedField(d.slice()), this.internal_setField(a2, d, c);
      return d;
    };
    module$exports$jspb.Message.prototype.internal_getFloatingPointField = function(a2) {
      a2 = this.internal_getField(a2);
      return a2 == null ? a2 : +a2;
    };
    module$exports$jspb.Message.prototype.internal_getBooleanField = function(a2) {
      a2 = this.internal_getField(a2);
      return a2 == null ? a2 : !!a2;
    };
    module$exports$jspb.Message.prototype.internal_getRepeatedFloatingPointField = function(a2) {
      var b2 = this.internal_getRepeatedField(a2, false);
      this.convertedPrimitiveFields_ || (this.convertedPrimitiveFields_ = {});
      if (!this.convertedPrimitiveFields_[a2]) {
        for (var c = 0; c < b2.length; c++)
          b2[c] = +b2[c];
        this.convertedPrimitiveFields_[a2] = true;
      }
      module$contents$jspb$internal_isImmutableMessage(this) && Object.freeze(b2);
      return b2;
    };
    module$exports$jspb.Message.prototype.internal_getRepeatedBooleanField = function(a2) {
      var b2 = this.internal_getRepeatedField(a2, false);
      this.convertedPrimitiveFields_ || (this.convertedPrimitiveFields_ = {});
      if (!this.convertedPrimitiveFields_[a2]) {
        for (var c = 0; c < b2.length; c++)
          b2[c] = !!b2[c];
        this.convertedPrimitiveFields_[a2] = true;
      }
      module$contents$jspb$internal_isImmutableMessage(this) && Object.freeze(b2);
      return b2;
    };
    module$exports$jspb.Message.prototype.internal_getFieldWithDefault = function(a2, b2) {
      a2 = this.internal_getField(a2);
      return a2 == null ? b2 : a2;
    };
    module$exports$jspb.Message.prototype.internal_getBooleanFieldWithDefault = function(a2, b2) {
      a2 = this.internal_getBooleanField(a2);
      return a2 == null ? b2 === void 0 ? false : b2 : a2;
    };
    module$exports$jspb.Message.prototype.internal_getFloatingPointFieldWithDefault = function(a2, b2) {
      a2 = this.internal_getFloatingPointField(a2);
      return a2 == null ? b2 === void 0 ? 0 : b2 : a2;
    };
    function module$contents$jspb_getMapField(a2, b2, c, d, e) {
      if (b2 == null) {
        if (d)
          return;
        b2 = module$contents$jspb$internal_newRepeatedField();
      }
      if (b2.constructor === module$exports$jspb$map.Map)
        return b2;
      b2 = new module$exports$jspb$map.Map(b2, e);
      module$contents$jspb$internal_isImmutableMessage(a2) && b2.internalMarkImmutable();
      a2.internal_setField(c, b2, false, true);
      return b2;
    }
    module$exports$jspb.Message.prototype.internal_getMapField = function(a2, b2, c) {
      return module$contents$jspb_getMapField(this, this.internal_getField(a2), a2, b2, c);
    };
    module$exports$jspb.Message.prototype.internal_getBytesMapField = function(a2, b2) {
      var c = this.internal_getField(a2);
      if (Array.isArray(c) && c)
        for (var d = 0; d < c.length; d++)
          c[d][1] = module$contents$jspb$internal_bytesAsByteString(c[d][1]);
      return module$contents$jspb_getMapField(this, c, a2, b2);
    };
    module$exports$jspb.Message.prototype.internal_clearMapField = function(a2) {
      var b2 = this.internal_getField(a2);
      b2 instanceof module$exports$jspb$map.Map ? b2.clear() : this.internal_clearField(a2);
      return this;
    };
    module$exports$jspb.Message.prototype.internal_setField = function(a2, b2, c, d) {
      c = c === void 0 ? false : c;
      (d === void 0 ? 0 : d) || module$contents$jspb_checkNotImmutable(this);
      c || a2 >= this.pivot_ ? (module$contents$jspb_maybeInitEmptyExtensionObject(this), this.internalExtensionObject_[a2] = b2) : this.internalArray_[a2 + this.arrayIndexOffset] = b2;
      return this;
    };
    module$exports$jspb.Message.prototype.internal_setRepeatedField = function(a2, b2, c) {
      c = c === void 0 ? false : c;
      return this.internal_setField(a2, b2 == null ? module$contents$jspb$internal_array_state_markRepeatedField([]) : Array.isArray(b2) ? module$contents$jspb$internal_array_state_markRepeatedField(b2) : b2, c);
    };
    module$exports$jspb.Message.prototype.internal_clearField = function(a2, b2) {
      return this.internal_setField(a2, void 0, false, b2 === void 0 ? false : b2);
    };
    module$exports$jspb.Message.prototype.internal_clearRepeatedField = function(a2) {
      return this.internal_setField(a2, module$contents$jspb_EMPTY_LIST_SENTINEL);
    };
    module$exports$jspb.Message.prototype.internal_clearWrapperField = function(a2) {
      return this.internal_setWrapperField(a2, void 0);
    };
    module$exports$jspb.Message.prototype.internal_clearRepeatedWrapperField = function(a2) {
      return this.internal_setRepeatedWrapperField(a2, void 0);
    };
    function module$contents$jspb_setFieldIgnoringDefault(a2, b2, c, d) {
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      module$contents$jspb_checkNotImmutable(a2);
      c !== d ? a2.internal_setField(b2, c) : a2.internal_clearField(b2);
      return a2;
    }
    module$exports$jspb.Message.prototype.internal_addToRepeatedField = function(a2, b2, c) {
      module$contents$jspb_checkNotImmutable(this);
      a2 = this.internal_getRepeatedField(a2);
      c != void 0 ? a2.splice(c, 0, b2) : a2.push(b2);
      return this;
    };
    module$exports$jspb.Message.prototype.internal_setOneofField = function(a2, b2, c) {
      module$contents$jspb_checkNotImmutable(this);
      (b2 = this.internal_computeOneofCase(b2)) && b2 !== a2 && c != null && (this.internalWrappers_ && b2 in this.internalWrappers_ && (this.internalWrappers_[b2] = void 0), this.internal_setField(b2, void 0));
      return this.internal_setField(a2, c);
    };
    module$exports$jspb.Message.prototype.internal_computeOneofCase = function(a2) {
      for (var b2 = 0, c = 0; c < a2.length; c++) {
        var d = a2[c];
        this.internal_getField(d) != null && (b2 !== 0 && this.internal_clearField(b2, true), b2 = d);
      }
      return b2;
    };
    module$exports$jspb.Message.prototype.internal_getWrapperField = function(a2, b2, c, d) {
      if (b2 === -1)
        return null;
      this.internalWrappers_ || (this.internalWrappers_ = {});
      var e = this.internalWrappers_[b2];
      if (e)
        return e;
      d = this.internal_getField(b2, d === void 0 ? false : d);
      if (d == null && !c)
        return e;
      a2 = new a2(d);
      module$contents$jspb$internal_isImmutableMessage(this) && module$contents$jspb$internal_internalMarkMessageImmutable(a2);
      return this.internalWrappers_[b2] = a2;
    };
    module$exports$jspb.Message.prototype.internal_getRepeatedWrapperField = function(a2, b2, c) {
      c = c === void 0 ? false : c;
      this.internalWrappers_ || (this.internalWrappers_ = {});
      var d = module$contents$jspb$internal_isImmutableMessage(this), e = this.internalWrappers_[b2];
      if (!e) {
        c = this.internal_getRepeatedField(b2, true, c);
        e = [];
        d = d || module$contents$jspb$internal_array_state_isImmutableArray(c);
        for (var f = 0; f < c.length; f++)
          e[f] = new a2(c[f]), d && module$contents$jspb$internal_internalMarkMessageImmutable(e[f]);
        d && (module$contents$jspb$internal_array_state_markArrayImmutable(e), Object.freeze(e));
        this.internalWrappers_[b2] = e;
      }
      return e;
    };
    module$exports$jspb.Message.prototype.internal_setWrapperField = function(a2, b2, c) {
      c = c === void 0 ? false : c;
      module$contents$jspb_checkNotImmutable(this);
      this.internalWrappers_ || (this.internalWrappers_ = {});
      var d = b2 ? b2.toArrayInternal() : b2;
      this.internalWrappers_[a2] = b2;
      return this.internal_setField(a2, d, c);
    };
    module$exports$jspb.Message.prototype.internal_setOneofWrapperField = function(a2, b2, c) {
      module$contents$jspb_checkNotImmutable(this);
      this.internalWrappers_ || (this.internalWrappers_ = {});
      var d = c ? c.toArrayInternal() : c;
      this.internalWrappers_[a2] = c;
      return this.internal_setOneofField(a2, b2, d);
    };
    module$exports$jspb.Message.prototype.internal_setRepeatedWrapperField = function(a2, b2, c) {
      c = c === void 0 ? false : c;
      module$contents$jspb_checkNotImmutable(this);
      if (b2) {
        var d = module$contents$jspb$internal_newRepeatedField();
        for (var e = 0; e < b2.length; e++)
          d[e] = b2[e].toArrayInternal();
        this.internalWrappers_ || (this.internalWrappers_ = {});
        this.internalWrappers_[a2] = b2;
      } else
        this.internalWrappers_ && (this.internalWrappers_[a2] = void 0), d = module$contents$jspb_EMPTY_LIST_SENTINEL;
      return this.internal_setField(a2, d, c);
    };
    module$exports$jspb.Message.prototype.internal_addAndReturnRepeatedWrapperField = function(a2, b2, c, d) {
      module$contents$jspb_checkNotImmutable(this);
      var e = this.internal_getRepeatedWrapperField(c, a2);
      b2 = b2 ? b2 : new c();
      a2 = this.internal_getRepeatedField(a2);
      d != void 0 ? (e.splice(d, 0, b2), a2.splice(d, 0, b2.toArrayInternal())) : (e.push(b2), a2.push(b2.toArrayInternal()));
      return b2;
    };
    module$exports$jspb.Message.prototype.internal_addToRepeatedWrapperField = function(a2, b2, c, d) {
      this.internal_addAndReturnRepeatedWrapperField(a2, b2, c, d);
      return this;
    };
    module$exports$jspb.Message.prototype.toArray = function() {
      return this.toJSON();
    };
    module$exports$jspb.Message.prototype.toJsonValue = function() {
      return this.toJSON();
    };
    module$exports$jspb.Message.prototype.toJSON = function() {
      var a2 = module$contents$jspb_prepareForSerialize(this.toArrayInternal());
      return module$contents$jspb$internal_inSerialize ? a2 : module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2, module$contents$jspb$internal_copy_convertToJsonFormat);
    };
    module$exports$jspb.Message.prototype.toStructuredCloneableValue = function() {
      return module$contents$jspb$internal_copy_cloneJspbObjectInternal(this.toArrayInternal(), module$contents$jspb$internal_copy_convertToStructuredCloneableFormat);
    };
    module$exports$jspb.Message.prototype.toArrayInternal = function() {
      return this.internalArray_;
    };
    function module$contents$jspb_serializeSpecialValues(a2, b2) {
      return module$contents$jspb$internal_json_convertToJsonFormat(b2);
    }
    module$exports$jspb.Message.prototype.serialize = function() {
      module$contents$jspb$internal_inSerialize = true;
      try {
        return JSON.stringify(this.toJSON(), module$contents$jspb_serializeSpecialValues);
      } finally {
        module$contents$jspb$internal_inSerialize = false;
      }
    };
    var module$contents$jspb_prepareForSerialize = function(a2) {
      if (module$exports$jspb$internal_options.SERIALIZE_EMPTY_TRAILING_FIELDS)
        return a2;
      for (var b2, c = a2.length, d = false, e, f = a2.length; f--; ) {
        var g = a2[f];
        if (Array.isArray(g)) {
          var k = g;
          g = module$contents$jspb$internal_isEmptyRepeatedField(g) ? null : module$contents$jspb_prepareForSerialize(g);
          g != k && (d = true);
        } else if (f === a2.length - 1 && module$contents$jspb$internal_isExtensionObject(g)) {
          a: {
            k = e = void 0;
            var h = g;
            goog.asserts.assert(!module$exports$jspb$internal_options.SERIALIZE_EMPTY_TRAILING_FIELDS);
            var l = {}, m = false;
            for (k in h)
              if (module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(h, k)) {
                var n = h[k];
                if (Array.isArray(n)) {
                  var p = n;
                  n = module$contents$jspb$internal_isEmptyRepeatedField(n) ? null : module$contents$jspb_prepareForSerialize(n);
                  n != p && (m = true);
                }
                n != null ? l[k] = n : m = true;
              }
            if (m) {
              for (e in l) {
                e = l;
                break a;
              }
              e = null;
            } else
              e = h;
          }
          e != g && (d = true);
          c--;
          continue;
        }
        g == null && c == f + 1 ? (d = true, c--) : d && (b2 || (b2 = a2.slice(0, c)), b2[f] = g);
      }
      if (!d)
        return a2;
      b2 || (b2 = a2.slice(0, c));
      e && b2.push(e);
      return b2;
    };
    module$exports$jspb.Message.deserializeWithCtor = function(a2, b2) {
      a2 = module$contents$jspb$message_ctor_newMessage(a2, b2 ? JSON.parse(b2) : null);
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      return a2;
    };
    module$exports$jspb.Message.prototype.toString = function() {
      return this.toArrayInternal().toString();
    };
    module$exports$jspb.Message.prototype.getExtension = function(a2) {
      var b2 = a2.fieldIndex, c = a2.ctor;
      return a2.isRepeated ? c ? this.internal_getRepeatedWrapperField(c, b2, true) : this.internal_getRepeatedField(b2, true, true) : c ? this.internal_getWrapperField(c, b2, void 0, true) : this.internal_getField(b2, true);
    };
    module$exports$jspb.Message.prototype.setExtension = function(a2, b2) {
      module$contents$jspb_checkNotImmutable(this);
      var c = a2.fieldIndex, d = a2.ctor;
      return a2.isRepeated ? d ? this.internal_setRepeatedWrapperField(c, b2, true) : this.internal_setRepeatedField(c, b2, true) : d ? this.internal_setWrapperField(c, b2, true) : this.internal_setField(c, b2, true);
    };
    module$exports$jspb.Message.difference = function(a2, b2) {
      if (!(a2 instanceof b2.constructor))
        throw Error("Messages have different types.");
      var c = a2.toArrayInternal();
      b2 = b2.toArrayInternal();
      var d = [], e = 0, f = c.length > b2.length ? c.length : b2.length;
      a2.getJsPbMessageId() && (d[0] = a2.getJsPbMessageId(), e = 1);
      for (; e < f; e++)
        module$contents$jspb$internal_compare_compareFields(c[e], b2[e]) || (d[e] = b2[e]);
      return module$contents$jspb$message_ctor_newMessage(a2.constructor, d);
    };
    module$exports$jspb.Message.equals = function(a2, b2) {
      return a2 == b2 || !(!a2 || !b2) && a2 instanceof b2.constructor && module$contents$jspb$internal_compare_compareFields(a2.toArrayInternal(), b2.toArrayInternal());
    };
    module$exports$jspb.Message.prototype.clone = function() {
      var a2 = goog.asserts.assertInstanceof(this, module$exports$jspb.Message), b2 = a2.constructor, c = module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2.toArrayInternal(), module$contents$jspb$internal_copy_convertToJspbFormat);
      b2 = module$contents$jspb$message_ctor_newMessage(b2, c);
      module$contents$jspb_copyUnknownFields(b2, a2);
      return b2;
    };
    function module$contents$jspb_clearMessage(a2) {
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      module$contents$jspb_checkNotImmutable(a2);
      for (var b2 = a2.internalArray_, c = a2.internalExtensionObject_, d = b2.length + (c != null ? -1 : 0), e = a2.getJsPbMessageId() != null ? 1 : 0; e < d; e++)
        b2[e] = module$contents$jspb$internal_array_state_isRepeatedField(b2[e]) ? module$contents$jspb_EMPTY_LIST_SENTINEL : void 0;
      if (c)
        for (var f in c)
          module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(c, f) && (c[f] = module$contents$jspb$internal_array_state_isRepeatedField(c[f]) ? module$contents$jspb_EMPTY_LIST_SENTINEL : void 0);
      a2.internalWrappers_ = null;
      a2.convertedPrimitiveFields_ = null;
      delete a2.internalUnknownFields_;
      return a2;
    }
    function module$contents$jspb_copyUnknownFields(a2, b2) {
      goog.asserts.assert(a2, "expected `to` to be non-null");
      goog.asserts.assert(b2, "expected `from` to be non-null");
      b2.internalUnknownFields_ && (a2.internalUnknownFields_ = b2.internalUnknownFields_.slice());
      var c = b2.internalWrappers_;
      if (c) {
        b2 = b2.internalExtensionObject_;
        for (var d in c)
          if (module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(c, d)) {
            var e = c[d];
            if (e) {
              var f = !(!b2 || !b2[d]), g = +d;
              if (Array.isArray(e)) {
                if (e.length)
                  for (f = a2.internal_getRepeatedWrapperField(e[0].constructor, g, f), g = 0; g < Math.min(f.length, e.length); g++)
                    module$contents$jspb_copyUnknownFields(f[g], goog.asserts.assertInstanceof(e[g], module$exports$jspb.Message));
              } else
                goog.asserts.assertInstanceof(e, module$exports$jspb.Message), (f = a2.internal_getWrapperField(e.constructor, g, void 0, f)) && module$contents$jspb_copyUnknownFields(f, e);
            }
          }
      }
    }
    var module$contents$jspb_checkNotImmutable = function(a2) {
      if (module$contents$jspb$internal_options_freezerLoaded && module$contents$jspb$internal_isImmutableMessage(a2))
        throw Error("Cannot mutate an immutable Message");
    };
    function module$contents$jspb_isOneofCase(a2, b2, c) {
      return a2.internal_computeOneofCase(b2) === c ? c : -1;
    }
    module$exports$jspb.Message.prototype.internal_getIntegerFieldWithDefault = function(a2, b2) {
      return this.internal_getFieldWithDefault(a2, b2 === void 0 ? 0 : b2);
    };
    module$exports$jspb.Message.prototype.internal_getIntegerInStringFieldWithDefault = function(a2, b2) {
      return this.internal_getFieldWithDefault(a2, b2 === void 0 ? "0" : b2);
    };
    module$exports$jspb.Message.prototype.internal_getStringFieldWithDefault = function(a2, b2) {
      return this.internal_getFieldWithDefault(a2, b2 === void 0 ? "" : b2);
    };
    module$exports$jspb.Message.prototype.internal_getOneofFieldWithDefault = function(a2, b2, c) {
      return this.internal_getFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofBooleanFieldWithDefault = function(a2, b2, c) {
      return this.internal_getBooleanFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofIntegerFieldWithDefault = function(a2, b2, c) {
      return this.internal_getIntegerFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofIntegerInStringFieldWithDefault = function(a2, b2, c) {
      return this.internal_getIntegerInStringFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofFloatingPointFieldWithDefault = function(a2, b2, c) {
      return this.internal_getFloatingPointFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofStringFieldWithDefault = function(a2, b2, c) {
      return this.internal_getStringFieldWithDefault(module$contents$jspb_isOneofCase(this, b2, a2), c);
    };
    module$exports$jspb.Message.prototype.internal_getOneofField = function(a2, b2) {
      return this.internal_getField(module$contents$jspb_isOneofCase(this, b2, a2));
    };
    module$exports$jspb.Message.prototype.internal_getOneofBooleanField = function(a2, b2) {
      return this.internal_getBooleanField(module$contents$jspb_isOneofCase(this, b2, a2));
    };
    module$exports$jspb.Message.prototype.internal_getOneofFloatingPointField = function(a2, b2) {
      return this.internal_getFloatingPointField(module$contents$jspb_isOneofCase(this, b2, a2));
    };
    module$exports$jspb.Message.prototype.internal_getOneofWrapperField = function(a2, b2, c) {
      return this.internal_getWrapperField(a2, module$contents$jspb_isOneofCase(this, c, b2));
    };
    module$exports$jspb.Message.prototype.internal_setProto3BooleanField = function(a2, b2) {
      return module$contents$jspb_setFieldIgnoringDefault(this, a2, b2, false);
    };
    module$exports$jspb.Message.prototype.internal_setProto3IntField = function(a2, b2) {
      return module$contents$jspb_setFieldIgnoringDefault(this, a2, b2, 0);
    };
    module$exports$jspb.Message.prototype.internal_setProto3FloatField = function(a2, b2) {
      return module$contents$jspb_setFieldIgnoringDefault(this, a2, b2, 0);
    };
    module$exports$jspb.Message.prototype.internal_setProto3StringField = function(a2, b2) {
      return module$contents$jspb_setFieldIgnoringDefault(this, a2, b2, "");
    };
    module$exports$jspb.Message.prototype.internal_setProto3EnumField = function(a2, b2) {
      return module$contents$jspb_setFieldIgnoringDefault(this, a2, b2, 0);
    };
    module$exports$jspb.Message.prototype.internal_setProto3StringIntField = function(a2, b2) {
      goog.asserts.assertInstanceof(this, module$exports$jspb.Message);
      module$contents$jspb_checkNotImmutable(this);
      b2 != null && +b2 !== 0 ? this.internal_setField(a2, b2) : this.internal_clearField(a2);
      return this;
    };
    module$exports$jspb.Message.prototype.internal_setProto3BytesField = function(a2, b2) {
      goog.asserts.assertInstanceof(this, module$exports$jspb.Message);
      module$contents$jspb_checkNotImmutable(this);
      b2 != null && b2.length !== 0 ? this.internal_setField(a2, b2) : this.internal_clearField(a2);
      return this;
    };
    module$exports$jspb.clearMessage = module$contents$jspb_clearMessage;
    module$exports$jspb.copyMessage = function(a2, b2) {
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      goog.asserts.assertInstanceof(b2, module$exports$jspb.Message);
      goog.asserts.assert(b2.constructor == a2.constructor, "Copy source and target message should have the same type.");
      module$contents$jspb_checkNotImmutable(a2);
      var c = b2.toArrayInternal(), d = a2.internalArray_;
      d.length = c.length;
      for (var e = 0; e < c.length; e++)
        d[e] = module$contents$jspb$internal_copy_cloneJspbField(c[e]);
      a2.internalWrappers_ = null;
      a2.convertedPrimitiveFields_ = null;
      a2.internalExtensionObject_ = null;
      module$contents$jspb_initPivotAndExtensionObject(a2, a2.pivot_);
      module$contents$jspb_copyUnknownFields(a2, b2);
      return a2;
    };
    jspb.internal = {};
    jspb.internal.binary = {};
    function module$contents$jspb$internal$binary_newBinaryExtension(a2, b2, c, d, e, f, g) {
      return { fieldInfo: a2, binaryReaderFn: b2, binaryWriterFn: c, binaryMessageSerializeFn: d, binaryFieldsInitializer: e, messageSetReaderFn: f, messageSetExtensions: g };
    }
    jspb.internal.binary.createBinaryExtension = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_newBinaryExtension(a2, b2, c, d, e);
    };
    jspb.internal.binary.createBinaryMessageSetExtension = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_newBinaryExtension(a2, b2, c, d, void 0, module$contents$jspb$internal$binary_readBinaryExtensionMessageSet, e);
    };
    jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields = function(a2, b2, c) {
      b2.writeUnknownFields(a2);
      if (c) {
        for (var d in c)
          if (module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(c, d)) {
            var e = c[d];
            goog.asserts.assert(e.binaryWriterFn);
            e.binaryWriterFn(b2, a2, e.fieldInfo, e.binaryMessageSerializeFn);
          }
      }
    };
    jspb.internal.binary.writeMessageSetExt = function(a2, b2, c, d) {
      a2.writeMessageSet(c.fieldIndex, b2.getExtension(c), d);
    };
    var module$contents$jspb$internal$binary_MESSAGE_SET_START_TAG = 8 + module$exports$jspb$BinaryConstants.WireType.START_GROUP;
    var module$contents$jspb$internal$binary_MESSAGE_SET_END_TAG = 8 + module$exports$jspb$BinaryConstants.WireType.END_GROUP;
    var module$contents$jspb$internal$binary_MESSAGE_SET_TYPE_ID_TAG = 16 + module$exports$jspb$BinaryConstants.WireType.VARINT;
    var module$contents$jspb$internal$binary_MESSAGE_SET_MESSAGE_TAG = 24 + module$exports$jspb$BinaryConstants.WireType.DELIMITED;
    var module$contents$jspb$internal$binary_readBinaryExtensionMessageSet = function(a2, b2, c) {
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      var d = a2.constructor;
      d = d[module$contents$jspb$internal$binary_binaryFieldsCache] || (d[module$contents$jspb$internal$binary_binaryFieldsCache] = {});
      for (var e = {}; b2.nextField() && !b2.isEndGroup(); ) {
        if (b2.getTag() === module$contents$jspb$internal$binary_MESSAGE_SET_START_TAG) {
          for (var f = b2.getFieldCursor(), g = 0, k = null; b2.nextField(); )
            if (b2.getTag() === module$contents$jspb$internal$binary_MESSAGE_SET_TYPE_ID_TAG)
              g = b2.readUint32();
            else if (b2.getTag() === module$contents$jspb$internal$binary_MESSAGE_SET_MESSAGE_TAG)
              k = b2.readBytes();
            else if (b2.getWireType() === module$exports$jspb$BinaryConstants.WireType.END_GROUP)
              break;
            else
              b2.skipField();
          if (b2.getTag() !== module$contents$jspb$internal$binary_MESSAGE_SET_END_TAG || k === null || g === 0)
            throw Error("Malformed binary bytes for message set");
          var h = d[g];
          if (!h) {
            var l = c[g];
            l && (e.$jscomp$loop$prop$fieldInfo$55 = l.fieldInfo, e.$jscomp$loop$prop$deserializeBinaryFromReader$56 = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryExtension(l), h = d[g] = function(m) {
              return function(n, p) {
                return n.setExtension(m.$jscomp$loop$prop$fieldInfo$55, m.$jscomp$loop$prop$deserializeBinaryFromReader$56(new m.$jscomp$loop$prop$fieldInfo$55.ctor(), new module$exports$jspb$binary$reader.BinaryReader(p)));
              };
            }(e));
          }
          h ? h(a2, k) : b2.addUnknownFieldsStartingFrom(a2, f);
        } else
          b2.handleUnknownField(a2);
        e = { $jscomp$loop$prop$fieldInfo$55: e.$jscomp$loop$prop$fieldInfo$55, $jscomp$loop$prop$deserializeBinaryFromReader$56: e.$jscomp$loop$prop$deserializeBinaryFromReader$56 };
      }
      return a2;
    };
    jspb.internal.binary.readBinaryExtensionMessageSet = module$contents$jspb$internal$binary_readBinaryExtensionMessageSet;
    function module$contents$jspb$internal$binary_writeMap(a2, b2, c, d, e, f) {
      (a2 = a2.internal_getMapField(b2, true)) && a2.forEach(function(g, k) {
        d.writeMessage(c, g, function(h, l) {
          e.call(l, 1, k);
          f.call(l, 2, g);
        });
      });
    }
    function module$contents$jspb$internal$binary_writeMessageMap(a2, b2, c, d, e, f, g) {
      (a2 = a2.internal_getMapField(b2, true, c)) && a2.forEach(function(k, h) {
        e.writeMessage(d, k, function(l, m) {
          f.call(m, 1, h);
          m.writeMessage(2, k, g);
        });
      });
    }
    var module$contents$jspb$internal$binary_primitiveMapEntry;
    var module$contents$jspb$internal$binary_MapEntry = function() {
      module$exports$jspb.Message.call(this, null);
    };
    $jscomp.inherits(module$contents$jspb$internal$binary_MapEntry, module$exports$jspb.Message);
    module$contents$jspb$internal$binary_MapEntry.prototype.applyToMap = function(a2, b2, c) {
      a2.set(this.internal_getFieldWithDefault(1, b2), this.internal_getFieldWithDefault(2, c));
    };
    module$contents$jspb$internal$binary_MapEntry.prototype.applyToMessageValuedMap = function(a2, b2, c) {
      a2.set(this.internal_getFieldWithDefault(1, b2), this.internal_getWrapperField(c, 2) || new c());
    };
    module$contents$jspb$internal$binary_MapEntry.prototype.applyToBytesValuedMap = function(a2, b2) {
      a2.set(this.internal_getFieldWithDefault(1, b2), module$contents$jspb$internal_bytesAsByteString(this.internal_getFieldWithDefault(2, module$exports$jspb$bytestring.ByteString.empty())));
    };
    goog.asserts.ENABLE_ASSERTS && (module$contents$jspb$internal$binary_MapEntry.prototype[module$exports$jspb$internal.EXEMPTED_SUBCLASS_MARKER] = true);
    function module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, e, f, g) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      var k = new module$contents$jspb$internal$binary_MapEntry();
      a2.readMessage(k, function(h, l) {
        for (; l.nextField(); ) {
          var m = l.getFieldNumber();
          m === 1 ? e(l, h, 1) : m === 2 && jspb.internal.binary.readMessage(l, h, 2, d, g);
        }
      });
      k.applyToMessageValuedMap(goog.asserts.assert(b2.internal_getMapField(c, false, d)), f, d);
      return true;
    }
    function module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, d, e, f, g) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      module$contents$jspb$internal$binary_primitiveMapEntry === void 0 ? module$contents$jspb$internal$binary_primitiveMapEntry = new module$contents$jspb$internal$binary_MapEntry() : module$contents$jspb_clearMessage(module$contents$jspb$internal$binary_primitiveMapEntry);
      a2.readMessage(module$contents$jspb$internal$binary_primitiveMapEntry, function(k, h) {
        for (; h.nextField(); ) {
          var l = h.getFieldNumber();
          l === 1 ? d(h, k, 1) : l === 2 && e(h, k, 2);
        }
      });
      a2 = goog.asserts.assert(b2.internal_getMapField(c, false));
      g === module$exports$jspb$bytestring.ByteString.empty() ? module$contents$jspb$internal$binary_primitiveMapEntry.applyToBytesValuedMap(a2, f) : module$contents$jspb$internal$binary_primitiveMapEntry.applyToMap(a2, f, g);
      return true;
    }
    var module$contents$jspb$internal$binary_deserializeBinaryFromReaderCache = goog.DEBUG ? Symbol("deserializeBinaryFromReaderCache") : Symbol();
    function module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromMessageSetAndReader(a2, b2, c) {
      goog.asserts.assertFunction(b2);
      goog.asserts.assertObject(c);
      return a2[module$contents$jspb$internal$binary_deserializeBinaryFromReaderCache] || (a2[module$contents$jspb$internal$binary_deserializeBinaryFromReaderCache] = function(d, e) {
        return b2(d, e, c);
      });
    }
    function module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryFields(a2) {
      var b2 = a2[module$contents$jspb$internal$binary_deserializeBinaryFromReaderCache];
      if (!b2) {
        var c = module$contents$jspb$internal$binary_getBinaryFields(a2);
        b2 = function(d, e) {
          return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGenericImpl(d, e, c);
        };
        a2[module$contents$jspb$internal$binary_deserializeBinaryFromReaderCache] = b2;
      }
      return b2;
    }
    function module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryExtension(a2) {
      var b2 = a2.binaryFieldsInitializer;
      goog.DEBUG && delete a2.binaryFieldsInitializer;
      if (b2)
        return module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryFields(b2);
      b2 = a2.messageSetReaderFn;
      goog.DEBUG && delete a2.messageSetReaderFn;
      if (b2) {
        var c = goog.asserts.assert(a2.messageSetExtensions);
        delete a2.messageSetExtensions;
        return module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromMessageSetAndReader(goog.asserts.assert(a2.fieldInfo.ctor), b2, c);
      }
    }
    function module$contents$jspb$internal$binary_makeParserFromBinaryExtension(a2) {
      var b2 = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryExtension(a2), c = a2.fieldInfo, d = goog.asserts.assert(a2.binaryReaderFn);
      goog.DEBUG && delete a2.binaryReaderFn;
      return b2 ? function(e, f) {
        return d(e, f, c, b2);
      } : function(e, f) {
        return d(e, f, c);
      };
    }
    var module$contents$jspb$internal$binary_makeParserFromArray = function(a2) {
      var b2 = a2[0];
      switch (a2.length) {
        case 2:
          var c = a2[1];
          goog.asserts.assertArray(c);
          return function(t, v, u) {
            return b2(t, v, u, c);
          };
        case 3:
          goog.asserts.assert(b2.length === 5);
          var d = a2[1];
          a2 = a2[2];
          goog.asserts.assertFunction(d);
          var e = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryFields(a2);
          return function(t, v, u) {
            return b2(t, v, u, d, e);
          };
        case 4:
          goog.asserts.assert(b2.length === 6);
          var f = a2[1], g = a2[2], k = a2[3];
          goog.asserts.assertFunction(f);
          var h = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromBinaryFields(g);
          goog.asserts.assertArray(k);
          return function(t, v, u) {
            return b2(t, v, u, f, h, k);
          };
        case 5:
          goog.asserts.assert(b2.length === 5);
          var l = a2[1];
          g = a2[3];
          var m = a2[4];
          goog.asserts.assert(a2[2] === void 0);
          goog.asserts.assertFunction(l);
          var n = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromMessageSetAndReader(l, g, m);
          return function(t, v, u) {
            return b2(t, v, u, l, n);
          };
        case 6:
          goog.asserts.assert(b2.length === 6);
          var p = a2[1];
          g = a2[3];
          m = a2[4];
          var q = a2[5];
          goog.asserts.assert(a2[2] === void 0);
          goog.asserts.assertFunction(p);
          goog.asserts.assertArray(q);
          var r = module$contents$jspb$internal$binary_makeDeserializeBinaryFromReaderFromMessageSetAndReader(p, g, m);
          return function(t, v, u) {
            return b2(t, v, u, p, r, q);
          };
        default:
          throw Error("Unsupported number of parameters, expected [2-6], got " + a2.length);
      }
    };
    var module$contents$jspb$internal$binary_binaryFieldsCache = goog.DEBUG ? Symbol("binaryFieldsCache") : Symbol();
    function module$contents$jspb$internal$binary_getBinaryFields(a2) {
      goog.asserts.assertFunction(a2);
      goog.asserts.assert(a2.length === 0);
      return a2[module$contents$jspb$internal$binary_binaryFieldsCache] || (a2[module$contents$jspb$internal$binary_binaryFieldsCache] = goog.asserts.assertObject(a2()));
    }
    var module$contents$jspb$internal$binary_deserializeBinaryFromReaderGenericImpl = function(a2, b2, c) {
      for (; b2.nextField() && !b2.isEndGroup(); ) {
        var d = b2.getFieldNumber(), e = c[d];
        if (e)
          Array.isArray(e) && (e = c[d] = module$contents$jspb$internal$binary_makeParserFromArray(e));
        else {
          var f = c[0];
          f && (f = f[d]) && (e = c[d] = module$contents$jspb$internal$binary_makeParserFromBinaryExtension(f));
        }
        e && e(b2, a2, d) || b2.handleUnknownField(a2);
      }
      return a2;
    };
    var module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGenericImpl(a2, b2, module$contents$jspb$internal$binary_getBinaryFields(c));
    };
    jspb.internal.binary.deserializeBinaryFromReaderGeneric = module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric;
    jspb.internal.binary.serializeBinary = function(a2, b2) {
      var c = new module$exports$jspb$binary$writer.BinaryWriter();
      b2(a2, c);
      return c.getResultBuffer();
    };
    jspb.internal.binary.deserializeBinary = function(a2, b2, c) {
      a2 = module$exports$jspb$binary$reader.BinaryReader.alloc(a2);
      try {
        return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(new b2(), a2, c);
      } finally {
        a2.free();
      }
    };
    jspb.internal.binary.deserializeBinaryMessageSet = function(a2, b2, c) {
      a2 = module$exports$jspb$binary$reader.BinaryReader.alloc(a2);
      try {
        return module$contents$jspb$internal$binary_readBinaryExtensionMessageSet(new b2(), a2, c);
      } finally {
        a2.free();
      }
    };
    jspb.internal.binary.writeDoubleExt = function(a2, b2, c) {
      a2.writeDouble(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedDoubleExt = function(a2, b2, c) {
      a2.writeRepeatedDouble(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedDoubleExt = function(a2, b2, c) {
      a2.writePackedDouble(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeDouble = function(a2, b2, c) {
      a2.writeDouble(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedDouble = function(a2, b2, c) {
      a2.writeRepeatedDouble(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedDouble = function(a2, b2, c) {
      a2.writePackedDouble(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeFloatExt = function(a2, b2, c) {
      a2.writeFloat(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedFloatExt = function(a2, b2, c) {
      a2.writeRepeatedFloat(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedFloatExt = function(a2, b2, c) {
      a2.writePackedFloat(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeFloat = function(a2, b2, c) {
      a2.writeFloat(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedFloat = function(a2, b2, c) {
      a2.writeRepeatedFloat(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedFloat = function(a2, b2, c) {
      a2.writePackedFloat(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeInt64StringExt = function(a2, b2, c) {
      a2.writeInt64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedInt64StringExt = function(a2, b2, c) {
      a2.writeRepeatedInt64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedInt64StringExt = function(a2, b2, c) {
      a2.writePackedInt64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeInt64Ext = function(a2, b2, c) {
      a2.writeInt64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedInt64Ext = function(a2, b2, c) {
      a2.writeRepeatedInt64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedInt64Ext = function(a2, b2, c) {
      a2.writePackedInt64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeInt64String = function(a2, b2, c) {
      a2.writeInt64String(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedInt64String = function(a2, b2, c) {
      a2.writeRepeatedInt64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedInt64String = function(a2, b2, c) {
      a2.writePackedInt64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeInt64 = function(a2, b2, c) {
      a2.writeInt64(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedInt64 = function(a2, b2, c) {
      a2.writeRepeatedInt64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedInt64 = function(a2, b2, c) {
      a2.writePackedInt64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeUint64StringExt = function(a2, b2, c) {
      a2.writeUint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedUint64StringExt = function(a2, b2, c) {
      a2.writeRepeatedUint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedUint64StringExt = function(a2, b2, c) {
      a2.writePackedUint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeUint64Ext = function(a2, b2, c) {
      a2.writeUint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedUint64Ext = function(a2, b2, c) {
      a2.writeRepeatedUint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedUint64Ext = function(a2, b2, c) {
      a2.writePackedUint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeUint64String = function(a2, b2, c) {
      a2.writeUint64String(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedUint64String = function(a2, b2, c) {
      a2.writeRepeatedUint64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedUint64String = function(a2, b2, c) {
      a2.writePackedUint64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeUint64 = function(a2, b2, c) {
      a2.writeUint64(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedUint64 = function(a2, b2, c) {
      a2.writeRepeatedUint64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedUint64 = function(a2, b2, c) {
      a2.writePackedUint64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeInt32Ext = function(a2, b2, c) {
      a2.writeInt32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedInt32Ext = function(a2, b2, c) {
      a2.writeRepeatedInt32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedInt32Ext = function(a2, b2, c) {
      a2.writePackedInt32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeInt32 = function(a2, b2, c) {
      a2.writeInt32(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedInt32 = function(a2, b2, c) {
      a2.writeRepeatedInt32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedInt32 = function(a2, b2, c) {
      a2.writePackedInt32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeFixed64StringExt = function(a2, b2, c) {
      a2.writeFixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedFixed64StringExt = function(a2, b2, c) {
      a2.writeRepeatedFixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedFixed64StringExt = function(a2, b2, c) {
      a2.writePackedFixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeFixed64Ext = function(a2, b2, c) {
      a2.writeFixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedFixed64Ext = function(a2, b2, c) {
      a2.writeRepeatedFixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedFixed64Ext = function(a2, b2, c) {
      a2.writePackedFixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeFixed64String = function(a2, b2, c) {
      a2.writeFixed64String(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedFixed64String = function(a2, b2, c) {
      a2.writeRepeatedFixed64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedFixed64String = function(a2, b2, c) {
      a2.writePackedFixed64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeFixed64 = function(a2, b2, c) {
      a2.writeFixed64(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedFixed64 = function(a2, b2, c) {
      a2.writeRepeatedFixed64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedFixed64 = function(a2, b2, c) {
      a2.writePackedFixed64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeFixed32Ext = function(a2, b2, c) {
      a2.writeFixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedFixed32Ext = function(a2, b2, c) {
      a2.writeRepeatedFixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedFixed32Ext = function(a2, b2, c) {
      a2.writePackedFixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeFixed32 = function(a2, b2, c) {
      a2.writeFixed32(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedFixed32 = function(a2, b2, c) {
      a2.writeRepeatedFixed32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedFixed32 = function(a2, b2, c) {
      a2.writePackedFixed32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeBoolExt = function(a2, b2, c) {
      a2.writeBool(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedBoolExt = function(a2, b2, c) {
      a2.writeRepeatedBool(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedBoolExt = function(a2, b2, c) {
      a2.writePackedBool(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeBool = function(a2, b2, c) {
      a2.writeBool(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedBool = function(a2, b2, c) {
      a2.writeRepeatedBool(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedBool = function(a2, b2, c) {
      a2.writePackedBool(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeStringExt = function(a2, b2, c) {
      a2.writeString(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedStringExt = function(a2, b2, c) {
      a2.writeRepeatedString(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeString = function(a2, b2, c) {
      a2.writeString(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedString = function(a2, b2, c) {
      a2.writeRepeatedString(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeGroupExt = function(a2, b2, c, d) {
      a2.writeGroup(c.fieldIndex, b2.getExtension(c), d);
    };
    jspb.internal.binary.writeRepeatedGroupExt = function(a2, b2, c, d) {
      a2.writeRepeatedGroup(c.fieldIndex, b2.getExtension(c), d);
    };
    jspb.internal.binary.writeGroup = function(a2, b2, c, d, e) {
      a2.writeGroup(c, b2.internal_getWrapperField(d, c), e);
    };
    jspb.internal.binary.writeRepeatedGroup = function(a2, b2, c, d, e) {
      a2.writeRepeatedGroup(c, b2.internal_getRepeatedWrapperField(d, c), e);
    };
    jspb.internal.binary.writeMessageExt = function(a2, b2, c, d) {
      a2.writeMessage(c.fieldIndex, b2.getExtension(c), d);
    };
    jspb.internal.binary.writeRepeatedMessageExt = function(a2, b2, c, d) {
      a2.writeRepeatedMessage(c.fieldIndex, b2.getExtension(c), d);
    };
    jspb.internal.binary.writeMessage = function(a2, b2, c, d, e) {
      a2.writeMessage(c, b2.internal_getWrapperField(d, c), e);
    };
    jspb.internal.binary.writeRepeatedMessage = function(a2, b2, c, d, e) {
      a2.writeRepeatedMessage(c, b2.internal_getRepeatedWrapperField(d, c), e);
    };
    jspb.internal.binary.writeBytesExt = function(a2, b2, c) {
      a2.writeBytes(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedBytesExt = function(a2, b2, c) {
      a2.writeRepeatedBytes(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeBytes = function(a2, b2, c) {
      a2.writeBytes(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedBytes = function(a2, b2, c) {
      a2.writeRepeatedBytes(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeUint32Ext = function(a2, b2, c) {
      a2.writeUint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedUint32Ext = function(a2, b2, c) {
      a2.writeRepeatedUint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedUint32Ext = function(a2, b2, c) {
      a2.writePackedUint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeUint32 = function(a2, b2, c) {
      a2.writeUint32(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedUint32 = function(a2, b2, c) {
      a2.writeRepeatedUint32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedUint32 = function(a2, b2, c) {
      a2.writePackedUint32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeEnumExt = function(a2, b2, c) {
      a2.writeEnum(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedEnumExt = function(a2, b2, c) {
      a2.writeRepeatedEnum(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedEnumExt = function(a2, b2, c) {
      a2.writePackedEnum(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeEnum = function(a2, b2, c) {
      a2.writeEnum(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedEnum = function(a2, b2, c) {
      a2.writeRepeatedEnum(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedEnum = function(a2, b2, c) {
      a2.writePackedEnum(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSfixed32Ext = function(a2, b2, c) {
      a2.writeSfixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSfixed32Ext = function(a2, b2, c) {
      a2.writeRepeatedSfixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSfixed32Ext = function(a2, b2, c) {
      a2.writePackedSfixed32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSfixed32 = function(a2, b2, c) {
      a2.writeSfixed32(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSfixed32 = function(a2, b2, c) {
      a2.writeRepeatedSfixed32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSfixed32 = function(a2, b2, c) {
      a2.writePackedSfixed32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSfixed64StringExt = function(a2, b2, c) {
      a2.writeSfixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSfixed64StringExt = function(a2, b2, c) {
      a2.writeRepeatedSfixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSfixed64StringExt = function(a2, b2, c) {
      a2.writePackedSfixed64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSfixed64Ext = function(a2, b2, c) {
      a2.writeSfixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSfixed64Ext = function(a2, b2, c) {
      a2.writeRepeatedSfixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSfixed64Ext = function(a2, b2, c) {
      a2.writePackedSfixed64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSfixed64String = function(a2, b2, c) {
      a2.writeSfixed64String(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSfixed64String = function(a2, b2, c) {
      a2.writeRepeatedSfixed64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSfixed64String = function(a2, b2, c) {
      a2.writePackedSfixed64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSfixed64 = function(a2, b2, c) {
      a2.writeSfixed64(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSfixed64 = function(a2, b2, c) {
      a2.writeRepeatedSfixed64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSfixed64 = function(a2, b2, c) {
      a2.writePackedSfixed64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSint32Ext = function(a2, b2, c) {
      a2.writeSint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSint32Ext = function(a2, b2, c) {
      a2.writeRepeatedSint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSint32Ext = function(a2, b2, c) {
      a2.writePackedSint32(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSint32 = function(a2, b2, c) {
      a2.writeSint32(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSint32 = function(a2, b2, c) {
      a2.writeRepeatedSint32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSint32 = function(a2, b2, c) {
      a2.writePackedSint32(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSint64StringExt = function(a2, b2, c) {
      a2.writeSint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSint64StringExt = function(a2, b2, c) {
      a2.writeRepeatedSint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSint64StringExt = function(a2, b2, c) {
      a2.writePackedSint64String(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSint64Ext = function(a2, b2, c) {
      a2.writeSint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeRepeatedSint64Ext = function(a2, b2, c) {
      a2.writeRepeatedSint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writePackedSint64Ext = function(a2, b2, c) {
      a2.writePackedSint64(c.fieldIndex, b2.getExtension(c));
    };
    jspb.internal.binary.writeSint64String = function(a2, b2, c) {
      a2.writeSint64String(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSint64String = function(a2, b2, c) {
      a2.writeRepeatedSint64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSint64String = function(a2, b2, c) {
      a2.writePackedSint64String(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writeSint64 = function(a2, b2, c) {
      a2.writeSint64(c, b2.internal_getField(c));
    };
    jspb.internal.binary.writeRepeatedSint64 = function(a2, b2, c) {
      a2.writeRepeatedSint64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.writePackedSint64 = function(a2, b2, c) {
      a2.writePackedSint64(c, b2.internal_getRepeatedField(c));
    };
    jspb.internal.binary.readDoubleExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.setExtension(c, a2.readDouble());
      return true;
    };
    jspb.internal.binary.readPackableDoubleIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableDoubleInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readDouble = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setField(c, a2.readDouble());
      return true;
    };
    jspb.internal.binary.readPackableDoubleInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableDoubleInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readDoubleIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setProto3FloatField(c, a2.readDouble());
      return true;
    };
    jspb.internal.binary.readDoubleOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setOneofField(c, d, a2.readDouble());
      return true;
    };
    jspb.internal.binary.readFloatExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.setExtension(c, a2.readFloat());
      return true;
    };
    jspb.internal.binary.readPackableFloatIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFloatInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readFloat = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setField(c, a2.readFloat());
      return true;
    };
    jspb.internal.binary.readPackableFloatInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFloatInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readFloatIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setProto3FloatField(c, a2.readFloat());
      return true;
    };
    jspb.internal.binary.readFloatOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setOneofField(c, d, a2.readFloat());
      return true;
    };
    jspb.internal.binary.readInt64StringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readInt64String());
      return true;
    };
    jspb.internal.binary.readPackableInt64StringIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt64StringInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readInt64Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readInt64());
      return true;
    };
    jspb.internal.binary.readPackableInt64IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt64Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readInt64String = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readInt64String());
      return true;
    };
    jspb.internal.binary.readPackableInt64StringInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt64StringInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readInt64StringIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3StringIntField(c, a2.readInt64String());
      return true;
    };
    jspb.internal.binary.readInt64StringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readInt64String());
      return true;
    };
    jspb.internal.binary.readInt64 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readInt64());
      return true;
    };
    jspb.internal.binary.readPackableInt64Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt64Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readInt64IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readInt64());
      return true;
    };
    jspb.internal.binary.readInt64Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readInt64());
      return true;
    };
    jspb.internal.binary.readUint64StringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readUint64String());
      return true;
    };
    jspb.internal.binary.readPackableUint64StringIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint64StringInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readUint64Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readUint64());
      return true;
    };
    jspb.internal.binary.readPackableUint64IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint64Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readUint64String = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readUint64String());
      return true;
    };
    jspb.internal.binary.readPackableUint64StringInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint64StringInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readUint64StringIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3StringIntField(c, a2.readUint64String());
      return true;
    };
    jspb.internal.binary.readUint64StringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readUint64String());
      return true;
    };
    jspb.internal.binary.readUint64 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readUint64());
      return true;
    };
    jspb.internal.binary.readPackableUint64Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint64Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readUint64IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readUint64());
      return true;
    };
    jspb.internal.binary.readUint64Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readUint64());
      return true;
    };
    jspb.internal.binary.readInt32Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readInt32());
      return true;
    };
    jspb.internal.binary.readPackableInt32IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt32Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readInt32 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readInt32());
      return true;
    };
    jspb.internal.binary.readPackableInt32Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableInt32Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readInt32IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readInt32());
      return true;
    };
    jspb.internal.binary.readInt32Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readInt32());
      return true;
    };
    jspb.internal.binary.readFixed64StringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.setExtension(c, a2.readFixed64String());
      return true;
    };
    jspb.internal.binary.readPackableFixed64StringIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed64StringInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readFixed64Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.setExtension(c, a2.readFixed64());
      return true;
    };
    jspb.internal.binary.readPackableFixed64IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed64Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readFixed64String = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setField(c, a2.readFixed64String());
      return true;
    };
    jspb.internal.binary.readPackableFixed64StringInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed64StringInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readFixed64StringIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setProto3StringIntField(c, a2.readFixed64String());
      return true;
    };
    jspb.internal.binary.readFixed64StringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setOneofField(c, d, a2.readFixed64String());
      return true;
    };
    jspb.internal.binary.readFixed64 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setField(c, a2.readFixed64());
      return true;
    };
    jspb.internal.binary.readPackableFixed64Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed64Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readFixed64IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setProto3IntField(c, a2.readFixed64());
      return true;
    };
    jspb.internal.binary.readFixed64Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setOneofField(c, d, a2.readFixed64());
      return true;
    };
    jspb.internal.binary.readFixed32Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.setExtension(c, a2.readFixed32());
      return true;
    };
    jspb.internal.binary.readPackableFixed32IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed32Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readFixed32 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setField(c, a2.readFixed32());
      return true;
    };
    jspb.internal.binary.readPackableFixed32Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableFixed32Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readFixed32IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setProto3IntField(c, a2.readFixed32());
      return true;
    };
    jspb.internal.binary.readFixed32Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setOneofField(c, d, a2.readFixed32());
      return true;
    };
    jspb.internal.binary.readBoolExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readBool());
      return true;
    };
    jspb.internal.binary.readPackableBoolIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableBoolInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readBool = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readBool());
      return true;
    };
    jspb.internal.binary.readPackableBoolInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableBoolInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readBoolIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3BooleanField(c, a2.readBool());
      return true;
    };
    jspb.internal.binary.readBoolOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readBool());
      return true;
    };
    jspb.internal.binary.readStringRequireUtf8Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.setExtension(c, a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readRepeatedStringRequireUtf8Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.getExtension(c).push(a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readStringRequireUtf8 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setField(c, a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readRepeatedStringRequireUtf8 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_addToRepeatedField(c, a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readStringRequireUtf8IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setProto3StringField(c, a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readStringRequireUtf8Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setOneofField(c, d, a2.readStringRequireUtf8());
      return true;
    };
    jspb.internal.binary.readStringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.setExtension(c, a2.readString());
      return true;
    };
    jspb.internal.binary.readRepeatedStringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.getExtension(c).push(a2.readString());
      return true;
    };
    jspb.internal.binary.readString = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setField(c, a2.readString());
      return true;
    };
    jspb.internal.binary.readRepeatedString = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_addToRepeatedField(c, a2.readString());
      return true;
    };
    jspb.internal.binary.readStringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setOneofField(c, d, a2.readString());
      return true;
    };
    jspb.internal.binary.readGroupExt = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.START_GROUP)
        return false;
      b2.setExtension(c, a2.readGroup(c.fieldIndex, new c.ctor(), d));
      return true;
    };
    jspb.internal.binary.readRepeatedGroupExt = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.START_GROUP)
        return false;
      var e = b2.getExtension(c);
      e.push(a2.readGroup(c.fieldIndex, new c.ctor(), d));
      b2.setExtension(c, e);
      return true;
    };
    jspb.internal.binary.readGroup = function(a2, b2, c, d, e) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.START_GROUP)
        return false;
      b2.internal_setWrapperField(c, a2.readGroup(c, new d(), e));
      return true;
    };
    jspb.internal.binary.readRepeatedGroup = function(a2, b2, c, d, e) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.START_GROUP)
        return false;
      b2.internal_addToRepeatedWrapperField(c, a2.readGroup(c, new d(), e), d);
      return true;
    };
    jspb.internal.binary.readGroupOneof = function(a2, b2, c, d, e, f) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.START_GROUP)
        return false;
      b2.internal_setOneofWrapperField(c, f, a2.readGroup(c, new d(), e));
      return true;
    };
    jspb.internal.binary.readMessageExt = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.setExtension(c, a2.readMessage(new c.ctor(), d));
      return true;
    };
    jspb.internal.binary.readRepeatedMessageExt = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      var e = b2.getExtension(c);
      e.push(a2.readMessage(new c.ctor(), d));
      b2.setExtension(c, e);
      return true;
    };
    jspb.internal.binary.readMessage = function(a2, b2, c, d, e) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setWrapperField(c, a2.readMessage(new d(), e));
      return true;
    };
    jspb.internal.binary.readRepeatedMessage = function(a2, b2, c, d, e) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_addToRepeatedWrapperField(c, a2.readMessage(new d(), e), d);
      return true;
    };
    jspb.internal.binary.readMessageOneof = function(a2, b2, c, d, e, f) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setOneofWrapperField(c, f, a2.readMessage(new d(), e));
      return true;
    };
    jspb.internal.binary.readBytesExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.setExtension(c, a2.readBytes());
      return true;
    };
    jspb.internal.binary.readRepeatedBytesExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.getExtension(c).push(a2.readBytes());
      return true;
    };
    jspb.internal.binary.readBytes = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setField(c, a2.readBytes());
      return true;
    };
    jspb.internal.binary.readRepeatedBytes = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_addToRepeatedField(c, a2.readBytes());
      return true;
    };
    jspb.internal.binary.readBytesIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setProto3BytesField(c, a2.readBytes());
      return true;
    };
    jspb.internal.binary.readBytesOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      b2.internal_setOneofField(c, d, a2.readBytes());
      return true;
    };
    jspb.internal.binary.readUint32Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readUint32());
      return true;
    };
    jspb.internal.binary.readPackableUint32IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint32Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readUint32 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readUint32());
      return true;
    };
    jspb.internal.binary.readPackableUint32Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableUint32Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readUint32IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readUint32());
      return true;
    };
    jspb.internal.binary.readUint32Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readUint32());
      return true;
    };
    jspb.internal.binary.readEnumExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readEnum());
      return true;
    };
    jspb.internal.binary.readPackableEnumIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableEnumInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readEnum = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readEnum());
      return true;
    };
    jspb.internal.binary.readPackableEnumInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableEnumInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readEnumIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3EnumField(c, a2.readEnum());
      return true;
    };
    jspb.internal.binary.readEnumOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readEnum());
      return true;
    };
    jspb.internal.binary.readSfixed32Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.setExtension(c, a2.readSfixed32());
      return true;
    };
    jspb.internal.binary.readPackableSfixed32IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed32Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSfixed32 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setField(c, a2.readSfixed32());
      return true;
    };
    jspb.internal.binary.readPackableSfixed32Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed32Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSfixed32IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setProto3IntField(c, a2.readSfixed32());
      return true;
    };
    jspb.internal.binary.readSfixed32Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED32)
        return false;
      b2.internal_setOneofField(c, d, a2.readSfixed32());
      return true;
    };
    jspb.internal.binary.readSfixed64StringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.setExtension(c, a2.readSfixed64String());
      return true;
    };
    jspb.internal.binary.readPackableSfixed64StringIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed64StringInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSfixed64Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.setExtension(c, a2.readSfixed64());
      return true;
    };
    jspb.internal.binary.readPackableSfixed64IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed64Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSfixed64String = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setField(c, a2.readSfixed64String());
      return true;
    };
    jspb.internal.binary.readPackableSfixed64StringInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed64StringInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSfixed64StringIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setProto3StringIntField(c, a2.readSfixed64String());
      return true;
    };
    jspb.internal.binary.readSfixed64StringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setOneofField(c, d, a2.readSfixed64String());
      return true;
    };
    jspb.internal.binary.readSfixed64 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setField(c, a2.readSfixed64());
      return true;
    };
    jspb.internal.binary.readPackableSfixed64Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64 && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSfixed64Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSfixed64IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setProto3IntField(c, a2.readSfixed64());
      return true;
    };
    jspb.internal.binary.readSfixed64Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.FIXED64)
        return false;
      b2.internal_setOneofField(c, d, a2.readSfixed64());
      return true;
    };
    jspb.internal.binary.readSint32Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readSint32());
      return true;
    };
    jspb.internal.binary.readPackableSint32IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint32Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSint32 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readSint32());
      return true;
    };
    jspb.internal.binary.readPackableSint32Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint32Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSint32IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readSint32());
      return true;
    };
    jspb.internal.binary.readSint32Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readSint32());
      return true;
    };
    jspb.internal.binary.readSint64StringExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readSint64String());
      return true;
    };
    jspb.internal.binary.readPackableSint64StringIntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint64StringInto(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSint64Ext = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.setExtension(c, a2.readSint64());
      return true;
    };
    jspb.internal.binary.readPackableSint64IntoExt = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint64Into(b2.getExtension(c));
      return true;
    };
    jspb.internal.binary.readSint64String = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readSint64String());
      return true;
    };
    jspb.internal.binary.readPackableSint64StringInto = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint64StringInto(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSint64StringIgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3StringIntField(c, a2.readSint64String());
      return true;
    };
    jspb.internal.binary.readSint64StringOneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readSint64String());
      return true;
    };
    jspb.internal.binary.readSint64 = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setField(c, a2.readSint64());
      return true;
    };
    jspb.internal.binary.readPackableSint64Into = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT && a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.DELIMITED)
        return false;
      a2.readPackableSint64Into(b2.internal_getRepeatedField(c));
      return true;
    };
    jspb.internal.binary.readSint64IgnoringDefault = function(a2, b2, c) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setProto3IntField(c, a2.readSint64());
      return true;
    };
    jspb.internal.binary.readSint64Oneof = function(a2, b2, c, d) {
      if (a2.getWireType() !== module$exports$jspb$BinaryConstants.WireType.VARINT)
        return false;
      b2.internal_setOneofField(c, d, a2.readSint64());
      return true;
    };
    jspb.internal.binary.writeInt64DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeInt64FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeInt64Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeInt64Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeInt64Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeInt64Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeInt64Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeInt64BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeInt64StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeInt64MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, e);
    };
    jspb.internal.binary.writeInt64BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeInt64Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeInt64EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeInt64Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeInt64Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeInt64Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeInt64Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeUint64DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeUint64FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeUint64Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeUint64Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeUint64Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeUint64Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeUint64Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeUint64BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeUint64StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeUint64MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, e);
    };
    jspb.internal.binary.writeUint64BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeUint64Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeUint64EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeUint64Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeUint64Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeUint64Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeUint64Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeInt32DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeInt32FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeInt32Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeInt32Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeInt32Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeInt32Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeInt32Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeInt32BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeInt32StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeInt32MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, e);
    };
    jspb.internal.binary.writeInt32BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeInt32Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeInt32EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeInt32Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeInt32Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeInt32Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeInt32Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeFixed64DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeFixed64FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeFixed64Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeFixed64Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeFixed64Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeFixed64Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeFixed64Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeFixed64BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeFixed64StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeFixed64MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, e);
    };
    jspb.internal.binary.writeFixed64BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeFixed64Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeFixed64EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeFixed64Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeFixed64Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeFixed64Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeFixed64Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeFixed32DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeFixed32FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeFixed32Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeFixed32Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeFixed32Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeFixed32Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeFixed32Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeFixed32BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeFixed32StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeFixed32MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, e);
    };
    jspb.internal.binary.writeFixed32BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeFixed32Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeFixed32EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeFixed32Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeFixed32Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeFixed32Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeFixed32Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeBoolDoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeBoolFloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeBoolInt64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeBoolUint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeBoolInt32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeBoolFixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeBoolFixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeBoolBoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeBoolStringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeBoolMessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, e);
    };
    jspb.internal.binary.writeBoolBytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeBoolUint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeBoolEnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeBoolSfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeBoolSfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeBoolSint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeBoolSint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeStringDoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeStringFloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeStringInt64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeStringUint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeStringInt32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeStringFixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeStringFixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeStringBoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeStringStringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeStringMessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, e);
    };
    jspb.internal.binary.writeStringBytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeStringUint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeStringEnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeStringSfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeStringSfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeStringSint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeStringSint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeUint32DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeUint32FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeUint32Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeUint32Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeUint32Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeUint32Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeUint32Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeUint32BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeUint32StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeUint32MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, e);
    };
    jspb.internal.binary.writeUint32BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeUint32Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeUint32EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeUint32Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeUint32Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeUint32Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeUint32Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeSfixed32DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeSfixed32FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeSfixed32Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeSfixed32Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeSfixed32Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeSfixed32Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeSfixed32Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeSfixed32BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeSfixed32StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeSfixed32MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, e);
    };
    jspb.internal.binary.writeSfixed32BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeSfixed32Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeSfixed32EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeSfixed32Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeSfixed32Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeSfixed32Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeSfixed32Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeSfixed64DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeSfixed64FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeSfixed64Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeSfixed64Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeSfixed64Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeSfixed64Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeSfixed64Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeSfixed64BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeSfixed64StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeSfixed64MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, e);
    };
    jspb.internal.binary.writeSfixed64BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeSfixed64Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeSfixed64EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeSfixed64Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeSfixed64Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeSfixed64Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeSfixed64Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeSint32DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeSint32FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeSint32Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeSint32Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeSint32Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeSint32Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeSint32Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeSint32BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeSint32StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeSint32MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, e);
    };
    jspb.internal.binary.writeSint32BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeSint32Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeSint32EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeSint32Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeSint32Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeSint32Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeSint32Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.writeSint64DoubleMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeDouble);
    };
    jspb.internal.binary.writeSint64FloatMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFloat);
    };
    jspb.internal.binary.writeSint64Int64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt64);
    };
    jspb.internal.binary.writeSint64Uint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint64);
    };
    jspb.internal.binary.writeSint64Int32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeInt32);
    };
    jspb.internal.binary.writeSint64Fixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed64);
    };
    jspb.internal.binary.writeSint64Fixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeFixed32);
    };
    jspb.internal.binary.writeSint64BoolMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBool);
    };
    jspb.internal.binary.writeSint64StringMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeString);
    };
    jspb.internal.binary.writeSint64MessageMap = function(a2, b2, c, d, e) {
      module$contents$jspb$internal$binary_writeMessageMap(b2, c, d, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, e);
    };
    jspb.internal.binary.writeSint64BytesMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeBytes);
    };
    jspb.internal.binary.writeSint64Uint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeUint32);
    };
    jspb.internal.binary.writeSint64EnumMap = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeEnum);
    };
    jspb.internal.binary.writeSint64Sfixed32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed32);
    };
    jspb.internal.binary.writeSint64Sfixed64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSfixed64);
    };
    jspb.internal.binary.writeSint64Sint32Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint32);
    };
    jspb.internal.binary.writeSint64Sint64Map = function(a2, b2, c) {
      module$contents$jspb$internal$binary_writeMap(b2, c, c, a2, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64, module$exports$jspb$binary$writer.BinaryWriter.prototype.writeSint64);
    };
    jspb.internal.binary.readInt64DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readInt64FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readInt64Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readInt64Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readInt64Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readInt64Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readInt64Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readInt64BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readInt64StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readInt64StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readInt64MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readInt64, 0, e);
    };
    jspb.internal.binary.readInt64BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readInt64Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readInt64EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readInt64Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readInt64Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readInt64Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readInt64Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt64, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readUint64DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readUint64FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readUint64Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readUint64Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readUint64Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readUint64Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readUint64Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readUint64BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readUint64StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readUint64StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readUint64MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readUint64, 0, e);
    };
    jspb.internal.binary.readUint64BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readUint64Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readUint64EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readUint64Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readUint64Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readUint64Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readUint64Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint64, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readInt32DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readInt32FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readInt32Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readInt32Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readInt32Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readInt32Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readInt32Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readInt32BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readInt32StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readInt32StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readInt32MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readInt32, 0, e);
    };
    jspb.internal.binary.readInt32BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readInt32Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readInt32EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readInt32Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readInt32Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readInt32Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readInt32Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readInt32, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readFixed64DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readFixed64FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readFixed64Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readFixed64Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readFixed64Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readFixed64Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readFixed64Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readFixed64BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readFixed64StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readFixed64StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readFixed64MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readFixed64, 0, e);
    };
    jspb.internal.binary.readFixed64BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readFixed64Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readFixed64EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readFixed64Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readFixed64Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readFixed64Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readFixed64Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed64, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readFixed32DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readFixed32FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readFixed32Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readFixed32Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readFixed32Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readFixed32Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readFixed32Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readFixed32BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readFixed32StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readFixed32StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readFixed32MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readFixed32, 0, e);
    };
    jspb.internal.binary.readFixed32BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readFixed32Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readFixed32EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readFixed32Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readFixed32Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readFixed32Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readFixed32Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readFixed32, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readBoolDoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readDouble, false, 0);
    };
    jspb.internal.binary.readBoolFloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readFloat, false, 0);
    };
    jspb.internal.binary.readBoolInt64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readInt64, false, 0);
    };
    jspb.internal.binary.readBoolUint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readUint64, false, 0);
    };
    jspb.internal.binary.readBoolInt32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readInt32, false, 0);
    };
    jspb.internal.binary.readBoolFixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readFixed64, false, 0);
    };
    jspb.internal.binary.readBoolFixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readFixed32, false, 0);
    };
    jspb.internal.binary.readBoolBoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readBool, false, false);
    };
    jspb.internal.binary.readBoolStringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readStringRequireUtf8, false, "");
    };
    jspb.internal.binary.readBoolStringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readString, false, "");
    };
    jspb.internal.binary.readBoolMessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readBool, false, e);
    };
    jspb.internal.binary.readBoolBytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readBytes, false, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readBoolUint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readUint32, false, 0);
    };
    jspb.internal.binary.readBoolEnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readEnum, false, 0);
    };
    jspb.internal.binary.readBoolSfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readSfixed32, false, 0);
    };
    jspb.internal.binary.readBoolSfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readSfixed64, false, 0);
    };
    jspb.internal.binary.readBoolSint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readSint32, false, 0);
    };
    jspb.internal.binary.readBoolSint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readBool, jspb.internal.binary.readSint64, false, 0);
    };
    jspb.internal.binary.readStringRequireUtf8DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readDouble, "", 0);
    };
    jspb.internal.binary.readStringDoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readDouble, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readFloat, "", 0);
    };
    jspb.internal.binary.readStringFloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readFloat, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readInt64, "", 0);
    };
    jspb.internal.binary.readStringInt64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readInt64, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readUint64, "", 0);
    };
    jspb.internal.binary.readStringUint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readUint64, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readInt32, "", 0);
    };
    jspb.internal.binary.readStringInt32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readInt32, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readFixed64, "", 0);
    };
    jspb.internal.binary.readStringFixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readFixed64, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readFixed32, "", 0);
    };
    jspb.internal.binary.readStringFixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readFixed32, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readBool, "", false);
    };
    jspb.internal.binary.readStringBoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readBool, "", false);
    };
    jspb.internal.binary.readStringRequireUtf8StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readStringRequireUtf8, "", "");
    };
    jspb.internal.binary.readStringStringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readString, "", "");
    };
    jspb.internal.binary.readStringRequireUtf8MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readStringRequireUtf8, "", e);
    };
    jspb.internal.binary.readStringMessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readString, "", e);
    };
    jspb.internal.binary.readStringRequireUtf8BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readBytes, "", module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readStringBytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readBytes, "", module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readStringRequireUtf8Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readUint32, "", 0);
    };
    jspb.internal.binary.readStringUint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readUint32, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readEnum, "", 0);
    };
    jspb.internal.binary.readStringEnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readEnum, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readSfixed32, "", 0);
    };
    jspb.internal.binary.readStringSfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readSfixed32, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readSfixed64, "", 0);
    };
    jspb.internal.binary.readStringSfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readSfixed64, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readSint32, "", 0);
    };
    jspb.internal.binary.readStringSint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readSint32, "", 0);
    };
    jspb.internal.binary.readStringRequireUtf8Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readStringRequireUtf8, jspb.internal.binary.readSint64, "", 0);
    };
    jspb.internal.binary.readStringSint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readString, jspb.internal.binary.readSint64, "", 0);
    };
    jspb.internal.binary.readUint32DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readUint32FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readUint32Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readUint32Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readUint32Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readUint32Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readUint32Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readUint32BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readUint32StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readUint32StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readUint32MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readUint32, 0, e);
    };
    jspb.internal.binary.readUint32BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readUint32Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readUint32EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readUint32Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readUint32Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readUint32Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readUint32Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readUint32, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readSfixed32DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readSfixed32FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readSfixed32Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readSfixed32Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readSfixed32Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readSfixed32Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readSfixed32Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readSfixed32BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readSfixed32StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readSfixed32StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readSfixed32MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readSfixed32, 0, e);
    };
    jspb.internal.binary.readSfixed32BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readSfixed32Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readSfixed32EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readSfixed32Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readSfixed32Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readSfixed32Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readSfixed32Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed32, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readSfixed64DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readSfixed64FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readSfixed64Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readSfixed64Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readSfixed64Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readSfixed64Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readSfixed64Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readSfixed64BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readSfixed64StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readSfixed64StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readSfixed64MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readSfixed64, 0, e);
    };
    jspb.internal.binary.readSfixed64BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readSfixed64Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readSfixed64EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readSfixed64Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readSfixed64Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readSfixed64Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readSfixed64Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSfixed64, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readSint32DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readSint32FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readSint32Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readSint32Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readSint32Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readSint32Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readSint32Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readSint32BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readSint32StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readSint32StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readSint32MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readSint32, 0, e);
    };
    jspb.internal.binary.readSint32BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readSint32Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readSint32EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readSint32Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readSint32Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readSint32Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readSint32Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint32, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.binary.readSint64DoubleMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readDouble, 0, 0);
    };
    jspb.internal.binary.readSint64FloatMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readFloat, 0, 0);
    };
    jspb.internal.binary.readSint64Int64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readInt64, 0, 0);
    };
    jspb.internal.binary.readSint64Uint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readUint64, 0, 0);
    };
    jspb.internal.binary.readSint64Int32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readInt32, 0, 0);
    };
    jspb.internal.binary.readSint64Fixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readFixed64, 0, 0);
    };
    jspb.internal.binary.readSint64Fixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readFixed32, 0, 0);
    };
    jspb.internal.binary.readSint64BoolMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readBool, 0, false);
    };
    jspb.internal.binary.readSint64StringRequireUtf8Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readStringRequireUtf8, 0, "");
    };
    jspb.internal.binary.readSint64StringMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readString, 0, "");
    };
    jspb.internal.binary.readSint64MessageMap = function(a2, b2, c, d, e) {
      return module$contents$jspb$internal$binary_readMessageMapEntry(a2, b2, c, d, jspb.internal.binary.readSint64, 0, e);
    };
    jspb.internal.binary.readSint64BytesMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readBytes, 0, module$exports$jspb$bytestring.ByteString.empty());
    };
    jspb.internal.binary.readSint64Uint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readUint32, 0, 0);
    };
    jspb.internal.binary.readSint64EnumMap = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readEnum, 0, 0);
    };
    jspb.internal.binary.readSint64Sfixed32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readSfixed32, 0, 0);
    };
    jspb.internal.binary.readSint64Sfixed64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readSfixed64, 0, 0);
    };
    jspb.internal.binary.readSint64Sint32Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readSint32, 0, 0);
    };
    jspb.internal.binary.readSint64Sint64Map = function(a2, b2, c) {
      return module$contents$jspb$internal$binary_readMapEntry(a2, b2, c, jspb.internal.binary.readSint64, jspb.internal.binary.readSint64, 0, 0);
    };
    jspb.internal.public_for_gencode = {};
    var module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;
    function module$contents$jspb$internal$public_for_gencode_toObjectList(a2, b2, c) {
      for (var d = [], e = 0; e < a2.length; e++)
        d.push(b2(c, a2[e]));
      return d;
    }
    function module$contents$jspb$internal$public_for_gencode_assertConsistentTypes(a2) {
      if (goog.DEBUG && a2 && 1 < a2.length) {
        var b2 = goog.typeOf(a2[0]);
        module$contents$goog$array_forEach(a2, function(c) {
          goog.typeOf(c) != b2 && goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(c) + " expected " + b2);
        });
      }
    }
    function module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(a2) {
      return a2 === null ? void 0 : a2;
    }
    var module$contents$jspb$internal$public_for_gencode_GeneratedMessageImpl = function() {
      module$exports$jspb.Message.apply(this, arguments);
    };
    $jscomp.inherits(module$contents$jspb$internal$public_for_gencode_GeneratedMessageImpl, module$exports$jspb.Message);
    goog.asserts.ENABLE_ASSERTS && (module$contents$jspb$internal$public_for_gencode_GeneratedMessageImpl.prototype[module$exports$jspb$internal.GENERATED_SUBCLASS_MARKER] = true);
    var module$contents$jspb$internal$public_for_gencode_GeneratedMessage = goog.asserts.ENABLE_ASSERTS ? module$contents$jspb$internal$public_for_gencode_GeneratedMessageImpl : module$exports$jspb.Message;
    jspb.internal.public_for_gencode.GENERATE_FROM_OBJECT = module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT;
    jspb.internal.public_for_gencode.GENERATE_TO_OBJECT = true;
    jspb.internal.public_for_gencode.GeneratedMessage = module$contents$jspb$internal$public_for_gencode_GeneratedMessage;
    jspb.internal.public_for_gencode.bytesAsB64 = module$contents$jspb$internal_bytesAsB64;
    jspb.internal.public_for_gencode.bytesAsU8 = module$contents$jspb$internal_bytesAsU8;
    jspb.internal.public_for_gencode.bytesListAsB64 = function(a2) {
      module$contents$jspb$internal$public_for_gencode_assertConsistentTypes(a2);
      return a2.length && typeof a2[0] !== "string" ? module$contents$goog$array_map(a2, module$contents$jspb$internal_bytesAsB64) : a2;
    };
    jspb.internal.public_for_gencode.bytesListAsU8 = function(a2) {
      module$contents$jspb$internal$public_for_gencode_assertConsistentTypes(a2);
      return !a2.length || a2[0] instanceof Uint8Array ? a2 : module$contents$goog$array_map(a2, module$contents$jspb$internal_bytesAsU8);
    };
    jspb.internal.public_for_gencode.createMessageExtension = function(a2, b2, c, d, e) {
      return new module$contents$jspb$extension_field_info_ExtensionFieldInfo(a2, b2, c, d, e === void 0 ? 0 : e);
    };
    jspb.internal.public_for_gencode.createPrimitiveExtension = function(a2, b2, c) {
      return new module$contents$jspb$extension_field_info_ExtensionFieldInfo(a2, b2, null, null, c === void 0 ? 0 : c);
    };
    jspb.internal.public_for_gencode.mapFromObject = function(a2, b2, c) {
      for (var d = 0; d < b2.length; d++) {
        var e = b2[d][0], f = c(b2[d][1]);
        a2.set(e, f);
      }
      return a2;
    };
    jspb.internal.public_for_gencode.mapToObject = function(a2, b2, c) {
      var d = [];
      a2.forEach(function(e, f) {
        d.push([f, c ? c(b2, e) : e]);
      });
      return d;
    };
    jspb.internal.public_for_gencode.toObjectExtension = function(a2, b2, c, d) {
      for (var e in c)
        if (module$contents$jspb$internal_hasOwnPropertyIfNotTrusted(c, e)) {
          var f = c[e], g = a2.getExtension(f);
          if (g != null) {
            var k = void 0;
            for (k in f.fieldName)
              if (f.fieldName.hasOwnProperty(k))
                break;
            var h = f.toObjectFn;
            b2[k] = h ? f.isRepeated ? module$contents$jspb$internal$public_for_gencode_toObjectList(g, h, d) : h(d, g) : g;
          }
        }
    };
    jspb.internal.public_for_gencode.toObjectList = module$contents$jspb$internal$public_for_gencode_toObjectList;
    jspb.internal.public_for_gencode.toObjectPrimitive = module$contents$jspb$internal$public_for_gencode_toObjectPrimitive;
    jspb.internal.public_for_gencode.toObjectAnyValue = function(a2) {
      a2 = a2.internal_getField(2);
      if (a2 == null)
        return "";
      if (typeof a2 === "string")
        return a2;
      if (module$contents$jspb$internal_bytes_isU8(a2))
        return goog.crypt.base64.encodeByteArray(a2);
      if (Array.isArray(a2))
        return module$contents$jspb$internal_copy_cloneJspbObjectInternal(a2, module$contents$jspb$internal_copy_convertToJspbFormat);
      throw Error("invalid value in Any.value field: " + a2);
    };
    jspb.internal.public_for_gencode.fromObjectAnyValue = function(a2, b2) {
      if (b2 != null)
        if (typeof b2 === "string")
          b2.length && a2.internal_setField(2, b2);
        else if (Array.isArray(b2))
          a2.internal_setField(2, module$contents$jspb$internal_copy_cloneJspbObjectInternal(b2, module$contents$jspb$internal_copy_convertToJspbFormat));
        else
          throw Error("invalid value in Any.value field: " + b2);
    };
    jspb.internal.public_for_gencode.packAnyValueBinary = function(a2, b2) {
      goog.asserts.assertInstanceof(a2, module$exports$jspb.Message);
      a2.internal_setProto3BytesField(2, module$contents$jspb$utils_byteSourceToUint8Array(b2));
      return a2;
    };
    jspb.Message = module$exports$jspb.Message;
    var proto = { acceleration: {} };
    proto.acceleration.ModelIdentifier = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.ModelIdentifier, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.ModelIdentifier.prototype.getModelFingerprint = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.ModelIdentifier.prototype.setModelFingerprint = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.ModelIdentifier.prototype.clearModelFingerprint = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.ModelIdentifier.prototype.hasModelFingerprint = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.ModelIdentifier.prototype.getModelId = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.ModelIdentifier.prototype.setModelId = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.ModelIdentifier.prototype.clearModelId = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.ModelIdentifier.prototype.hasModelId = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.ModelIdentifier.internalDoNotUse$proto$acceleration$ModelIdentifier$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readString };
    };
    proto.acceleration.ModelIdentifier.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.ModelIdentifier.serializeBinaryToWriter);
    };
    proto.acceleration.ModelIdentifier.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.ModelIdentifier.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.ModelIdentifier, proto.acceleration.ModelIdentifier.internalDoNotUse$proto$acceleration$ModelIdentifier$getBinaryFieldsObject);
    };
    proto.acceleration.ModelIdentifier.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.ModelIdentifier.internalDoNotUse$proto$acceleration$ModelIdentifier$getBinaryFieldsObject);
    };
    proto.acceleration.ModelIdentifier.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.ModelIdentifier, a2);
    };
    proto.acceleration.ModelIdentifier.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.ModelIdentifier.fromObject = function(a2) {
      var b2 = new proto.acceleration.ModelIdentifier();
      a2.modelFingerprint != null && b2.internal_setField(1, a2.modelFingerprint);
      a2.modelId != null && b2.internal_setField(2, a2.modelId);
      return b2;
    });
    proto.acceleration.ModelIdentifier.prototype.toObject = function(a2) {
      return proto.acceleration.ModelIdentifier.internal_toObject(a2, this);
    };
    proto.acceleration.ModelIdentifier.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { modelFingerprint: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), modelId: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.InferenceToUseFor = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.InferenceToUseFor, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.InferenceToUseFor.prototype.getModelNamespace = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.InferenceToUseFor.prototype.setModelNamespace = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.InferenceToUseFor.prototype.clearModelNamespace = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.InferenceToUseFor.prototype.hasModelNamespace = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.InferenceToUseFor.prototype.getModel = function() {
      return this.internal_getWrapperField(proto.acceleration.ModelIdentifier, 2);
    };
    proto.acceleration.InferenceToUseFor.prototype.setModel = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.acceleration.InferenceToUseFor.prototype.clearModel = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.acceleration.InferenceToUseFor.prototype.hasModel = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.InferenceToUseFor.internalDoNotUse$proto$acceleration$InferenceToUseFor$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: [jspb.internal.binary.readMessage, proto.acceleration.ModelIdentifier, proto.acceleration.ModelIdentifier.internalDoNotUse$proto$acceleration$ModelIdentifier$getBinaryFieldsObject] };
    };
    proto.acceleration.InferenceToUseFor.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.InferenceToUseFor.serializeBinaryToWriter);
    };
    proto.acceleration.InferenceToUseFor.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.acceleration.ModelIdentifier, proto.acceleration.ModelIdentifier.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.InferenceToUseFor.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.InferenceToUseFor, proto.acceleration.InferenceToUseFor.internalDoNotUse$proto$acceleration$InferenceToUseFor$getBinaryFieldsObject);
    };
    proto.acceleration.InferenceToUseFor.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.InferenceToUseFor.internalDoNotUse$proto$acceleration$InferenceToUseFor$getBinaryFieldsObject);
    };
    proto.acceleration.InferenceToUseFor.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.InferenceToUseFor, a2);
    };
    proto.acceleration.InferenceToUseFor.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.InferenceToUseFor.fromObject = function(a2) {
      var b2 = new proto.acceleration.InferenceToUseFor();
      a2.modelNamespace != null && b2.internal_setField(1, a2.modelNamespace);
      a2.model && b2.internal_setWrapperField(2, proto.acceleration.ModelIdentifier.fromObject(a2.model));
      return b2;
    });
    proto.acceleration.InferenceToUseFor.prototype.toObject = function(a2) {
      return proto.acceleration.InferenceToUseFor.internal_toObject(a2, this);
    };
    proto.acceleration.InferenceToUseFor.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { modelNamespace: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), model: proto.acceleration.ModelIdentifier.internal_toObject(a2, b2.getModel()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.BenchmarkStoragePaths = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.BenchmarkStoragePaths, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.BenchmarkStoragePaths.prototype.getStorageFilePath = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.setStorageFilePath = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.clearStorageFilePath = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.hasStorageFilePath = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.getDataDirectoryPath = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.setDataDirectoryPath = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.clearDataDirectoryPath = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.hasDataDirectoryPath = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.BenchmarkStoragePaths.internalDoNotUse$proto$acceleration$BenchmarkStoragePaths$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readString };
    };
    proto.acceleration.BenchmarkStoragePaths.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.BenchmarkStoragePaths.serializeBinaryToWriter);
    };
    proto.acceleration.BenchmarkStoragePaths.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.BenchmarkStoragePaths.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.BenchmarkStoragePaths, proto.acceleration.BenchmarkStoragePaths.internalDoNotUse$proto$acceleration$BenchmarkStoragePaths$getBinaryFieldsObject);
    };
    proto.acceleration.BenchmarkStoragePaths.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.BenchmarkStoragePaths.internalDoNotUse$proto$acceleration$BenchmarkStoragePaths$getBinaryFieldsObject);
    };
    proto.acceleration.BenchmarkStoragePaths.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.BenchmarkStoragePaths, a2);
    };
    proto.acceleration.BenchmarkStoragePaths.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.BenchmarkStoragePaths.fromObject = function(a2) {
      var b2 = new proto.acceleration.BenchmarkStoragePaths();
      a2.storageFilePath != null && b2.internal_setField(1, a2.storageFilePath);
      a2.dataDirectoryPath != null && b2.internal_setField(2, a2.dataDirectoryPath);
      return b2;
    });
    proto.acceleration.BenchmarkStoragePaths.prototype.toObject = function(a2) {
      return proto.acceleration.BenchmarkStoragePaths.internal_toObject(a2, this);
    };
    proto.acceleration.BenchmarkStoragePaths.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { storageFilePath: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), dataDirectoryPath: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.ModelFile = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.ModelFile, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.ModelFile.prototype.getFilename = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.ModelFile.prototype.setFilename = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.ModelFile.prototype.clearFilename = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.ModelFile.prototype.hasFilename = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.ModelFile.prototype.getFd = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.ModelFile.prototype.setFd = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.ModelFile.prototype.clearFd = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.ModelFile.prototype.hasFd = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.ModelFile.prototype.getOffset = function() {
      return this.internal_getField(3);
    };
    proto.acceleration.ModelFile.prototype.setOffset = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.ModelFile.prototype.clearOffset = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.ModelFile.prototype.hasOffset = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.ModelFile.prototype.getLength = function() {
      return this.internal_getField(4);
    };
    proto.acceleration.ModelFile.prototype.setLength = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.acceleration.ModelFile.prototype.clearLength = function() {
      return this.internal_clearField(4);
    };
    proto.acceleration.ModelFile.prototype.hasLength = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.ModelFile.internalDoNotUse$proto$acceleration$ModelFile$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readInt64, 3: jspb.internal.binary.readInt64, 4: jspb.internal.binary.readInt64 };
    };
    proto.acceleration.ModelFile.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.ModelFile.serializeBinaryToWriter);
    };
    proto.acceleration.ModelFile.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.writeInt64(b2, a2, 3);
      jspb.internal.binary.writeInt64(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.ModelFile.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.ModelFile, proto.acceleration.ModelFile.internalDoNotUse$proto$acceleration$ModelFile$getBinaryFieldsObject);
    };
    proto.acceleration.ModelFile.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.ModelFile.internalDoNotUse$proto$acceleration$ModelFile$getBinaryFieldsObject);
    };
    proto.acceleration.ModelFile.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.ModelFile, a2);
    };
    proto.acceleration.ModelFile.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.ModelFile.fromObject = function(a2) {
      var b2 = new proto.acceleration.ModelFile();
      a2.filename != null && b2.internal_setField(1, a2.filename);
      a2.fd != null && b2.internal_setField(2, a2.fd);
      a2.offset != null && b2.internal_setField(3, a2.offset);
      a2.length != null && b2.internal_setField(4, a2.length);
      return b2;
    });
    proto.acceleration.ModelFile.prototype.toObject = function(a2) {
      return proto.acceleration.ModelFile.internal_toObject(a2, this);
    };
    proto.acceleration.ModelFile.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { filename: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), fd: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), offset: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), length: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.CPUSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.CPUSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.CPUSettings.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(1, -1);
    };
    proto.acceleration.CPUSettings.prototype.setNumThreads = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.CPUSettings.prototype.clearNumThreads = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.CPUSettings.prototype.hasNumThreads = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.CPUSettings.internalDoNotUse$proto$acceleration$CPUSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.CPUSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.CPUSettings.serializeBinaryToWriter);
    };
    proto.acceleration.CPUSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.CPUSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.CPUSettings, proto.acceleration.CPUSettings.internalDoNotUse$proto$acceleration$CPUSettings$getBinaryFieldsObject);
    };
    proto.acceleration.CPUSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.CPUSettings.internalDoNotUse$proto$acceleration$CPUSettings$getBinaryFieldsObject);
    };
    proto.acceleration.CPUSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.CPUSettings, a2);
    };
    proto.acceleration.CPUSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.CPUSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.CPUSettings();
      a2.numThreads != null && b2.internal_setField(1, a2.numThreads);
      return b2;
    });
    proto.acceleration.CPUSettings.prototype.toObject = function(a2) {
      return proto.acceleration.CPUSettings.internal_toObject(a2, this);
    };
    proto.acceleration.CPUSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { numThreads: b2.internal_getIntegerFieldWithDefault(1, -1) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.CoralDelegateSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.CoralDelegateSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.CoralDelegateSettings.prototype.getDevice = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.CoralDelegateSettings.prototype.setDevice = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.clearDevice = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.CoralDelegateSettings.prototype.hasDevice = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.CoralDelegateSettings.prototype.getPerformance = function() {
      return this.internal_getFieldWithDefault(2, 1);
    };
    proto.acceleration.CoralDelegateSettings.prototype.setPerformance = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.clearPerformance = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.hasPerformance = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.getUsbAlwaysDfu = function() {
      return this.internal_getBooleanField(3);
    };
    proto.acceleration.CoralDelegateSettings.prototype.setUsbAlwaysDfu = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.clearUsbAlwaysDfu = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.CoralDelegateSettings.prototype.hasUsbAlwaysDfu = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.CoralDelegateSettings.prototype.getUsbMaxBulkInQueueLength = function() {
      return this.internal_getField(4);
    };
    proto.acceleration.CoralDelegateSettings.prototype.setUsbMaxBulkInQueueLength = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.acceleration.CoralDelegateSettings.prototype.clearUsbMaxBulkInQueueLength = function() {
      return this.internal_clearField(4);
    };
    proto.acceleration.CoralDelegateSettings.prototype.hasUsbMaxBulkInQueueLength = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.CoralDelegateSettings.internalDoNotUse$proto$acceleration$CoralDelegateSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readEnum, 3: jspb.internal.binary.readBool, 4: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.CoralDelegateSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.CoralDelegateSettings.serializeBinaryToWriter);
    };
    proto.acceleration.CoralDelegateSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeEnum(b2, a2, 2);
      jspb.internal.binary.writeBool(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.CoralDelegateSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.CoralDelegateSettings, proto.acceleration.CoralDelegateSettings.internalDoNotUse$proto$acceleration$CoralDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.CoralDelegateSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.CoralDelegateSettings.internalDoNotUse$proto$acceleration$CoralDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.CoralDelegateSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.CoralDelegateSettings, a2);
    };
    proto.acceleration.CoralDelegateSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.CoralDelegateSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.CoralDelegateSettings();
      a2.device != null && b2.internal_setField(1, a2.device);
      a2.performance != null && b2.internal_setField(2, a2.performance);
      a2.usbAlwaysDfu != null && b2.internal_setField(3, a2.usbAlwaysDfu);
      a2.usbMaxBulkInQueueLength != null && b2.internal_setField(4, a2.usbMaxBulkInQueueLength);
      return b2;
    });
    proto.acceleration.CoralDelegateSettings.prototype.toObject = function(a2) {
      return proto.acceleration.CoralDelegateSettings.internal_toObject(a2, this);
    };
    proto.acceleration.CoralDelegateSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { device: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), performance: b2.internal_getFieldWithDefault(2, 1), usbAlwaysDfu: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(3)), usbMaxBulkInQueueLength: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.CoralDelegateSettings.Performance = { UNDEFINED: 0, MAXIMUM: 1, HIGH: 2, MEDIUM: 3, LOW: 4 };
    proto.acceleration.EdgeTpuDelegateDeviceSpec = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.acceleration.EdgeTpuDelegateDeviceSpec.repeatedFields_);
    };
    $jscomp.inherits(proto.acceleration.EdgeTpuDelegateDeviceSpec, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.getPlatformType = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.setPlatformType = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.clearPlatformType = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.hasPlatformType = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.getNumChips = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.setNumChips = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.clearNumChips = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.hasNumChips = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.getDevicePathsList = function() {
      return this.internal_getRepeatedField(3);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.setDevicePathsList = function(a2) {
      return this.internal_setRepeatedField(3, a2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.addDevicePaths = function(a2, b2) {
      return this.internal_addToRepeatedField(3, a2, b2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.clearDevicePathsList = function() {
      return this.internal_clearRepeatedField(3);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.getChipFamily = function() {
      return this.internal_getField(4);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.setChipFamily = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.clearChipFamily = function() {
      return this.internal_clearField(4);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.hasChipFamily = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.internalDoNotUse$proto$acceleration$EdgeTpuDelegateDeviceSpec$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: jspb.internal.binary.readInt32, 3: jspb.internal.binary.readRepeatedString, 4: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.EdgeTpuDelegateDeviceSpec.serializeBinaryToWriter);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeRepeatedString(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.EdgeTpuDelegateDeviceSpec, proto.acceleration.EdgeTpuDelegateDeviceSpec.internalDoNotUse$proto$acceleration$EdgeTpuDelegateDeviceSpec$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.EdgeTpuDelegateDeviceSpec.internalDoNotUse$proto$acceleration$EdgeTpuDelegateDeviceSpec$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.EdgeTpuDelegateDeviceSpec, a2);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.repeatedFields_ = [3];
    proto.acceleration.EdgeTpuDelegateDeviceSpec.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.EdgeTpuDelegateDeviceSpec.fromObject = function(a2) {
      var b2 = new proto.acceleration.EdgeTpuDelegateDeviceSpec();
      a2.platformType != null && b2.internal_setField(1, a2.platformType);
      a2.numChips != null && b2.internal_setField(2, a2.numChips);
      a2.devicePathsList != null && b2.internal_setRepeatedField(3, a2.devicePathsList);
      a2.chipFamily != null && b2.internal_setField(4, a2.chipFamily);
      return b2;
    });
    proto.acceleration.EdgeTpuDelegateDeviceSpec.prototype.toObject = function(a2) {
      return proto.acceleration.EdgeTpuDelegateDeviceSpec.internal_toObject(a2, this);
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { platformType: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), numChips: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), devicePathsList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(3)), chipFamily: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.EdgeTpuDelegateDeviceSpec.PlatformType = { MMIO: 0, REFERENCE: 1, SIMULATOR: 2, REMOTE_SIMULATOR: 3 };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.EdgeTpuDelegateInactivePowerConfig, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.getInactivePowerState = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.setInactivePowerState = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.clearInactivePowerState = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.hasInactivePowerState = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.getInactiveTimeoutUs = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.setInactiveTimeoutUs = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.clearInactiveTimeoutUs = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.hasInactiveTimeoutUs = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internalDoNotUse$proto$acceleration$EdgeTpuDelegateInactivePowerConfig$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: jspb.internal.binary.readInt64 };
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.EdgeTpuDelegateInactivePowerConfig.serializeBinaryToWriter);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.EdgeTpuDelegateInactivePowerConfig, proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internalDoNotUse$proto$acceleration$EdgeTpuDelegateInactivePowerConfig$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internalDoNotUse$proto$acceleration$EdgeTpuDelegateInactivePowerConfig$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.EdgeTpuDelegateInactivePowerConfig, a2);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.EdgeTpuDelegateInactivePowerConfig.fromObject = function(a2) {
      var b2 = new proto.acceleration.EdgeTpuDelegateInactivePowerConfig();
      a2.inactivePowerState != null && b2.internal_setField(1, a2.inactivePowerState);
      a2.inactiveTimeoutUs != null && b2.internal_setField(2, a2.inactiveTimeoutUs);
      return b2;
    });
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.prototype.toObject = function(a2) {
      return proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internal_toObject(a2, this);
    };
    proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { inactivePowerState: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), inactiveTimeoutUs: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.EdgeTpuDelegateSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.acceleration.EdgeTpuDelegateSettings.repeatedFields_);
    };
    $jscomp.inherits(proto.acceleration.EdgeTpuDelegateSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getInferencePowerState = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setInferencePowerState = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearInferencePowerState = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.hasInferencePowerState = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getInactivePowerConfigsList = function() {
      return this.internal_getRepeatedWrapperField(proto.acceleration.EdgeTpuDelegateInactivePowerConfig, 2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setInactivePowerConfigsList = function(a2) {
      return this.internal_setRepeatedWrapperField(2, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.addInactivePowerConfigs = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(2, a2, proto.acceleration.EdgeTpuDelegateInactivePowerConfig, b2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.addAndReturnInactivePowerConfigs = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(2, a2, proto.acceleration.EdgeTpuDelegateInactivePowerConfig, b2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearInactivePowerConfigsList = function() {
      return this.internal_clearRepeatedWrapperField(2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getInferencePriority = function() {
      return this.internal_getIntegerFieldWithDefault(3, -1);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setInferencePriority = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearInferencePriority = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.hasInferencePriority = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getEdgetpuDeviceSpec = function() {
      return this.internal_getWrapperField(proto.acceleration.EdgeTpuDelegateDeviceSpec, 4);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setEdgetpuDeviceSpec = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearEdgetpuDeviceSpec = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.hasEdgetpuDeviceSpec = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getModelToken = function() {
      return this.internal_getField(5);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearModelToken = function() {
      return this.internal_clearField(5);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.hasModelToken = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.getFloatTruncationType = function() {
      return this.internal_getField(6);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.setFloatTruncationType = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.clearFloatTruncationType = function() {
      return this.internal_clearField(6);
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.hasFloatTruncationType = function() {
      return this.internal_hasField(6);
    };
    proto.acceleration.EdgeTpuDelegateSettings.internalDoNotUse$proto$acceleration$EdgeTpuDelegateSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: [jspb.internal.binary.readRepeatedMessage, proto.acceleration.EdgeTpuDelegateInactivePowerConfig, proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internalDoNotUse$proto$acceleration$EdgeTpuDelegateInactivePowerConfig$getBinaryFieldsObject], 3: jspb.internal.binary.readInt32, 4: [
        jspb.internal.binary.readMessage,
        proto.acceleration.EdgeTpuDelegateDeviceSpec,
        proto.acceleration.EdgeTpuDelegateDeviceSpec.internalDoNotUse$proto$acceleration$EdgeTpuDelegateDeviceSpec$getBinaryFieldsObject
      ], 5: jspb.internal.binary.readString, 6: jspb.internal.binary.readEnum };
    };
    proto.acceleration.EdgeTpuDelegateSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.EdgeTpuDelegateSettings.serializeBinaryToWriter);
    };
    proto.acceleration.EdgeTpuDelegateSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 2, proto.acceleration.EdgeTpuDelegateInactivePowerConfig, proto.acceleration.EdgeTpuDelegateInactivePowerConfig.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.acceleration.EdgeTpuDelegateDeviceSpec, proto.acceleration.EdgeTpuDelegateDeviceSpec.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 5);
      jspb.internal.binary.writeEnum(b2, a2, 6);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.EdgeTpuDelegateSettings, proto.acceleration.EdgeTpuDelegateSettings.internalDoNotUse$proto$acceleration$EdgeTpuDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.EdgeTpuDelegateSettings.internalDoNotUse$proto$acceleration$EdgeTpuDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.EdgeTpuDelegateSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.EdgeTpuDelegateSettings, a2);
    };
    proto.acceleration.EdgeTpuDelegateSettings.repeatedFields_ = [2];
    proto.acceleration.EdgeTpuDelegateSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.EdgeTpuDelegateSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.EdgeTpuDelegateSettings();
      a2.inferencePowerState != null && b2.internal_setField(1, a2.inferencePowerState);
      a2.inactivePowerConfigsList && b2.internal_setRepeatedWrapperField(2, a2.inactivePowerConfigsList.map(proto.acceleration.EdgeTpuDelegateInactivePowerConfig.fromObject));
      a2.inferencePriority != null && b2.internal_setField(3, a2.inferencePriority);
      a2.edgetpuDeviceSpec && b2.internal_setWrapperField(4, proto.acceleration.EdgeTpuDelegateDeviceSpec.fromObject(a2.edgetpuDeviceSpec));
      a2.modelToken != null && b2.internal_setField(5, a2.modelToken);
      a2.floatTruncationType != null && b2.internal_setField(6, a2.floatTruncationType);
      return b2;
    });
    proto.acceleration.EdgeTpuDelegateSettings.prototype.toObject = function(a2) {
      return proto.acceleration.EdgeTpuDelegateSettings.internal_toObject(a2, this);
    };
    proto.acceleration.EdgeTpuDelegateSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { inferencePowerState: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), inactivePowerConfigsList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getInactivePowerConfigsList(), proto.acceleration.EdgeTpuDelegateInactivePowerConfig.internal_toObject, a2), inferencePriority: b2.internal_getIntegerFieldWithDefault(3, -1), edgetpuDeviceSpec: proto.acceleration.EdgeTpuDelegateDeviceSpec.internal_toObject(a2, b2.getEdgetpuDeviceSpec()), modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(5)), floatTruncationType: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(6)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.EdgeTpuDelegateSettings.FloatTruncationType = { UNSPECIFIED: 0, NO_TRUNCATION: 1, BFLOAT16: 2, HALF: 3 };
    proto.acceleration.FallbackSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.FallbackSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.FallbackSettings.prototype.getAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_getBooleanField(5);
    };
    proto.acceleration.FallbackSettings.prototype.setAllowAutomaticFallbackOnCompilationError = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.acceleration.FallbackSettings.prototype.clearAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_clearField(5);
    };
    proto.acceleration.FallbackSettings.prototype.hasAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.FallbackSettings.prototype.getAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_getBooleanField(6);
    };
    proto.acceleration.FallbackSettings.prototype.setAllowAutomaticFallbackOnExecutionError = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.acceleration.FallbackSettings.prototype.clearAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_clearField(6);
    };
    proto.acceleration.FallbackSettings.prototype.hasAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_hasField(6);
    };
    proto.acceleration.FallbackSettings.internalDoNotUse$proto$acceleration$FallbackSettings$getBinaryFieldsObject = function() {
      return { 5: jspb.internal.binary.readBool, 6: jspb.internal.binary.readBool };
    };
    proto.acceleration.FallbackSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.FallbackSettings.serializeBinaryToWriter);
    };
    proto.acceleration.FallbackSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBool(b2, a2, 5);
      jspb.internal.binary.writeBool(b2, a2, 6);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.FallbackSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.FallbackSettings, proto.acceleration.FallbackSettings.internalDoNotUse$proto$acceleration$FallbackSettings$getBinaryFieldsObject);
    };
    proto.acceleration.FallbackSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.FallbackSettings.internalDoNotUse$proto$acceleration$FallbackSettings$getBinaryFieldsObject);
    };
    proto.acceleration.FallbackSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.FallbackSettings, a2);
    };
    proto.acceleration.FallbackSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.FallbackSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.FallbackSettings();
      a2.allowAutomaticFallbackOnCompilationError != null && b2.internal_setField(5, a2.allowAutomaticFallbackOnCompilationError);
      a2.allowAutomaticFallbackOnExecutionError != null && b2.internal_setField(6, a2.allowAutomaticFallbackOnExecutionError);
      return b2;
    });
    proto.acceleration.FallbackSettings.prototype.toObject = function(a2) {
      return proto.acceleration.FallbackSettings.internal_toObject(a2, this);
    };
    proto.acceleration.FallbackSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { allowAutomaticFallbackOnCompilationError: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(5)), allowAutomaticFallbackOnExecutionError: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(6)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.GPUDelegateSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.GPUDelegateSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.GPUDelegateSettings.prototype.getIsPrecisionLossAllowed = function() {
      return this.internal_getBooleanField(1);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setIsPrecisionLossAllowed = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearIsPrecisionLossAllowed = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasIsPrecisionLossAllowed = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getInferencePreference = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setInferencePreference = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearInferencePreference = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasInferencePreference = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getEnableQuantizedInference = function() {
      return this.internal_getBooleanFieldWithDefault(3, true);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setEnableQuantizedInference = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearEnableQuantizedInference = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasEnableQuantizedInference = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getForceBackend = function() {
      return this.internal_getField(4);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setForceBackend = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearForceBackend = function() {
      return this.internal_clearField(4);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasForceBackend = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getInferencePriority1 = function() {
      return this.internal_getFieldWithDefault(5, 0);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setInferencePriority1 = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearInferencePriority1 = function() {
      return this.internal_clearField(5);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasInferencePriority1 = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getInferencePriority2 = function() {
      return this.internal_getFieldWithDefault(6, 0);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setInferencePriority2 = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearInferencePriority2 = function() {
      return this.internal_clearField(6);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasInferencePriority2 = function() {
      return this.internal_hasField(6);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getInferencePriority3 = function() {
      return this.internal_getFieldWithDefault(7, 0);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setInferencePriority3 = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearInferencePriority3 = function() {
      return this.internal_clearField(7);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasInferencePriority3 = function() {
      return this.internal_hasField(7);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getCacheDirectory = function() {
      return this.internal_getField(8);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setCacheDirectory = function(a2) {
      return this.internal_setField(8, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearCacheDirectory = function() {
      return this.internal_clearField(8);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasCacheDirectory = function() {
      return this.internal_hasField(8);
    };
    proto.acceleration.GPUDelegateSettings.prototype.getModelToken = function() {
      return this.internal_getField(9);
    };
    proto.acceleration.GPUDelegateSettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(9, a2);
    };
    proto.acceleration.GPUDelegateSettings.prototype.clearModelToken = function() {
      return this.internal_clearField(9);
    };
    proto.acceleration.GPUDelegateSettings.prototype.hasModelToken = function() {
      return this.internal_hasField(9);
    };
    proto.acceleration.GPUDelegateSettings.internalDoNotUse$proto$acceleration$GPUDelegateSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readBool, 2: jspb.internal.binary.readEnum, 3: jspb.internal.binary.readBool, 4: jspb.internal.binary.readEnum, 5: jspb.internal.binary.readEnum, 6: jspb.internal.binary.readEnum, 7: jspb.internal.binary.readEnum, 8: jspb.internal.binary.readString, 9: jspb.internal.binary.readString };
    };
    proto.acceleration.GPUDelegateSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.GPUDelegateSettings.serializeBinaryToWriter);
    };
    proto.acceleration.GPUDelegateSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBool(b2, a2, 1);
      jspb.internal.binary.writeEnum(b2, a2, 2);
      jspb.internal.binary.writeBool(b2, a2, 3);
      jspb.internal.binary.writeEnum(b2, a2, 4);
      jspb.internal.binary.writeEnum(b2, a2, 5);
      jspb.internal.binary.writeEnum(b2, a2, 6);
      jspb.internal.binary.writeEnum(b2, a2, 7);
      jspb.internal.binary.writeString(b2, a2, 8);
      jspb.internal.binary.writeString(b2, a2, 9);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.GPUDelegateSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.GPUDelegateSettings, proto.acceleration.GPUDelegateSettings.internalDoNotUse$proto$acceleration$GPUDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.GPUDelegateSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.GPUDelegateSettings.internalDoNotUse$proto$acceleration$GPUDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.GPUDelegateSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.GPUDelegateSettings, a2);
    };
    proto.acceleration.GPUDelegateSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.GPUDelegateSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.GPUDelegateSettings();
      a2.isPrecisionLossAllowed != null && b2.internal_setField(1, a2.isPrecisionLossAllowed);
      a2.inferencePreference != null && b2.internal_setField(2, a2.inferencePreference);
      a2.enableQuantizedInference != null && b2.internal_setField(3, a2.enableQuantizedInference);
      a2.forceBackend != null && b2.internal_setField(4, a2.forceBackend);
      a2.inferencePriority1 != null && b2.internal_setField(5, a2.inferencePriority1);
      a2.inferencePriority2 != null && b2.internal_setField(6, a2.inferencePriority2);
      a2.inferencePriority3 != null && b2.internal_setField(7, a2.inferencePriority3);
      a2.cacheDirectory != null && b2.internal_setField(8, a2.cacheDirectory);
      a2.modelToken != null && b2.internal_setField(9, a2.modelToken);
      return b2;
    });
    proto.acceleration.GPUDelegateSettings.prototype.toObject = function(a2) {
      return proto.acceleration.GPUDelegateSettings.internal_toObject(a2, this);
    };
    proto.acceleration.GPUDelegateSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { isPrecisionLossAllowed: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(1)), inferencePreference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), enableQuantizedInference: b2.internal_getBooleanFieldWithDefault(3, true), forceBackend: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)), inferencePriority1: b2.internal_getFieldWithDefault(5, 0), inferencePriority2: b2.internal_getFieldWithDefault(6, 0), inferencePriority3: b2.internal_getFieldWithDefault(7, 0), cacheDirectory: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(8)), modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(9)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.HangDetectionSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.HangDetectionSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.HangDetectionSettings.prototype.getBehaviour = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.HangDetectionSettings.prototype.setBehaviour = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.HangDetectionSettings.prototype.clearBehaviour = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.HangDetectionSettings.prototype.hasBehaviour = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.HangDetectionSettings.prototype.getCrashTriggerPercentage = function() {
      return this.internal_getIntegerFieldWithDefault(2, 100);
    };
    proto.acceleration.HangDetectionSettings.prototype.setCrashTriggerPercentage = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.HangDetectionSettings.prototype.clearCrashTriggerPercentage = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.HangDetectionSettings.prototype.hasCrashTriggerPercentage = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.HangDetectionSettings.prototype.getHangTimeoutMs = function() {
      return this.internal_getField(3);
    };
    proto.acceleration.HangDetectionSettings.prototype.setHangTimeoutMs = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.HangDetectionSettings.prototype.clearHangTimeoutMs = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.HangDetectionSettings.prototype.hasHangTimeoutMs = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: jspb.internal.binary.readInt32, 3: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.HangDetectionSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.HangDetectionSettings.serializeBinaryToWriter);
    };
    proto.acceleration.HangDetectionSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.HangDetectionSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject);
    };
    proto.acceleration.HangDetectionSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject);
    };
    proto.acceleration.HangDetectionSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.HangDetectionSettings, a2);
    };
    proto.acceleration.HangDetectionSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.HangDetectionSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.HangDetectionSettings();
      a2.behaviour != null && b2.internal_setField(1, a2.behaviour);
      a2.crashTriggerPercentage != null && b2.internal_setField(2, a2.crashTriggerPercentage);
      a2.hangTimeoutMs != null && b2.internal_setField(3, a2.hangTimeoutMs);
      return b2;
    });
    proto.acceleration.HangDetectionSettings.prototype.toObject = function(a2) {
      return proto.acceleration.HangDetectionSettings.internal_toObject(a2, this);
    };
    proto.acceleration.HangDetectionSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { behaviour: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), crashTriggerPercentage: b2.internal_getIntegerFieldWithDefault(2, 100), hangTimeoutMs: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.HexagonDelegateSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.HexagonDelegateSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.HexagonDelegateSettings.prototype.getNoOfHexagonInstancesToCache = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.HexagonDelegateSettings.prototype.setNoOfHexagonInstancesToCache = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.HexagonDelegateSettings.prototype.clearNoOfHexagonInstancesToCache = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.HexagonDelegateSettings.prototype.hasNoOfHexagonInstancesToCache = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.HexagonDelegateSettings.internalDoNotUse$proto$acceleration$HexagonDelegateSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.HexagonDelegateSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.HexagonDelegateSettings.serializeBinaryToWriter);
    };
    proto.acceleration.HexagonDelegateSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.HexagonDelegateSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.HexagonDelegateSettings, proto.acceleration.HexagonDelegateSettings.internalDoNotUse$proto$acceleration$HexagonDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.HexagonDelegateSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.HexagonDelegateSettings.internalDoNotUse$proto$acceleration$HexagonDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.HexagonDelegateSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.HexagonDelegateSettings, a2);
    };
    proto.acceleration.HexagonDelegateSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.HexagonDelegateSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.HexagonDelegateSettings();
      a2.noOfHexagonInstancesToCache != null && b2.internal_setField(1, a2.noOfHexagonInstancesToCache);
      return b2;
    });
    proto.acceleration.HexagonDelegateSettings.prototype.toObject = function(a2) {
      return proto.acceleration.HexagonDelegateSettings.internal_toObject(a2, this);
    };
    proto.acceleration.HexagonDelegateSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { noOfHexagonInstancesToCache: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.NNAPIDelegateSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.NNAPIDelegateSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.NNAPIDelegateSettings.prototype.getAcceleratorName = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setAcceleratorName = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearAcceleratorName = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasAcceleratorName = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getCacheDirectory = function() {
      return this.internal_getField(2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setCacheDirectory = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearCacheDirectory = function() {
      return this.internal_clearField(2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasCacheDirectory = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getModelToken = function() {
      return this.internal_getField(3);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearModelToken = function() {
      return this.internal_clearField(3);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasModelToken = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getExecutionPreference = function() {
      return this.internal_getField(4);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setExecutionPreference = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearExecutionPreference = function() {
      return this.internal_clearField(4);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasExecutionPreference = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getNoOfNnapiInstancesToCache = function() {
      return this.internal_getField(5);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setNoOfNnapiInstancesToCache = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearNoOfNnapiInstancesToCache = function() {
      return this.internal_clearField(5);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasNoOfNnapiInstancesToCache = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getFallbackSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.FallbackSettings, 6);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setFallbackSettings = function(a2) {
      return this.internal_setWrapperField(6, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearFallbackSettings = function() {
      return this.internal_clearWrapperField(6);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasFallbackSettings = function() {
      return this.internal_hasField(6);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_getBooleanField(7);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setAllowNnapiCpuOnAndroid10Plus = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_clearField(7);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_hasField(7);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getExecutionPriority = function() {
      return this.internal_getField(8);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setExecutionPriority = function(a2) {
      return this.internal_setField(8, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearExecutionPriority = function() {
      return this.internal_clearField(8);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasExecutionPriority = function() {
      return this.internal_hasField(8);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getAllowDynamicDimensions = function() {
      return this.internal_getBooleanField(9);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setAllowDynamicDimensions = function(a2) {
      return this.internal_setField(9, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearAllowDynamicDimensions = function() {
      return this.internal_clearField(9);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasAllowDynamicDimensions = function() {
      return this.internal_hasField(9);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getAllowFp16PrecisionForFp32 = function() {
      return this.internal_getBooleanField(10);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setAllowFp16PrecisionForFp32 = function(a2) {
      return this.internal_setField(10, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearAllowFp16PrecisionForFp32 = function() {
      return this.internal_clearField(10);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasAllowFp16PrecisionForFp32 = function() {
      return this.internal_hasField(10);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getUseBurstComputation = function() {
      return this.internal_getBooleanField(11);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setUseBurstComputation = function(a2) {
      return this.internal_setField(11, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearUseBurstComputation = function() {
      return this.internal_clearField(11);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasUseBurstComputation = function() {
      return this.internal_hasField(11);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.getSupportLibraryHandle = function() {
      return this.internal_getField(12);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.setSupportLibraryHandle = function(a2) {
      return this.internal_setField(12, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.clearSupportLibraryHandle = function() {
      return this.internal_clearField(12);
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.hasSupportLibraryHandle = function() {
      return this.internal_hasField(12);
    };
    proto.acceleration.NNAPIDelegateSettings.internalDoNotUse$proto$acceleration$NNAPIDelegateSettings$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readString,
        2: jspb.internal.binary.readString,
        3: jspb.internal.binary.readString,
        4: jspb.internal.binary.readEnum,
        5: jspb.internal.binary.readInt32,
        6: [jspb.internal.binary.readMessage, proto.acceleration.FallbackSettings, proto.acceleration.FallbackSettings.internalDoNotUse$proto$acceleration$FallbackSettings$getBinaryFieldsObject],
        7: jspb.internal.binary.readBool,
        8: jspb.internal.binary.readEnum,
        9: jspb.internal.binary.readBool,
        10: jspb.internal.binary.readBool,
        11: jspb.internal.binary.readBool,
        12: jspb.internal.binary.readInt64
      };
    };
    proto.acceleration.NNAPIDelegateSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.NNAPIDelegateSettings.serializeBinaryToWriter);
    };
    proto.acceleration.NNAPIDelegateSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.writeString(b2, a2, 3);
      jspb.internal.binary.writeEnum(b2, a2, 4);
      jspb.internal.binary.writeInt32(b2, a2, 5);
      jspb.internal.binary.writeMessage(b2, a2, 6, proto.acceleration.FallbackSettings, proto.acceleration.FallbackSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeBool(b2, a2, 7);
      jspb.internal.binary.writeEnum(b2, a2, 8);
      jspb.internal.binary.writeBool(b2, a2, 9);
      jspb.internal.binary.writeBool(b2, a2, 10);
      jspb.internal.binary.writeBool(b2, a2, 11);
      jspb.internal.binary.writeInt64(b2, a2, 12);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.NNAPIDelegateSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.NNAPIDelegateSettings, proto.acceleration.NNAPIDelegateSettings.internalDoNotUse$proto$acceleration$NNAPIDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.NNAPIDelegateSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.NNAPIDelegateSettings.internalDoNotUse$proto$acceleration$NNAPIDelegateSettings$getBinaryFieldsObject);
    };
    proto.acceleration.NNAPIDelegateSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.NNAPIDelegateSettings, a2);
    };
    proto.acceleration.NNAPIDelegateSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.NNAPIDelegateSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.NNAPIDelegateSettings();
      a2.acceleratorName != null && b2.internal_setField(1, a2.acceleratorName);
      a2.cacheDirectory != null && b2.internal_setField(2, a2.cacheDirectory);
      a2.modelToken != null && b2.internal_setField(3, a2.modelToken);
      a2.executionPreference != null && b2.internal_setField(4, a2.executionPreference);
      a2.noOfNnapiInstancesToCache != null && b2.internal_setField(5, a2.noOfNnapiInstancesToCache);
      a2.fallbackSettings && b2.internal_setWrapperField(6, proto.acceleration.FallbackSettings.fromObject(a2.fallbackSettings));
      a2.allowNnapiCpuOnAndroid10Plus != null && b2.internal_setField(7, a2.allowNnapiCpuOnAndroid10Plus);
      a2.executionPriority != null && b2.internal_setField(8, a2.executionPriority);
      a2.allowDynamicDimensions != null && b2.internal_setField(9, a2.allowDynamicDimensions);
      a2.allowFp16PrecisionForFp32 != null && b2.internal_setField(10, a2.allowFp16PrecisionForFp32);
      a2.useBurstComputation != null && b2.internal_setField(11, a2.useBurstComputation);
      a2.supportLibraryHandle != null && b2.internal_setField(12, a2.supportLibraryHandle);
      return b2;
    });
    proto.acceleration.NNAPIDelegateSettings.prototype.toObject = function(a2) {
      return proto.acceleration.NNAPIDelegateSettings.internal_toObject(a2, this);
    };
    proto.acceleration.NNAPIDelegateSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = {
          acceleratorName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)),
          cacheDirectory: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)),
          modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)),
          executionPreference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)),
          noOfNnapiInstancesToCache: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(5)),
          fallbackSettings: proto.acceleration.FallbackSettings.internal_toObject(a2, b2.getFallbackSettings()),
          allowNnapiCpuOnAndroid10Plus: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(7)),
          executionPriority: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(8)),
          allowDynamicDimensions: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(9)),
          allowFp16PrecisionForFp32: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(10)),
          useBurstComputation: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(11)),
          supportLibraryHandle: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(12))
        };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.XNNPackSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.XNNPackSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.XNNPackSettings.prototype.getNumThreads = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.XNNPackSettings.prototype.setNumThreads = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.XNNPackSettings.prototype.clearNumThreads = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.XNNPackSettings.prototype.hasNumThreads = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.XNNPackSettings.internalDoNotUse$proto$acceleration$XNNPackSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32 };
    };
    proto.acceleration.XNNPackSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.XNNPackSettings.serializeBinaryToWriter);
    };
    proto.acceleration.XNNPackSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.XNNPackSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.XNNPackSettings, proto.acceleration.XNNPackSettings.internalDoNotUse$proto$acceleration$XNNPackSettings$getBinaryFieldsObject);
    };
    proto.acceleration.XNNPackSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.XNNPackSettings.internalDoNotUse$proto$acceleration$XNNPackSettings$getBinaryFieldsObject);
    };
    proto.acceleration.XNNPackSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.XNNPackSettings, a2);
    };
    proto.acceleration.XNNPackSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.XNNPackSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.XNNPackSettings();
      a2.numThreads != null && b2.internal_setField(1, a2.numThreads);
      return b2;
    });
    proto.acceleration.XNNPackSettings.prototype.toObject = function(a2) {
      return proto.acceleration.XNNPackSettings.internal_toObject(a2, this);
    };
    proto.acceleration.XNNPackSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { numThreads: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.TFLiteSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.TFLiteSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.TFLiteSettings.prototype.getDelegate = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.TFLiteSettings.prototype.setDelegate = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearDelegate = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.TFLiteSettings.prototype.hasDelegate = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.TFLiteSettings.prototype.getNnapiSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.NNAPIDelegateSettings, 2);
    };
    proto.acceleration.TFLiteSettings.prototype.setNnapiSettings = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearNnapiSettings = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.acceleration.TFLiteSettings.prototype.hasNnapiSettings = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.TFLiteSettings.prototype.getGpuSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.GPUDelegateSettings, 3);
    };
    proto.acceleration.TFLiteSettings.prototype.setGpuSettings = function(a2) {
      return this.internal_setWrapperField(3, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearGpuSettings = function() {
      return this.internal_clearWrapperField(3);
    };
    proto.acceleration.TFLiteSettings.prototype.hasGpuSettings = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.TFLiteSettings.prototype.getCpuSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.CPUSettings, 4);
    };
    proto.acceleration.TFLiteSettings.prototype.setCpuSettings = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearCpuSettings = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.acceleration.TFLiteSettings.prototype.hasCpuSettings = function() {
      return this.internal_hasField(4);
    };
    proto.acceleration.TFLiteSettings.prototype.getHexagonSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.HexagonDelegateSettings, 5);
    };
    proto.acceleration.TFLiteSettings.prototype.setHexagonSettings = function(a2) {
      return this.internal_setWrapperField(5, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearHexagonSettings = function() {
      return this.internal_clearWrapperField(5);
    };
    proto.acceleration.TFLiteSettings.prototype.hasHexagonSettings = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.TFLiteSettings.prototype.getEdgetpuSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.EdgeTpuDelegateSettings, 10);
    };
    proto.acceleration.TFLiteSettings.prototype.setEdgetpuSettings = function(a2) {
      return this.internal_setWrapperField(10, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearEdgetpuSettings = function() {
      return this.internal_clearWrapperField(10);
    };
    proto.acceleration.TFLiteSettings.prototype.hasEdgetpuSettings = function() {
      return this.internal_hasField(10);
    };
    proto.acceleration.TFLiteSettings.prototype.getCoralSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.CoralDelegateSettings, 12);
    };
    proto.acceleration.TFLiteSettings.prototype.setCoralSettings = function(a2) {
      return this.internal_setWrapperField(12, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearCoralSettings = function() {
      return this.internal_clearWrapperField(12);
    };
    proto.acceleration.TFLiteSettings.prototype.hasCoralSettings = function() {
      return this.internal_hasField(12);
    };
    proto.acceleration.TFLiteSettings.prototype.getXnnpackSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.XNNPackSettings, 13);
    };
    proto.acceleration.TFLiteSettings.prototype.setXnnpackSettings = function(a2) {
      return this.internal_setWrapperField(13, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearXnnpackSettings = function() {
      return this.internal_clearWrapperField(13);
    };
    proto.acceleration.TFLiteSettings.prototype.hasXnnpackSettings = function() {
      return this.internal_hasField(13);
    };
    proto.acceleration.TFLiteSettings.prototype.getEnumerationHangDetection = function() {
      return this.internal_getWrapperField(proto.acceleration.HangDetectionSettings, 6);
    };
    proto.acceleration.TFLiteSettings.prototype.setEnumerationHangDetection = function(a2) {
      return this.internal_setWrapperField(6, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearEnumerationHangDetection = function() {
      return this.internal_clearWrapperField(6);
    };
    proto.acceleration.TFLiteSettings.prototype.hasEnumerationHangDetection = function() {
      return this.internal_hasField(6);
    };
    proto.acceleration.TFLiteSettings.prototype.getCompilationHangDetection = function() {
      return this.internal_getWrapperField(proto.acceleration.HangDetectionSettings, 7);
    };
    proto.acceleration.TFLiteSettings.prototype.setCompilationHangDetection = function(a2) {
      return this.internal_setWrapperField(7, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearCompilationHangDetection = function() {
      return this.internal_clearWrapperField(7);
    };
    proto.acceleration.TFLiteSettings.prototype.hasCompilationHangDetection = function() {
      return this.internal_hasField(7);
    };
    proto.acceleration.TFLiteSettings.prototype.getExecutionHangDetection = function() {
      return this.internal_getWrapperField(proto.acceleration.HangDetectionSettings, 8);
    };
    proto.acceleration.TFLiteSettings.prototype.setExecutionHangDetection = function(a2) {
      return this.internal_setWrapperField(8, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearExecutionHangDetection = function() {
      return this.internal_clearWrapperField(8);
    };
    proto.acceleration.TFLiteSettings.prototype.hasExecutionHangDetection = function() {
      return this.internal_hasField(8);
    };
    proto.acceleration.TFLiteSettings.prototype.getAllowFp16PrecisionForFp32 = function() {
      return this.internal_getBooleanField(9);
    };
    proto.acceleration.TFLiteSettings.prototype.setAllowFp16PrecisionForFp32 = function(a2) {
      return this.internal_setField(9, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearAllowFp16PrecisionForFp32 = function() {
      return this.internal_clearField(9);
    };
    proto.acceleration.TFLiteSettings.prototype.hasAllowFp16PrecisionForFp32 = function() {
      return this.internal_hasField(9);
    };
    proto.acceleration.TFLiteSettings.prototype.getFallbackSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.FallbackSettings, 11);
    };
    proto.acceleration.TFLiteSettings.prototype.setFallbackSettings = function(a2) {
      return this.internal_setWrapperField(11, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearFallbackSettings = function() {
      return this.internal_clearWrapperField(11);
    };
    proto.acceleration.TFLiteSettings.prototype.hasFallbackSettings = function() {
      return this.internal_hasField(11);
    };
    proto.acceleration.TFLiteSettings.prototype.getMaxDelegatedPartitions = function() {
      return this.internal_getIntegerFieldWithDefault(14, -1);
    };
    proto.acceleration.TFLiteSettings.prototype.setMaxDelegatedPartitions = function(a2) {
      return this.internal_setField(14, a2);
    };
    proto.acceleration.TFLiteSettings.prototype.clearMaxDelegatedPartitions = function() {
      return this.internal_clearField(14);
    };
    proto.acceleration.TFLiteSettings.prototype.hasMaxDelegatedPartitions = function() {
      return this.internal_hasField(14);
    };
    proto.acceleration.TFLiteSettings.internalDoNotUse$proto$acceleration$TFLiteSettings$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readEnum,
        2: [jspb.internal.binary.readMessage, proto.acceleration.NNAPIDelegateSettings, proto.acceleration.NNAPIDelegateSettings.internalDoNotUse$proto$acceleration$NNAPIDelegateSettings$getBinaryFieldsObject],
        3: [jspb.internal.binary.readMessage, proto.acceleration.GPUDelegateSettings, proto.acceleration.GPUDelegateSettings.internalDoNotUse$proto$acceleration$GPUDelegateSettings$getBinaryFieldsObject],
        4: [jspb.internal.binary.readMessage, proto.acceleration.CPUSettings, proto.acceleration.CPUSettings.internalDoNotUse$proto$acceleration$CPUSettings$getBinaryFieldsObject],
        5: [jspb.internal.binary.readMessage, proto.acceleration.HexagonDelegateSettings, proto.acceleration.HexagonDelegateSettings.internalDoNotUse$proto$acceleration$HexagonDelegateSettings$getBinaryFieldsObject],
        10: [jspb.internal.binary.readMessage, proto.acceleration.EdgeTpuDelegateSettings, proto.acceleration.EdgeTpuDelegateSettings.internalDoNotUse$proto$acceleration$EdgeTpuDelegateSettings$getBinaryFieldsObject],
        12: [jspb.internal.binary.readMessage, proto.acceleration.CoralDelegateSettings, proto.acceleration.CoralDelegateSettings.internalDoNotUse$proto$acceleration$CoralDelegateSettings$getBinaryFieldsObject],
        13: [jspb.internal.binary.readMessage, proto.acceleration.XNNPackSettings, proto.acceleration.XNNPackSettings.internalDoNotUse$proto$acceleration$XNNPackSettings$getBinaryFieldsObject],
        6: [jspb.internal.binary.readMessage, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject],
        7: [jspb.internal.binary.readMessage, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject],
        8: [jspb.internal.binary.readMessage, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.internalDoNotUse$proto$acceleration$HangDetectionSettings$getBinaryFieldsObject],
        9: jspb.internal.binary.readBool,
        11: [
          jspb.internal.binary.readMessage,
          proto.acceleration.FallbackSettings,
          proto.acceleration.FallbackSettings.internalDoNotUse$proto$acceleration$FallbackSettings$getBinaryFieldsObject
        ],
        14: jspb.internal.binary.readInt32
      };
    };
    proto.acceleration.TFLiteSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.TFLiteSettings.serializeBinaryToWriter);
    };
    proto.acceleration.TFLiteSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.acceleration.NNAPIDelegateSettings, proto.acceleration.NNAPIDelegateSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 3, proto.acceleration.GPUDelegateSettings, proto.acceleration.GPUDelegateSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.acceleration.CPUSettings, proto.acceleration.CPUSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 5, proto.acceleration.HexagonDelegateSettings, proto.acceleration.HexagonDelegateSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 10, proto.acceleration.EdgeTpuDelegateSettings, proto.acceleration.EdgeTpuDelegateSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 12, proto.acceleration.CoralDelegateSettings, proto.acceleration.CoralDelegateSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 13, proto.acceleration.XNNPackSettings, proto.acceleration.XNNPackSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 6, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 7, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 8, proto.acceleration.HangDetectionSettings, proto.acceleration.HangDetectionSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeBool(b2, a2, 9);
      jspb.internal.binary.writeMessage(b2, a2, 11, proto.acceleration.FallbackSettings, proto.acceleration.FallbackSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 14);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.TFLiteSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.TFLiteSettings, proto.acceleration.TFLiteSettings.internalDoNotUse$proto$acceleration$TFLiteSettings$getBinaryFieldsObject);
    };
    proto.acceleration.TFLiteSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.TFLiteSettings.internalDoNotUse$proto$acceleration$TFLiteSettings$getBinaryFieldsObject);
    };
    proto.acceleration.TFLiteSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.TFLiteSettings, a2);
    };
    proto.acceleration.TFLiteSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.TFLiteSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.TFLiteSettings();
      a2.delegate != null && b2.internal_setField(1, a2.delegate);
      a2.nnapiSettings && b2.internal_setWrapperField(2, proto.acceleration.NNAPIDelegateSettings.fromObject(a2.nnapiSettings));
      a2.gpuSettings && b2.internal_setWrapperField(3, proto.acceleration.GPUDelegateSettings.fromObject(a2.gpuSettings));
      a2.cpuSettings && b2.internal_setWrapperField(4, proto.acceleration.CPUSettings.fromObject(a2.cpuSettings));
      a2.hexagonSettings && b2.internal_setWrapperField(5, proto.acceleration.HexagonDelegateSettings.fromObject(a2.hexagonSettings));
      a2.edgetpuSettings && b2.internal_setWrapperField(10, proto.acceleration.EdgeTpuDelegateSettings.fromObject(a2.edgetpuSettings));
      a2.coralSettings && b2.internal_setWrapperField(12, proto.acceleration.CoralDelegateSettings.fromObject(a2.coralSettings));
      a2.xnnpackSettings && b2.internal_setWrapperField(13, proto.acceleration.XNNPackSettings.fromObject(a2.xnnpackSettings));
      a2.enumerationHangDetection && b2.internal_setWrapperField(6, proto.acceleration.HangDetectionSettings.fromObject(a2.enumerationHangDetection));
      a2.compilationHangDetection && b2.internal_setWrapperField(7, proto.acceleration.HangDetectionSettings.fromObject(a2.compilationHangDetection));
      a2.executionHangDetection && b2.internal_setWrapperField(8, proto.acceleration.HangDetectionSettings.fromObject(a2.executionHangDetection));
      a2.allowFp16PrecisionForFp32 != null && b2.internal_setField(9, a2.allowFp16PrecisionForFp32);
      a2.fallbackSettings && b2.internal_setWrapperField(11, proto.acceleration.FallbackSettings.fromObject(a2.fallbackSettings));
      a2.maxDelegatedPartitions != null && b2.internal_setField(14, a2.maxDelegatedPartitions);
      return b2;
    });
    proto.acceleration.TFLiteSettings.prototype.toObject = function(a2) {
      return proto.acceleration.TFLiteSettings.internal_toObject(a2, this);
    };
    proto.acceleration.TFLiteSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { delegate: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), nnapiSettings: proto.acceleration.NNAPIDelegateSettings.internal_toObject(a2, b2.getNnapiSettings()), gpuSettings: proto.acceleration.GPUDelegateSettings.internal_toObject(a2, b2.getGpuSettings()), cpuSettings: proto.acceleration.CPUSettings.internal_toObject(a2, b2.getCpuSettings()), hexagonSettings: proto.acceleration.HexagonDelegateSettings.internal_toObject(a2, b2.getHexagonSettings()), edgetpuSettings: proto.acceleration.EdgeTpuDelegateSettings.internal_toObject(a2, b2.getEdgetpuSettings()), coralSettings: proto.acceleration.CoralDelegateSettings.internal_toObject(a2, b2.getCoralSettings()), xnnpackSettings: proto.acceleration.XNNPackSettings.internal_toObject(a2, b2.getXnnpackSettings()), enumerationHangDetection: proto.acceleration.HangDetectionSettings.internal_toObject(a2, b2.getEnumerationHangDetection()), compilationHangDetection: proto.acceleration.HangDetectionSettings.internal_toObject(a2, b2.getCompilationHangDetection()), executionHangDetection: proto.acceleration.HangDetectionSettings.internal_toObject(a2, b2.getExecutionHangDetection()), allowFp16PrecisionForFp32: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(9)), fallbackSettings: proto.acceleration.FallbackSettings.internal_toObject(a2, b2.getFallbackSettings()), maxDelegatedPartitions: b2.internal_getIntegerFieldWithDefault(14, -1) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.MinibenchmarkSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.acceleration.MinibenchmarkSettings.repeatedFields_);
    };
    $jscomp.inherits(proto.acceleration.MinibenchmarkSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.MinibenchmarkSettings.prototype.getSettingsToTestList = function() {
      return this.internal_getRepeatedWrapperField(proto.acceleration.TFLiteSettings, 1);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.setSettingsToTestList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.addSettingsToTest = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.acceleration.TFLiteSettings, b2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.addAndReturnSettingsToTest = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.acceleration.TFLiteSettings, b2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.clearSettingsToTestList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.getModelFile = function() {
      return this.internal_getWrapperField(proto.acceleration.ModelFile, 2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.setModelFile = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.clearModelFile = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.hasModelFile = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.getStoragePaths = function() {
      return this.internal_getWrapperField(proto.acceleration.BenchmarkStoragePaths, 3);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.setStoragePaths = function(a2) {
      return this.internal_setWrapperField(3, a2);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.clearStoragePaths = function() {
      return this.internal_clearWrapperField(3);
    };
    proto.acceleration.MinibenchmarkSettings.prototype.hasStoragePaths = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.MinibenchmarkSettings.internalDoNotUse$proto$acceleration$MinibenchmarkSettings$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.acceleration.TFLiteSettings, proto.acceleration.TFLiteSettings.internalDoNotUse$proto$acceleration$TFLiteSettings$getBinaryFieldsObject], 2: [jspb.internal.binary.readMessage, proto.acceleration.ModelFile, proto.acceleration.ModelFile.internalDoNotUse$proto$acceleration$ModelFile$getBinaryFieldsObject], 3: [
        jspb.internal.binary.readMessage,
        proto.acceleration.BenchmarkStoragePaths,
        proto.acceleration.BenchmarkStoragePaths.internalDoNotUse$proto$acceleration$BenchmarkStoragePaths$getBinaryFieldsObject
      ] };
    };
    proto.acceleration.MinibenchmarkSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.MinibenchmarkSettings.serializeBinaryToWriter);
    };
    proto.acceleration.MinibenchmarkSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.acceleration.TFLiteSettings, proto.acceleration.TFLiteSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.acceleration.ModelFile, proto.acceleration.ModelFile.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 3, proto.acceleration.BenchmarkStoragePaths, proto.acceleration.BenchmarkStoragePaths.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.MinibenchmarkSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.MinibenchmarkSettings, proto.acceleration.MinibenchmarkSettings.internalDoNotUse$proto$acceleration$MinibenchmarkSettings$getBinaryFieldsObject);
    };
    proto.acceleration.MinibenchmarkSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.MinibenchmarkSettings.internalDoNotUse$proto$acceleration$MinibenchmarkSettings$getBinaryFieldsObject);
    };
    proto.acceleration.MinibenchmarkSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.MinibenchmarkSettings, a2);
    };
    proto.acceleration.MinibenchmarkSettings.repeatedFields_ = [1];
    proto.acceleration.MinibenchmarkSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.MinibenchmarkSettings.fromObject = function(a2) {
      var b2 = new proto.acceleration.MinibenchmarkSettings();
      a2.settingsToTestList && b2.internal_setRepeatedWrapperField(1, a2.settingsToTestList.map(proto.acceleration.TFLiteSettings.fromObject));
      a2.modelFile && b2.internal_setWrapperField(2, proto.acceleration.ModelFile.fromObject(a2.modelFile));
      a2.storagePaths && b2.internal_setWrapperField(3, proto.acceleration.BenchmarkStoragePaths.fromObject(a2.storagePaths));
      return b2;
    });
    proto.acceleration.MinibenchmarkSettings.prototype.toObject = function(a2) {
      return proto.acceleration.MinibenchmarkSettings.internal_toObject(a2, this);
    };
    proto.acceleration.MinibenchmarkSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { settingsToTestList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getSettingsToTestList(), proto.acceleration.TFLiteSettings.internal_toObject, a2), modelFile: proto.acceleration.ModelFile.internal_toObject(a2, b2.getModelFile()), storagePaths: proto.acceleration.BenchmarkStoragePaths.internal_toObject(a2, b2.getStoragePaths()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.acceleration.Acceleration = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.acceleration.Acceleration, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.acceleration.Acceleration.prototype.getPreference = function() {
      return this.internal_getField(1);
    };
    proto.acceleration.Acceleration.prototype.setPreference = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.acceleration.Acceleration.prototype.clearPreference = function() {
      return this.internal_clearField(1);
    };
    proto.acceleration.Acceleration.prototype.hasPreference = function() {
      return this.internal_hasField(1);
    };
    proto.acceleration.Acceleration.prototype.getTfliteSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.TFLiteSettings, 2);
    };
    proto.acceleration.Acceleration.prototype.setTfliteSettings = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.acceleration.Acceleration.prototype.clearTfliteSettings = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.acceleration.Acceleration.prototype.hasTfliteSettings = function() {
      return this.internal_hasField(2);
    };
    proto.acceleration.Acceleration.prototype.getModelIdentifierForStatistics = function() {
      return this.internal_getWrapperField(proto.acceleration.InferenceToUseFor, 3);
    };
    proto.acceleration.Acceleration.prototype.setModelIdentifierForStatistics = function(a2) {
      return this.internal_setWrapperField(3, a2);
    };
    proto.acceleration.Acceleration.prototype.clearModelIdentifierForStatistics = function() {
      return this.internal_clearWrapperField(3);
    };
    proto.acceleration.Acceleration.prototype.hasModelIdentifierForStatistics = function() {
      return this.internal_hasField(3);
    };
    proto.acceleration.Acceleration.prototype.getSettingsToTestLocally = function() {
      return this.internal_getWrapperField(proto.acceleration.MinibenchmarkSettings, 5);
    };
    proto.acceleration.Acceleration.prototype.setSettingsToTestLocally = function(a2) {
      return this.internal_setWrapperField(5, a2);
    };
    proto.acceleration.Acceleration.prototype.clearSettingsToTestLocally = function() {
      return this.internal_clearWrapperField(5);
    };
    proto.acceleration.Acceleration.prototype.hasSettingsToTestLocally = function() {
      return this.internal_hasField(5);
    };
    proto.acceleration.Acceleration.internalDoNotUse$proto$acceleration$Acceleration$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readEnum,
        2: [jspb.internal.binary.readMessage, proto.acceleration.TFLiteSettings, proto.acceleration.TFLiteSettings.internalDoNotUse$proto$acceleration$TFLiteSettings$getBinaryFieldsObject],
        3: [jspb.internal.binary.readMessage, proto.acceleration.InferenceToUseFor, proto.acceleration.InferenceToUseFor.internalDoNotUse$proto$acceleration$InferenceToUseFor$getBinaryFieldsObject],
        5: [jspb.internal.binary.readMessage, proto.acceleration.MinibenchmarkSettings, proto.acceleration.MinibenchmarkSettings.internalDoNotUse$proto$acceleration$MinibenchmarkSettings$getBinaryFieldsObject]
      };
    };
    proto.acceleration.Acceleration.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.acceleration.Acceleration.serializeBinaryToWriter);
    };
    proto.acceleration.Acceleration.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.acceleration.TFLiteSettings, proto.acceleration.TFLiteSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 3, proto.acceleration.InferenceToUseFor, proto.acceleration.InferenceToUseFor.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 5, proto.acceleration.MinibenchmarkSettings, proto.acceleration.MinibenchmarkSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.acceleration.Acceleration.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.acceleration.Acceleration, proto.acceleration.Acceleration.internalDoNotUse$proto$acceleration$Acceleration$getBinaryFieldsObject);
    };
    proto.acceleration.Acceleration.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.acceleration.Acceleration.internalDoNotUse$proto$acceleration$Acceleration$getBinaryFieldsObject);
    };
    proto.acceleration.Acceleration.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.acceleration.Acceleration, a2);
    };
    proto.acceleration.Acceleration.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.acceleration.Acceleration.fromObject = function(a2) {
      var b2 = new proto.acceleration.Acceleration();
      a2.preference != null && b2.internal_setField(1, a2.preference);
      a2.tfliteSettings && b2.internal_setWrapperField(2, proto.acceleration.TFLiteSettings.fromObject(a2.tfliteSettings));
      a2.modelIdentifierForStatistics && b2.internal_setWrapperField(3, proto.acceleration.InferenceToUseFor.fromObject(a2.modelIdentifierForStatistics));
      a2.settingsToTestLocally && b2.internal_setWrapperField(5, proto.acceleration.MinibenchmarkSettings.fromObject(a2.settingsToTestLocally));
      return b2;
    });
    proto.acceleration.Acceleration.prototype.toObject = function(a2) {
      return proto.acceleration.Acceleration.internal_toObject(a2, this);
    };
    proto.acceleration.Acceleration.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { preference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), tfliteSettings: proto.acceleration.TFLiteSettings.internal_toObject(a2, b2.getTfliteSettings()), modelIdentifierForStatistics: proto.acceleration.InferenceToUseFor.internal_toObject(a2, b2.getModelIdentifierForStatistics()), settingsToTestLocally: proto.acceleration.MinibenchmarkSettings.internal_toObject(a2, b2.getSettingsToTestLocally()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.visionkit = {};
    proto.visionkit.FileDescriptorMeta = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.visionkit.FileDescriptorMeta, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.visionkit.FileDescriptorMeta.prototype.getFd = function() {
      return this.internal_getField(1);
    };
    proto.visionkit.FileDescriptorMeta.prototype.setFd = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.clearFd = function() {
      return this.internal_clearField(1);
    };
    proto.visionkit.FileDescriptorMeta.prototype.hasFd = function() {
      return this.internal_hasField(1);
    };
    proto.visionkit.FileDescriptorMeta.prototype.getLength = function() {
      return this.internal_getField(2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.setLength = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.clearLength = function() {
      return this.internal_clearField(2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.hasLength = function() {
      return this.internal_hasField(2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.getOffset = function() {
      return this.internal_getField(3);
    };
    proto.visionkit.FileDescriptorMeta.prototype.setOffset = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.visionkit.FileDescriptorMeta.prototype.clearOffset = function() {
      return this.internal_clearField(3);
    };
    proto.visionkit.FileDescriptorMeta.prototype.hasOffset = function() {
      return this.internal_hasField(3);
    };
    proto.visionkit.FileDescriptorMeta.internalDoNotUse$proto$visionkit$FileDescriptorMeta$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32, 2: jspb.internal.binary.readInt64, 3: jspb.internal.binary.readInt64 };
    };
    proto.visionkit.FileDescriptorMeta.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.visionkit.FileDescriptorMeta.serializeBinaryToWriter);
    };
    proto.visionkit.FileDescriptorMeta.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.writeInt64(b2, a2, 3);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.visionkit.FileDescriptorMeta.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.visionkit.FileDescriptorMeta, proto.visionkit.FileDescriptorMeta.internalDoNotUse$proto$visionkit$FileDescriptorMeta$getBinaryFieldsObject);
    };
    proto.visionkit.FileDescriptorMeta.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.visionkit.FileDescriptorMeta.internalDoNotUse$proto$visionkit$FileDescriptorMeta$getBinaryFieldsObject);
    };
    proto.visionkit.FileDescriptorMeta.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.visionkit.FileDescriptorMeta, a2);
    };
    proto.visionkit.FileDescriptorMeta.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.visionkit.FileDescriptorMeta.fromObject = function(a2) {
      var b2 = new proto.visionkit.FileDescriptorMeta();
      a2.fd != null && b2.internal_setField(1, a2.fd);
      a2.length != null && b2.internal_setField(2, a2.length);
      a2.offset != null && b2.internal_setField(3, a2.offset);
      return b2;
    });
    proto.visionkit.FileDescriptorMeta.prototype.toObject = function(a2) {
      return proto.visionkit.FileDescriptorMeta.internal_toObject(a2, this);
    };
    proto.visionkit.FileDescriptorMeta.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { fd: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), length: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), offset: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.visionkit.ExternalFile = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.visionkit.ExternalFile, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.visionkit.ExternalFile.prototype.getFileContent = function() {
      return this.internal_getField(2);
    };
    proto.visionkit.ExternalFile.prototype.getFileContent_asB64 = function() {
      return module$contents$jspb$internal_bytesAsB64(this.getFileContent());
    };
    proto.visionkit.ExternalFile.prototype.getFileContent_asU8 = function() {
      return module$contents$jspb$internal_bytesAsU8(this.getFileContent());
    };
    proto.visionkit.ExternalFile.prototype.setFileContent = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.visionkit.ExternalFile.prototype.clearFileContent = function() {
      return this.internal_clearField(2);
    };
    proto.visionkit.ExternalFile.prototype.hasFileContent = function() {
      return this.internal_hasField(2);
    };
    proto.visionkit.ExternalFile.prototype.getFileName = function() {
      return this.internal_getField(1);
    };
    proto.visionkit.ExternalFile.prototype.setFileName = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.visionkit.ExternalFile.prototype.clearFileName = function() {
      return this.internal_clearField(1);
    };
    proto.visionkit.ExternalFile.prototype.hasFileName = function() {
      return this.internal_hasField(1);
    };
    proto.visionkit.ExternalFile.prototype.getFileDescriptorMeta = function() {
      return this.internal_getWrapperField(proto.visionkit.FileDescriptorMeta, 4);
    };
    proto.visionkit.ExternalFile.prototype.setFileDescriptorMeta = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.visionkit.ExternalFile.prototype.clearFileDescriptorMeta = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.visionkit.ExternalFile.prototype.hasFileDescriptorMeta = function() {
      return this.internal_hasField(4);
    };
    proto.visionkit.ExternalFile.internalDoNotUse$proto$visionkit$ExternalFile$getBinaryFieldsObject = function() {
      return { 2: jspb.internal.binary.readBytes, 1: jspb.internal.binary.readString, 4: [jspb.internal.binary.readMessage, proto.visionkit.FileDescriptorMeta, proto.visionkit.FileDescriptorMeta.internalDoNotUse$proto$visionkit$FileDescriptorMeta$getBinaryFieldsObject] };
    };
    proto.visionkit.ExternalFile.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.visionkit.ExternalFile.serializeBinaryToWriter);
    };
    proto.visionkit.ExternalFile.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBytes(b2, a2, 2);
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.visionkit.FileDescriptorMeta, proto.visionkit.FileDescriptorMeta.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.visionkit.ExternalFile.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.visionkit.ExternalFile, proto.visionkit.ExternalFile.internalDoNotUse$proto$visionkit$ExternalFile$getBinaryFieldsObject);
    };
    proto.visionkit.ExternalFile.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.visionkit.ExternalFile.internalDoNotUse$proto$visionkit$ExternalFile$getBinaryFieldsObject);
    };
    proto.visionkit.ExternalFile.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.visionkit.ExternalFile, a2);
    };
    proto.visionkit.ExternalFile.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.visionkit.ExternalFile.fromObject = function(a2) {
      var b2 = new proto.visionkit.ExternalFile();
      a2.fileContent != null && b2.internal_setField(2, a2.fileContent);
      a2.fileName != null && b2.internal_setField(1, a2.fileName);
      a2.fileDescriptorMeta && b2.internal_setWrapperField(4, proto.visionkit.FileDescriptorMeta.fromObject(a2.fileDescriptorMeta));
      return b2;
    });
    proto.visionkit.ExternalFile.prototype.toObject = function(a2) {
      return proto.visionkit.ExternalFile.internal_toObject(a2, this);
    };
    proto.visionkit.ExternalFile.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { fileContent: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.getFileContent_asB64()), fileName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), fileDescriptorMeta: proto.visionkit.FileDescriptorMeta.internal_toObject(a2, b2.getFileDescriptorMeta()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    goog.dom.asserts = {};
    goog.dom.asserts.assertIsLocation = function(a2) {
      if (goog.asserts.ENABLE_ASSERTS) {
        var b2 = goog.dom.asserts.getWindow_(a2);
        b2 && (!a2 || !(a2 instanceof b2.Location) && a2 instanceof b2.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(a2));
      }
      return a2;
    };
    goog.dom.asserts.assertIsElementType_ = function(a2, b2) {
      if (goog.asserts.ENABLE_ASSERTS) {
        var c = goog.dom.asserts.getWindow_(a2);
        c && typeof c[b2] != "undefined" && (a2 && (a2 instanceof c[b2] || !(a2 instanceof c.Location || a2 instanceof c.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b2, goog.dom.asserts.debugStringForType_(a2)));
      }
      return a2;
    };
    goog.dom.asserts.assertIsHTMLAnchorElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLAnchorElement");
    };
    goog.dom.asserts.assertIsHTMLButtonElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLButtonElement");
    };
    goog.dom.asserts.assertIsHTMLLinkElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLLinkElement");
    };
    goog.dom.asserts.assertIsHTMLImageElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLImageElement");
    };
    goog.dom.asserts.assertIsHTMLAudioElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLAudioElement");
    };
    goog.dom.asserts.assertIsHTMLVideoElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLVideoElement");
    };
    goog.dom.asserts.assertIsHTMLInputElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLInputElement");
    };
    goog.dom.asserts.assertIsHTMLTextAreaElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLTextAreaElement");
    };
    goog.dom.asserts.assertIsHTMLCanvasElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLCanvasElement");
    };
    goog.dom.asserts.assertIsHTMLEmbedElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLEmbedElement");
    };
    goog.dom.asserts.assertIsHTMLFormElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLFormElement");
    };
    goog.dom.asserts.assertIsHTMLFrameElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLFrameElement");
    };
    goog.dom.asserts.assertIsHTMLIFrameElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLIFrameElement");
    };
    goog.dom.asserts.assertIsHTMLObjectElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLObjectElement");
    };
    goog.dom.asserts.assertIsHTMLScriptElement = function(a2) {
      return goog.dom.asserts.assertIsElementType_(a2, "HTMLScriptElement");
    };
    goog.dom.asserts.debugStringForType_ = function(a2) {
      if (goog.isObject(a2))
        try {
          return a2.constructor.displayName || a2.constructor.name || Object.prototype.toString.call(a2);
        } catch (b2) {
          return "<object could not be stringified>";
        }
      else
        return a2 === void 0 ? "undefined" : a2 === null ? "null" : typeof a2;
    };
    goog.dom.asserts.getWindow_ = function(a2) {
      try {
        var b2 = a2 && a2.ownerDocument, c = b2 && (b2.defaultView || b2.parentWindow);
        c = c || goog.global;
        if (c.Element && c.Location)
          return c;
      } catch (d) {
      }
      return null;
    };
    goog.dom.HtmlElement = function() {
    };
    goog.functions = {};
    goog.functions.constant = function(a2) {
      return function() {
        return a2;
      };
    };
    goog.functions.FALSE = function() {
      return false;
    };
    goog.functions.TRUE = function() {
      return true;
    };
    goog.functions.NULL = function() {
      return null;
    };
    goog.functions.UNDEFINED = function() {
    };
    goog.functions.EMPTY = goog.functions.UNDEFINED;
    goog.functions.identity = function(a2) {
      return a2;
    };
    goog.functions.error = function(a2) {
      return function() {
        throw Error(a2);
      };
    };
    goog.functions.fail = function(a2) {
      return function() {
        throw a2;
      };
    };
    goog.functions.lock = function(a2, b2) {
      b2 = b2 || 0;
      return function() {
        return a2.apply(this, Array.prototype.slice.call(arguments, 0, b2));
      };
    };
    goog.functions.nth = function(a2) {
      return function() {
        return arguments[a2];
      };
    };
    goog.functions.partialRight = function(a2, b2) {
      var c = Array.prototype.slice.call(arguments, 1);
      return function() {
        var d = this;
        d === goog.global && (d = void 0);
        var e = Array.prototype.slice.call(arguments);
        e.push.apply(e, c);
        return a2.apply(d, e);
      };
    };
    goog.functions.withReturnValue = function(a2, b2) {
      return goog.functions.sequence(a2, goog.functions.constant(b2));
    };
    goog.functions.equalTo = function(a2, b2) {
      return function(c) {
        return b2 ? a2 == c : a2 === c;
      };
    };
    goog.functions.compose = function(a2, b2) {
      var c = arguments, d = c.length;
      return function() {
        var e;
        d && (e = c[d - 1].apply(this, arguments));
        for (var f = d - 2; 0 <= f; f--)
          e = c[f].call(this, e);
        return e;
      };
    };
    goog.functions.sequence = function(a2) {
      var b2 = arguments, c = b2.length;
      return function() {
        for (var d, e = 0; e < c; e++)
          d = b2[e].apply(this, arguments);
        return d;
      };
    };
    goog.functions.and = function(a2) {
      var b2 = arguments, c = b2.length;
      return function() {
        for (var d = 0; d < c; d++)
          if (!b2[d].apply(this, arguments))
            return false;
        return true;
      };
    };
    goog.functions.or = function(a2) {
      var b2 = arguments, c = b2.length;
      return function() {
        for (var d = 0; d < c; d++)
          if (b2[d].apply(this, arguments))
            return true;
        return false;
      };
    };
    goog.functions.not = function(a2) {
      return function() {
        return !a2.apply(this, arguments);
      };
    };
    goog.functions.create = function(a2, b2) {
      var c = function() {
      };
      c.prototype = a2.prototype;
      c = new c();
      a2.apply(c, Array.prototype.slice.call(arguments, 1));
      return c;
    };
    goog.functions.CACHE_RETURN_VALUE = true;
    goog.functions.cacheReturnValue = function(a2) {
      var b2 = false, c;
      return function() {
        if (!goog.functions.CACHE_RETURN_VALUE)
          return a2();
        b2 || (c = a2(), b2 = true);
        return c;
      };
    };
    goog.functions.once = function(a2) {
      var b2 = a2;
      return function() {
        if (b2) {
          var c = b2;
          b2 = null;
          c();
        }
      };
    };
    goog.functions.debounce = function(a2, b2, c) {
      var d = 0;
      return function(e) {
        goog.global.clearTimeout(d);
        var f = arguments;
        d = goog.global.setTimeout(function() {
          a2.apply(c, f);
        }, b2);
      };
    };
    goog.functions.throttle = function(a2, b2, c) {
      var d = 0, e = false, f = [], g = function() {
        d = 0;
        e && (e = false, k());
      }, k = function() {
        d = goog.global.setTimeout(g, b2);
        var h = f;
        f = [];
        a2.apply(c, h);
      };
      return function(h) {
        f = arguments;
        d ? e = true : k();
      };
    };
    goog.functions.rateLimit = function(a2, b2, c) {
      var d = 0, e = function() {
        d = 0;
      };
      return function(f) {
        d || (d = goog.global.setTimeout(e, b2), a2.apply(c, arguments));
      };
    };
    goog.functions.isFunction = function(a2) {
      return typeof a2 === "function";
    };
    goog.dom.TagName = function() {
    };
    goog.dom.TagName.cast = function(a2) {
      return a2;
    };
    goog.dom.TagName.prototype.toString = function() {
    };
    goog.dom.TagName.A = "A";
    goog.dom.TagName.ABBR = "ABBR";
    goog.dom.TagName.ACRONYM = "ACRONYM";
    goog.dom.TagName.ADDRESS = "ADDRESS";
    goog.dom.TagName.APPLET = "APPLET";
    goog.dom.TagName.AREA = "AREA";
    goog.dom.TagName.ARTICLE = "ARTICLE";
    goog.dom.TagName.ASIDE = "ASIDE";
    goog.dom.TagName.AUDIO = "AUDIO";
    goog.dom.TagName.B = "B";
    goog.dom.TagName.BASE = "BASE";
    goog.dom.TagName.BASEFONT = "BASEFONT";
    goog.dom.TagName.BDI = "BDI";
    goog.dom.TagName.BDO = "BDO";
    goog.dom.TagName.BIG = "BIG";
    goog.dom.TagName.BLOCKQUOTE = "BLOCKQUOTE";
    goog.dom.TagName.BODY = "BODY";
    goog.dom.TagName.BR = "BR";
    goog.dom.TagName.BUTTON = "BUTTON";
    goog.dom.TagName.CANVAS = "CANVAS";
    goog.dom.TagName.CAPTION = "CAPTION";
    goog.dom.TagName.CENTER = "CENTER";
    goog.dom.TagName.CITE = "CITE";
    goog.dom.TagName.CODE = "CODE";
    goog.dom.TagName.COL = "COL";
    goog.dom.TagName.COLGROUP = "COLGROUP";
    goog.dom.TagName.COMMAND = "COMMAND";
    goog.dom.TagName.DATA = "DATA";
    goog.dom.TagName.DATALIST = "DATALIST";
    goog.dom.TagName.DD = "DD";
    goog.dom.TagName.DEL = "DEL";
    goog.dom.TagName.DETAILS = "DETAILS";
    goog.dom.TagName.DFN = "DFN";
    goog.dom.TagName.DIALOG = "DIALOG";
    goog.dom.TagName.DIR = "DIR";
    goog.dom.TagName.DIV = "DIV";
    goog.dom.TagName.DL = "DL";
    goog.dom.TagName.DT = "DT";
    goog.dom.TagName.EM = "EM";
    goog.dom.TagName.EMBED = "EMBED";
    goog.dom.TagName.FIELDSET = "FIELDSET";
    goog.dom.TagName.FIGCAPTION = "FIGCAPTION";
    goog.dom.TagName.FIGURE = "FIGURE";
    goog.dom.TagName.FONT = "FONT";
    goog.dom.TagName.FOOTER = "FOOTER";
    goog.dom.TagName.FORM = "FORM";
    goog.dom.TagName.FRAME = "FRAME";
    goog.dom.TagName.FRAMESET = "FRAMESET";
    goog.dom.TagName.H1 = "H1";
    goog.dom.TagName.H2 = "H2";
    goog.dom.TagName.H3 = "H3";
    goog.dom.TagName.H4 = "H4";
    goog.dom.TagName.H5 = "H5";
    goog.dom.TagName.H6 = "H6";
    goog.dom.TagName.HEAD = "HEAD";
    goog.dom.TagName.HEADER = "HEADER";
    goog.dom.TagName.HGROUP = "HGROUP";
    goog.dom.TagName.HR = "HR";
    goog.dom.TagName.HTML = "HTML";
    goog.dom.TagName.I = "I";
    goog.dom.TagName.IFRAME = "IFRAME";
    goog.dom.TagName.IMG = "IMG";
    goog.dom.TagName.INPUT = "INPUT";
    goog.dom.TagName.INS = "INS";
    goog.dom.TagName.ISINDEX = "ISINDEX";
    goog.dom.TagName.KBD = "KBD";
    goog.dom.TagName.KEYGEN = "KEYGEN";
    goog.dom.TagName.LABEL = "LABEL";
    goog.dom.TagName.LEGEND = "LEGEND";
    goog.dom.TagName.LI = "LI";
    goog.dom.TagName.LINK = "LINK";
    goog.dom.TagName.MAIN = "MAIN";
    goog.dom.TagName.MAP = "MAP";
    goog.dom.TagName.MARK = "MARK";
    goog.dom.TagName.MATH = "MATH";
    goog.dom.TagName.MENU = "MENU";
    goog.dom.TagName.MENUITEM = "MENUITEM";
    goog.dom.TagName.META = "META";
    goog.dom.TagName.METER = "METER";
    goog.dom.TagName.NAV = "NAV";
    goog.dom.TagName.NOFRAMES = "NOFRAMES";
    goog.dom.TagName.NOSCRIPT = "NOSCRIPT";
    goog.dom.TagName.OBJECT = "OBJECT";
    goog.dom.TagName.OL = "OL";
    goog.dom.TagName.OPTGROUP = "OPTGROUP";
    goog.dom.TagName.OPTION = "OPTION";
    goog.dom.TagName.OUTPUT = "OUTPUT";
    goog.dom.TagName.P = "P";
    goog.dom.TagName.PARAM = "PARAM";
    goog.dom.TagName.PICTURE = "PICTURE";
    goog.dom.TagName.PRE = "PRE";
    goog.dom.TagName.PROGRESS = "PROGRESS";
    goog.dom.TagName.Q = "Q";
    goog.dom.TagName.RP = "RP";
    goog.dom.TagName.RT = "RT";
    goog.dom.TagName.RTC = "RTC";
    goog.dom.TagName.RUBY = "RUBY";
    goog.dom.TagName.S = "S";
    goog.dom.TagName.SAMP = "SAMP";
    goog.dom.TagName.SCRIPT = "SCRIPT";
    goog.dom.TagName.SECTION = "SECTION";
    goog.dom.TagName.SELECT = "SELECT";
    goog.dom.TagName.SMALL = "SMALL";
    goog.dom.TagName.SOURCE = "SOURCE";
    goog.dom.TagName.SPAN = "SPAN";
    goog.dom.TagName.STRIKE = "STRIKE";
    goog.dom.TagName.STRONG = "STRONG";
    goog.dom.TagName.STYLE = "STYLE";
    goog.dom.TagName.SUB = "SUB";
    goog.dom.TagName.SUMMARY = "SUMMARY";
    goog.dom.TagName.SUP = "SUP";
    goog.dom.TagName.SVG = "SVG";
    goog.dom.TagName.TABLE = "TABLE";
    goog.dom.TagName.TBODY = "TBODY";
    goog.dom.TagName.TD = "TD";
    goog.dom.TagName.TEMPLATE = "TEMPLATE";
    goog.dom.TagName.TEXTAREA = "TEXTAREA";
    goog.dom.TagName.TFOOT = "TFOOT";
    goog.dom.TagName.TH = "TH";
    goog.dom.TagName.THEAD = "THEAD";
    goog.dom.TagName.TIME = "TIME";
    goog.dom.TagName.TITLE = "TITLE";
    goog.dom.TagName.TR = "TR";
    goog.dom.TagName.TRACK = "TRACK";
    goog.dom.TagName.TT = "TT";
    goog.dom.TagName.U = "U";
    goog.dom.TagName.UL = "UL";
    goog.dom.TagName.VAR = "VAR";
    goog.dom.TagName.VIDEO = "VIDEO";
    goog.dom.TagName.WBR = "WBR";
    goog.object = {};
    function module$contents$goog$object_getKeys(a2) {
      var b2 = [], c = 0, d;
      for (d in a2)
        b2[c++] = d;
      return b2;
    }
    function module$contents$goog$object_containsValue(a2, b2) {
      for (var c in a2)
        if (a2[c] == b2)
          return true;
      return false;
    }
    function module$contents$goog$object_findKey(a2, b2, c) {
      for (var d in a2)
        if (b2.call(c, a2[d], d, a2))
          return d;
    }
    function module$contents$goog$object_unsafeClone(a2) {
      if (!a2 || typeof a2 !== "object")
        return a2;
      if (typeof a2.clone === "function")
        return a2.clone();
      if (typeof Map !== "undefined" && a2 instanceof Map)
        return new Map(a2);
      if (typeof Set !== "undefined" && a2 instanceof Set)
        return new Set(a2);
      var b2 = Array.isArray(a2) ? [] : typeof ArrayBuffer !== "function" || typeof ArrayBuffer.isView !== "function" || !ArrayBuffer.isView(a2) || a2 instanceof DataView ? {} : new a2.constructor(a2.length), c;
      for (c in a2)
        b2[c] = module$contents$goog$object_unsafeClone(a2[c]);
      return b2;
    }
    var module$contents$goog$object_PROTOTYPE_FIELDS = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    function module$contents$goog$object_create(a2) {
      var b2 = arguments.length;
      if (b2 == 1 && Array.isArray(arguments[0]))
        return module$contents$goog$object_create.apply(null, arguments[0]);
      if (b2 % 2)
        throw Error("Uneven number of arguments");
      for (var c = {}, d = 0; d < b2; d += 2)
        c[arguments[d]] = arguments[d + 1];
      return c;
    }
    function module$contents$goog$object_createSet(a2) {
      var b2 = arguments.length;
      if (b2 == 1 && Array.isArray(arguments[0]))
        return module$contents$goog$object_createSet.apply(null, arguments[0]);
      for (var c = {}, d = 0; d < b2; d++)
        c[arguments[d]] = true;
      return c;
    }
    goog.object.add = function(a2, b2, c) {
      if (a2 !== null && b2 in a2)
        throw Error('The object already contains the key "' + b2 + '"');
      a2[b2] = c;
    };
    goog.object.clear = function(a2) {
      for (var b2 in a2)
        delete a2[b2];
    };
    goog.object.clone = function(a2) {
      var b2 = {}, c;
      for (c in a2)
        b2[c] = a2[c];
      return b2;
    };
    goog.object.contains = function(a2, b2) {
      return module$contents$goog$object_containsValue(a2, b2);
    };
    goog.object.containsKey = function(a2, b2) {
      return a2 !== null && b2 in a2;
    };
    goog.object.containsValue = module$contents$goog$object_containsValue;
    goog.object.create = module$contents$goog$object_create;
    goog.object.createImmutableView = function(a2) {
      var b2 = a2;
      Object.isFrozen && !Object.isFrozen(a2) && (b2 = Object.create(a2), Object.freeze(b2));
      return b2;
    };
    goog.object.createSet = module$contents$goog$object_createSet;
    goog.object.equals = function(a2, b2) {
      for (var c in a2)
        if (!(c in b2) || a2[c] !== b2[c])
          return false;
      for (var d in b2)
        if (!(d in a2))
          return false;
      return true;
    };
    goog.object.every = function(a2, b2, c) {
      for (var d in a2)
        if (!b2.call(c, a2[d], d, a2))
          return false;
      return true;
    };
    goog.object.extend = function(a2, b2) {
      for (var c, d, e = 1; e < arguments.length; e++) {
        d = arguments[e];
        for (c in d)
          a2[c] = d[c];
        for (var f = 0; f < module$contents$goog$object_PROTOTYPE_FIELDS.length; f++)
          c = module$contents$goog$object_PROTOTYPE_FIELDS[f], Object.prototype.hasOwnProperty.call(d, c) && (a2[c] = d[c]);
      }
    };
    goog.object.filter = function(a2, b2, c) {
      var d = {}, e;
      for (e in a2)
        b2.call(c, a2[e], e, a2) && (d[e] = a2[e]);
      return d;
    };
    goog.object.findKey = module$contents$goog$object_findKey;
    goog.object.findValue = function(a2, b2, c) {
      return (b2 = module$contents$goog$object_findKey(a2, b2, c)) && a2[b2];
    };
    goog.object.forEach = function(a2, b2, c) {
      for (var d in a2)
        b2.call(c, a2[d], d, a2);
    };
    goog.object.get = function(a2, b2, c) {
      return a2 !== null && b2 in a2 ? a2[b2] : c;
    };
    goog.object.getAllPropertyNames = function(a2, b2, c) {
      if (!a2)
        return [];
      if (!Object.getOwnPropertyNames || !Object.getPrototypeOf)
        return module$contents$goog$object_getKeys(a2);
      for (var d = {}; a2 && (a2 !== Object.prototype || b2) && (a2 !== Function.prototype || c); ) {
        for (var e = Object.getOwnPropertyNames(a2), f = 0; f < e.length; f++)
          d[e[f]] = true;
        a2 = Object.getPrototypeOf(a2);
      }
      return module$contents$goog$object_getKeys(d);
    };
    goog.object.getAnyKey = function(a2) {
      for (var b2 in a2)
        return b2;
    };
    goog.object.getAnyValue = function(a2) {
      for (var b2 in a2)
        return a2[b2];
    };
    goog.object.getCount = function(a2) {
      var b2 = 0, c;
      for (c in a2)
        b2++;
      return b2;
    };
    goog.object.getKeys = module$contents$goog$object_getKeys;
    goog.object.getSuperClass = function(a2) {
      return (a2 = Object.getPrototypeOf(a2.prototype)) && a2.constructor;
    };
    goog.object.getValueByKeys = function(a2, b2) {
      var c = goog.isArrayLike(b2), d = c ? b2 : arguments;
      for (c = c ? 0 : 1; c < d.length; c++) {
        if (a2 == null)
          return;
        a2 = a2[d[c]];
      }
      return a2;
    };
    goog.object.getValues = function(a2) {
      var b2 = [], c = 0, d;
      for (d in a2)
        b2[c++] = a2[d];
      return b2;
    };
    goog.object.isEmpty = function(a2) {
      for (var b2 in a2)
        return false;
      return true;
    };
    goog.object.isImmutableView = function(a2) {
      return !!Object.isFrozen && Object.isFrozen(a2);
    };
    goog.object.map = function(a2, b2, c) {
      var d = {}, e;
      for (e in a2)
        d[e] = b2.call(c, a2[e], e, a2);
      return d;
    };
    goog.object.remove = function(a2, b2) {
      var c;
      (c = b2 in a2) && delete a2[b2];
      return c;
    };
    goog.object.set = function(a2, b2, c) {
      a2[b2] = c;
    };
    goog.object.setIfUndefined = function(a2, b2, c) {
      return b2 in a2 ? a2[b2] : a2[b2] = c;
    };
    goog.object.setWithReturnValueIfNotSet = function(a2, b2, c) {
      if (b2 in a2)
        return a2[b2];
      c = c();
      return a2[b2] = c;
    };
    goog.object.some = function(a2, b2, c) {
      for (var d in a2)
        if (b2.call(c, a2[d], d, a2))
          return true;
      return false;
    };
    goog.object.transpose = function(a2) {
      var b2 = {}, c;
      for (c in a2)
        b2[a2[c]] = c;
      return b2;
    };
    goog.object.unsafeClone = module$contents$goog$object_unsafeClone;
    goog.dom.tags = {};
    goog.dom.tags.VOID_TAGS_ = { area: true, base: true, br: true, col: true, command: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true };
    goog.dom.tags.isVoidTag = function(a2) {
      return goog.dom.tags.VOID_TAGS_[a2] === true;
    };
    goog.html = {};
    goog.html.trustedtypes = {};
    goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse = function() {
      if (!goog.TRUSTED_TYPES_POLICY_NAME)
        return null;
      goog.html.trustedtypes.cachedPolicy_ === void 0 && (goog.html.trustedtypes.cachedPolicy_ = goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html"));
      return goog.html.trustedtypes.cachedPolicy_;
    };
    goog.string.TypedString = function() {
    };
    goog.string.Const = function(a2, b2) {
      this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a2 === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b2 || "";
      this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
    };
    goog.string.Const.prototype.implementsGoogStringTypedString = true;
    goog.string.Const.prototype.getTypedStringValue = function() {
      return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
    };
    goog.DEBUG && (goog.string.Const.prototype.toString = function() {
      return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
    });
    goog.string.Const.unwrap = function(a2) {
      if (a2 instanceof goog.string.Const && a2.constructor === goog.string.Const && a2.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_)
        return a2.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
      goog.asserts.fail("expected object of type Const, got '" + a2 + "'");
      return "type_error:Const";
    };
    goog.string.Const.from = function(a2) {
      return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a2);
    };
    goog.string.Const.TYPE_MARKER_ = {};
    goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.string.Const.EMPTY = goog.string.Const.from("");
    var module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE = {};
    var module$contents$goog$html$SafeScript_SafeScript = function(a2, b2) {
      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = b2 === module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE ? a2 : "";
      this.implementsGoogStringTypedString = true;
    };
    module$contents$goog$html$SafeScript_SafeScript.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      return a2.length === 0 ? module$contents$goog$html$SafeScript_SafeScript.EMPTY : module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a2);
    };
    module$contents$goog$html$SafeScript_SafeScript.fromJson = function(a2) {
      return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a2));
    };
    module$contents$goog$html$SafeScript_SafeScript.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
    };
    module$contents$goog$html$SafeScript_SafeScript.unwrap = function(a2) {
      return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a2).toString();
    };
    module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeScript_SafeScript && a2.constructor === module$contents$goog$html$SafeScript_SafeScript)
        return a2.privateDoNotAccessOrElseSafeScriptWrappedValue_;
      (0, goog.asserts.fail)("expected object of type SafeScript, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeScript";
    };
    module$contents$goog$html$SafeScript_SafeScript.stringify_ = function(a2) {
      return JSON.stringify(a2).replace(/</g, "\\x3c");
    };
    module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(a2) {
      var b2 = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
      a2 = b2 ? b2.createScript(a2) : a2;
      return new module$contents$goog$html$SafeScript_SafeScript(a2, module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE);
    };
    module$contents$goog$html$SafeScript_SafeScript.prototype.toString = function() {
      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
    };
    module$contents$goog$html$SafeScript_SafeScript.EMPTY = module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
    goog.html.SafeScript = module$contents$goog$html$SafeScript_SafeScript;
    goog.fs = {};
    goog.fs.url = {};
    goog.fs.url.createObjectUrl = function(a2) {
      return goog.fs.url.getUrlObject_().createObjectURL(a2);
    };
    goog.fs.url.revokeObjectUrl = function(a2) {
      goog.fs.url.getUrlObject_().revokeObjectURL(a2);
    };
    goog.fs.url.UrlObject_ = function() {
    };
    goog.fs.url.UrlObject_.prototype.createObjectURL = function() {
    };
    goog.fs.url.UrlObject_.prototype.revokeObjectURL = function() {
    };
    goog.fs.url.getUrlObject_ = function() {
      var a2 = goog.fs.url.findUrlObject_();
      if (a2 != null)
        return a2;
      throw Error("This browser doesn't seem to support blob URLs");
    };
    goog.fs.url.findUrlObject_ = function() {
      return goog.global.URL !== void 0 && goog.global.URL.createObjectURL !== void 0 ? goog.global.URL : goog.global.createObjectURL !== void 0 ? goog.global : null;
    };
    goog.fs.url.browserSupportsObjectUrls = function() {
      return goog.fs.url.findUrlObject_() != null;
    };
    goog.fs.blob = {};
    goog.fs.blob.getBlob = function(a2) {
      var b2 = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
      if (b2 !== void 0) {
        b2 = new b2();
        for (var c = 0; c < arguments.length; c++)
          b2.append(arguments[c]);
        return b2.getBlob();
      }
      return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));
    };
    goog.fs.blob.getBlobWithProperties = function(a2, b2, c) {
      var d = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
      if (d !== void 0) {
        d = new d();
        for (var e = 0; e < a2.length; e++)
          d.append(a2[e], c);
        return d.getBlob(b2);
      }
      if (goog.global.Blob !== void 0)
        return d = {}, b2 && (d.type = b2), c && (d.endings = c), new Blob(a2, d);
      throw Error("This browser doesn't seem to support creating Blobs");
    };
    goog.i18n = {};
    goog.i18n.bidi = {};
    goog.i18n.bidi.FORCE_RTL = false;
    goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || 3 <= goog.LOCALE.length && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") || 7 <= goog.LOCALE.length && (goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") && (goog.LOCALE.substring(3, 7).toLowerCase() == "adlm" || goog.LOCALE.substring(3, 7).toLowerCase() == "arab" || goog.LOCALE.substring(3, 7).toLowerCase() == "hebr" || goog.LOCALE.substring(3, 7).toLowerCase() == "nkoo" || goog.LOCALE.substring(3, 7).toLowerCase() == "rohg" || goog.LOCALE.substring(3, 7).toLowerCase() == "thaa") || 8 <= goog.LOCALE.length && (goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") && (goog.LOCALE.substring(4, 8).toLowerCase() == "adlm" || goog.LOCALE.substring(4, 8).toLowerCase() == "arab" || goog.LOCALE.substring(4, 8).toLowerCase() == "hebr" || goog.LOCALE.substring(4, 8).toLowerCase() == "nkoo" || goog.LOCALE.substring(4, 8).toLowerCase() == "rohg" || goog.LOCALE.substring(4, 8).toLowerCase() == "thaa");
    goog.i18n.bidi.Format = { LRE: "\u202A", RLE: "\u202B", PDF: "\u202C", LRM: "\u200E", RLM: "\u200F" };
    goog.i18n.bidi.Dir = { LTR: 1, RTL: -1, NEUTRAL: 0 };
    goog.i18n.bidi.RIGHT = "right";
    goog.i18n.bidi.LEFT = "left";
    goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
    goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
    goog.i18n.bidi.toDir = function(a2, b2) {
      return typeof a2 == "number" ? 0 < a2 ? goog.i18n.bidi.Dir.LTR : 0 > a2 ? goog.i18n.bidi.Dir.RTL : b2 ? null : goog.i18n.bidi.Dir.NEUTRAL : a2 == null ? null : a2 ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    };
    goog.i18n.bidi.ltrChars_ = "A-Za-z\xC0-\xD6\xD8-\xF6\xF8-\u02B8\u0300-\u0590\u0900-\u1FFF\u200E\u2C00-\uD801\uD804-\uD839\uD83C-\uDBFF\uF900-\uFB1C\uFE00-\uFE6F\uFEFD-\uFFFF";
    goog.i18n.bidi.rtlChars_ = "\u0591-\u06EF\u06FA-\u08FF\u200F\uD802-\uD803\uD83A-\uD83B\uFB1D-\uFDFF\uFE70-\uFEFC";
    goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
    goog.i18n.bidi.stripHtmlIfNeeded_ = function(a2, b2) {
      return b2 ? a2.replace(goog.i18n.bidi.htmlSkipReg_, "") : a2;
    };
    goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.hasAnyRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
    goog.i18n.bidi.hasAnyLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.isRtlChar = function(a2) {
      return goog.i18n.bidi.rtlRe_.test(a2);
    };
    goog.i18n.bidi.isLtrChar = function(a2) {
      return goog.i18n.bidi.ltrRe_.test(a2);
    };
    goog.i18n.bidi.isNeutralChar = function(a2) {
      return !goog.i18n.bidi.isLtrChar(a2) && !goog.i18n.bidi.isRtlChar(a2);
    };
    goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.startsWithRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
    goog.i18n.bidi.startsWithLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
    goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
    goog.i18n.bidi.isNeutralText = function(a2, b2) {
      a2 = goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2);
      return goog.i18n.bidi.isRequiredLtrRe_.test(a2) || !goog.i18n.bidi.hasAnyLtr(a2) && !goog.i18n.bidi.hasAnyRtl(a2);
    };
    goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
    goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
    goog.i18n.bidi.endsWithLtr = function(a2, b2) {
      return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
    goog.i18n.bidi.endsWithRtl = function(a2, b2) {
      return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2));
    };
    goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
    goog.i18n.bidi.rtlLocalesRe_ = RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
    goog.i18n.bidi.isRtlLanguage = function(a2) {
      return goog.i18n.bidi.rtlLocalesRe_.test(a2);
    };
    goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
    goog.i18n.bidi.guardBracketInText = function(a2, b2) {
      b2 = (b2 === void 0 ? goog.i18n.bidi.hasAnyRtl(a2) : b2) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
      return a2.replace(goog.i18n.bidi.bracketGuardTextRe_, b2 + "$&" + b2);
    };
    goog.i18n.bidi.enforceRtlInHtml = function(a2) {
      return a2.charAt(0) == "<" ? a2.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + a2 + "</span>";
    };
    goog.i18n.bidi.enforceRtlInText = function(a2) {
      return goog.i18n.bidi.Format.RLE + a2 + goog.i18n.bidi.Format.PDF;
    };
    goog.i18n.bidi.enforceLtrInHtml = function(a2) {
      return a2.charAt(0) == "<" ? a2.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + a2 + "</span>";
    };
    goog.i18n.bidi.enforceLtrInText = function(a2) {
      return goog.i18n.bidi.Format.LRE + a2 + goog.i18n.bidi.Format.PDF;
    };
    goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
    goog.i18n.bidi.leftRe_ = /left/gi;
    goog.i18n.bidi.rightRe_ = /right/gi;
    goog.i18n.bidi.tempRe_ = /%%%%/g;
    goog.i18n.bidi.mirrorCSS = function(a2) {
      return a2.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
    };
    goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
    goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
    goog.i18n.bidi.normalizeHebrewQuote = function(a2) {
      return a2.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05F4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05F3");
    };
    goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
    goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
    goog.i18n.bidi.rtlDetectionThreshold_ = 0.4;
    goog.i18n.bidi.estimateDirection = function(a2, b2) {
      var c = 0, d = 0, e = false;
      a2 = goog.i18n.bidi.stripHtmlIfNeeded_(a2, b2).split(goog.i18n.bidi.wordSeparatorRe_);
      for (b2 = 0; b2 < a2.length; b2++) {
        var f = a2[b2];
        goog.i18n.bidi.startsWithRtl(f) ? (c++, d++) : goog.i18n.bidi.isRequiredLtrRe_.test(f) ? e = true : goog.i18n.bidi.hasAnyLtr(f) ? d++ : goog.i18n.bidi.hasNumeralsRe_.test(f) && (e = true);
      }
      return d == 0 ? e ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c / d > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    };
    goog.i18n.bidi.detectRtlDirectionality = function(a2, b2) {
      return goog.i18n.bidi.estimateDirection(a2, b2) == goog.i18n.bidi.Dir.RTL;
    };
    goog.i18n.bidi.setElementDirAndAlign = function(a2, b2) {
      a2 && (b2 = goog.i18n.bidi.toDir(b2)) && (a2.style.textAlign = b2 == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a2.dir = b2 == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
    };
    goog.i18n.bidi.setElementDirByTextDirectionality = function(a2, b2) {
      switch (goog.i18n.bidi.estimateDirection(b2)) {
        case goog.i18n.bidi.Dir.LTR:
          a2.dir !== "ltr" && (a2.dir = "ltr");
          break;
        case goog.i18n.bidi.Dir.RTL:
          a2.dir !== "rtl" && (a2.dir = "rtl");
          break;
        default:
          a2.removeAttribute("dir");
      }
    };
    goog.i18n.bidi.DirectionalString = function() {
    };
    goog.html.TrustedResourceUrl = function(a2, b2) {
      this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = b2 === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? a2 : "";
    };
    goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
    goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
    };
    goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
    goog.html.TrustedResourceUrl.prototype.getDirection = function() {
      return goog.i18n.bidi.Dir.LTR;
    };
    goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(a2, b2) {
      var c = goog.html.TrustedResourceUrl.unwrap(this);
      c = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);
      var d = c[3] || "";
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", c[2] || "", a2) + goog.html.TrustedResourceUrl.stringifyParams_("#", d, b2));
    };
    goog.html.TrustedResourceUrl.prototype.toString = function() {
      return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "";
    };
    goog.html.TrustedResourceUrl.unwrap = function(a2) {
      return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a2).toString();
    };
    goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(a2) {
      if (a2 instanceof goog.html.TrustedResourceUrl && a2.constructor === goog.html.TrustedResourceUrl)
        return a2.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
      goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:TrustedResourceUrl";
    };
    goog.html.TrustedResourceUrl.format = function(a2, b2) {
      var c = goog.string.Const.unwrap(a2);
      if (!goog.html.TrustedResourceUrl.BASE_URL_.test(c))
        throw Error("Invalid TrustedResourceUrl format: " + c);
      a2 = c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(d, e) {
        if (!Object.prototype.hasOwnProperty.call(b2, e))
          throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b2));
        d = b2[e];
        return d instanceof goog.string.Const ? goog.string.Const.unwrap(d) : encodeURIComponent(String(d));
      });
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
    goog.html.TrustedResourceUrl.BASE_URL_ = RegExp("^((https:)?//[0-9a-z.:[\\]-]+/|/[^/\\\\]|[^:/\\\\%]+/|[^:/\\\\%]*[?#]|about:blank#)", "i");
    goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
    goog.html.TrustedResourceUrl.formatWithParams = function(a2, b2, c, d) {
      return goog.html.TrustedResourceUrl.format(a2, b2).cloneWithParams(c, d);
    };
    goog.html.TrustedResourceUrl.fromConstant = function(a2) {
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a2));
    };
    goog.html.TrustedResourceUrl.fromConstants = function(a2) {
      for (var b2 = "", c = 0; c < a2.length; c++)
        b2 += goog.string.Const.unwrap(a2[c]);
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.TrustedResourceUrl.fromSafeScript = function(a2) {
      a2 = goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a2)], "text/javascript");
      a2 = goog.fs.url.createObjectUrl(a2);
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(a2) {
      var b2 = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
      a2 = b2 ? b2.createScriptURL(a2) : a2;
      return new goog.html.TrustedResourceUrl(a2, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
    };
    goog.html.TrustedResourceUrl.stringifyParams_ = function(a2, b2, c) {
      if (c == null)
        return b2;
      if (typeof c === "string")
        return c ? a2 + encodeURIComponent(c) : "";
      for (var d in c)
        if (Object.prototype.hasOwnProperty.call(c, d)) {
          var e = c[d];
          e = Array.isArray(e) ? e : [e];
          for (var f = 0; f < e.length; f++) {
            var g = e[f];
            g != null && (b2 || (b2 = a2), b2 += (b2.length > a2.length ? "&" : "") + encodeURIComponent(d) + "=" + encodeURIComponent(String(g)));
          }
        }
      return b2;
    };
    goog.html.SafeUrl = function(a2, b2) {
      this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = b2 === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? a2 : "";
    };
    goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
    goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
    goog.html.SafeUrl.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
    };
    goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
    goog.html.SafeUrl.prototype.getDirection = function() {
      return goog.i18n.bidi.Dir.LTR;
    };
    goog.html.SafeUrl.prototype.toString = function() {
      return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
    };
    goog.html.SafeUrl.unwrap = function(a2) {
      if (a2 instanceof goog.html.SafeUrl && a2.constructor === goog.html.SafeUrl)
        return a2.privateDoNotAccessOrElseSafeUrlWrappedValue_;
      goog.asserts.fail("expected object of type SafeUrl, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeUrl";
    };
    goog.html.SafeUrl.fromConstant = function(a2) {
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a2));
    };
    goog.html.SAFE_MIME_TYPE_PATTERN_ = RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+=(?:\\w+|"[\\w;,= ]+"))*$', "i");
    goog.html.SafeUrl.isSafeMimeType = function(a2) {
      return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a2);
    };
    goog.html.SafeUrl.fromBlob = function(a2) {
      a2 = goog.html.SafeUrl.isSafeMimeType(a2.type) ? goog.fs.url.createObjectUrl(a2) : goog.html.SafeUrl.INNOCUOUS_STRING;
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.revokeObjectUrl = function(a2) {
      a2 = a2.getTypedStringValue();
      a2 !== goog.html.SafeUrl.INNOCUOUS_STRING && goog.fs.url.revokeObjectUrl(a2);
    };
    goog.html.SafeUrl.fromMediaSource = function(a2) {
      goog.asserts.assert("MediaSource" in goog.global, "No support for MediaSource");
      a2 = a2 instanceof MediaSource ? goog.fs.url.createObjectUrl(a2) : goog.html.SafeUrl.INNOCUOUS_STRING;
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\/]+=*$/i;
    goog.html.SafeUrl.tryFromDataUrl = function(a2) {
      a2 = String(a2);
      a2 = a2.replace(/(%0A|%0D)/g, "");
      var b2 = a2.match(goog.html.DATA_URL_PATTERN_);
      return b2 && goog.html.SafeUrl.isSafeMimeType(b2[1]) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2) : null;
    };
    goog.html.SafeUrl.fromDataUrl = function(a2) {
      return goog.html.SafeUrl.tryFromDataUrl(a2) || goog.html.SafeUrl.INNOCUOUS_URL;
    };
    goog.html.SafeUrl.fromTelUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "tel:") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SIP_URL_PATTERN_ = RegExp("^sip[s]?:[+a-z0-9_.!$%&'*\\/=^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$", "i");
    goog.html.SafeUrl.fromSipUrl = function(a2) {
      goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a2)) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromFacebookMessengerUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "fb-messenger://share") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromWhatsAppUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "whatsapp://send") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.fromSmsUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(a2) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.isSmsUrlBodyValid_ = function(a2) {
      var b2 = a2.indexOf("#");
      0 < b2 && (a2 = a2.substring(0, b2));
      b2 = a2.match(/[?&]body=/gi);
      if (!b2)
        return true;
      if (1 < b2.length)
        return false;
      a2 = a2.match(/[?&]body=([^&]*)/)[1];
      if (!a2)
        return true;
      try {
        decodeURIComponent(a2);
      } catch (c) {
        return false;
      }
      return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a2);
    };
    goog.html.SafeUrl.fromSshUrl = function(a2) {
      goog.string.internal.caseInsensitiveStartsWith(a2, "ssh://") || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(a2, b2) {
      return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, a2, b2);
    };
    goog.html.SafeUrl.sanitizeExtensionUrl_ = function(a2, b2, c) {
      (a2 = a2.exec(b2)) ? (a2 = a2[1], (c instanceof goog.string.Const ? [goog.string.Const.unwrap(c)] : c.map(function(d) {
        return goog.string.Const.unwrap(d);
      })).indexOf(a2) == -1 && (b2 = goog.html.SafeUrl.INNOCUOUS_STRING)) : b2 = goog.html.SafeUrl.INNOCUOUS_STRING;
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.SafeUrl.fromTrustedResourceUrl = function(a2) {
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a2));
    };
    goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
    goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
    goog.html.SafeUrl.trySanitize = function(a2) {
      if (a2 instanceof goog.html.SafeUrl)
        return a2;
      a2 = typeof a2 == "object" && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2);
      return goog.html.SAFE_URL_PATTERN_.test(a2) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2) : goog.html.SafeUrl.tryFromDataUrl(a2);
    };
    goog.html.SafeUrl.sanitize = function(a2) {
      return goog.html.SafeUrl.trySanitize(a2) || goog.html.SafeUrl.INNOCUOUS_URL;
    };
    goog.html.SafeUrl.sanitizeAssertUnchanged = function(a2, b2) {
      if (a2 instanceof goog.html.SafeUrl)
        return a2;
      a2 = typeof a2 == "object" && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2);
      if (b2 && /^data:/i.test(a2) && (b2 = goog.html.SafeUrl.fromDataUrl(a2), b2.getTypedStringValue() == a2))
        return b2;
      goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a2), "%s does not match the safe URL pattern", a2) || (a2 = goog.html.SafeUrl.INNOCUOUS_STRING);
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a2);
    };
    goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new goog.html.SafeUrl(a2, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
    };
    goog.html.SafeUrl.INNOCUOUS_URL = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);
    goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
    var module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE = {};
    var module$contents$goog$html$SafeStyle_SafeStyle = function(a2, b2) {
      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = b2 === module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE ? a2 : "";
      this.implementsGoogStringTypedString = true;
    };
    module$contents$goog$html$SafeStyle_SafeStyle.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      if (a2.length === 0)
        return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
      (0, goog.asserts.assert)((0, goog.string.internal.endsWith)(a2, ";"), "Last character of style string is not ';': " + a2);
      (0, goog.asserts.assert)((0, goog.string.internal.contains)(a2, ":"), `Style string must contain at least one ':', to specify a "name: value" pair: ` + a2);
      return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a2);
    };
    module$contents$goog$html$SafeStyle_SafeStyle.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
    };
    module$contents$goog$html$SafeStyle_SafeStyle.prototype.toString = function() {
      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();
    };
    module$contents$goog$html$SafeStyle_SafeStyle.unwrap = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeStyle_SafeStyle && a2.constructor === module$contents$goog$html$SafeStyle_SafeStyle)
        return a2.privateDoNotAccessOrElseSafeStyleWrappedValue_;
      (0, goog.asserts.fail)("expected object of type SafeStyle, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeStyle";
    };
    module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new module$contents$goog$html$SafeStyle_SafeStyle(a2, module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE);
    };
    module$contents$goog$html$SafeStyle_SafeStyle.create = function(a2) {
      var b2 = "", c;
      for (c in a2)
        if (Object.prototype.hasOwnProperty.call(a2, c)) {
          if (!/^[-_a-zA-Z0-9]+$/.test(c))
            throw Error("Name allows only [-_a-zA-Z0-9], got: " + c);
          var d = a2[c];
          d != null && (d = Array.isArray(d) ? d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(" ") : module$contents$goog$html$SafeStyle_sanitizePropertyValue(d), b2 += c + ":" + d + ";");
        }
      return b2 ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
    };
    module$contents$goog$html$SafeStyle_SafeStyle.concat = function(a2) {
      var b2 = "", c = function(d) {
        Array.isArray(d) ? d.forEach(c) : b2 += module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d);
      };
      Array.prototype.forEach.call(arguments, c);
      return b2 ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
    };
    module$contents$goog$html$SafeStyle_SafeStyle.EMPTY = module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
    module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING = "zClosurez";
    function module$contents$goog$html$SafeStyle_sanitizePropertyValue(a2) {
      if (a2 instanceof goog.html.SafeUrl)
        return 'url("' + goog.html.SafeUrl.unwrap(a2).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
      a2 = a2 instanceof goog.string.Const ? goog.string.Const.unwrap(a2) : module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a2));
      if (/[{;}]/.test(a2))
        throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [a2]);
      return a2;
    }
    function module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a2) {
      var b2 = a2.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, "$1").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, "$1").replace(module$contents$goog$html$SafeStyle_URL_RE, "url");
      if (module$contents$goog$html$SafeStyle_VALUE_RE.test(b2)) {
        if (module$contents$goog$html$SafeStyle_COMMENT_RE.test(a2))
          return (0, goog.asserts.fail)("String value disallows comments, got: " + a2), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
        for (var c = b2 = true, d = 0; d < a2.length; d++) {
          var e = a2.charAt(d);
          e == "'" && c ? b2 = !b2 : e == '"' && b2 && (c = !c);
        }
        if (!b2 || !c)
          return (0, goog.asserts.fail)("String value requires balanced quotes, got: " + a2), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
        if (!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a2))
          return (0, goog.asserts.fail)("String value requires balanced square brackets and one identifier per pair of brackets, got: " + a2), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
      } else
        return (0, goog.asserts.fail)(`String value allows only [-,."'%_!#/ a-zA-Z0-9\\[\\]] and simple functions, got: ` + a2), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
      return module$contents$goog$html$SafeStyle_sanitizeUrl(a2);
    }
    function module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a2) {
      for (var b2 = true, c = /^[-_a-zA-Z0-9]$/, d = 0; d < a2.length; d++) {
        var e = a2.charAt(d);
        if (e == "]") {
          if (b2)
            return false;
          b2 = true;
        } else if (e == "[") {
          if (!b2)
            return false;
          b2 = false;
        } else if (!b2 && !c.test(e))
          return false;
      }
      return b2;
    }
    var module$contents$goog$html$SafeStyle_VALUE_RE = RegExp(`^[-,."'%_!#/ a-zA-Z0-9\\[\\]]+$`);
    var module$contents$goog$html$SafeStyle_URL_RE = RegExp(`\\b(url\\([ 	
]*)('[ -&(-\\[\\]-~]*'|"[ !#-\\[\\]-~]*"|[!#-&*-\\[\\]-~]*)([ 	
]*\\))`, "g");
    var module$contents$goog$html$SafeStyle_FUNCTIONS_RE = RegExp("\\b(calc|cubic-bezier|fit-content|hsl|hsla|linear-gradient|matrix|minmax|repeat|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?|var)\\([-+*/0-9a-zA-Z.%#\\[\\], ]+\\)", "g");
    var module$contents$goog$html$SafeStyle_COMMENT_RE = /\/\*/;
    function module$contents$goog$html$SafeStyle_sanitizeUrl(a2) {
      return a2.replace(module$contents$goog$html$SafeStyle_URL_RE, function(b2, c, d, e) {
        var f = "";
        d = d.replace(/^(['"])(.*)\1$/, function(g, k, h) {
          f = k;
          return h;
        });
        b2 = goog.html.SafeUrl.sanitize(d).getTypedStringValue();
        return c + f + b2 + f + e;
      });
    }
    goog.html.SafeStyle = module$contents$goog$html$SafeStyle_SafeStyle;
    var module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE = {};
    var module$contents$goog$html$SafeStyleSheet_SafeStyleSheet = function(a2, b2) {
      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = b2 === module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE ? a2 : "";
      this.implementsGoogStringTypedString = true;
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createRule = function(a2, b2) {
      if ((0, goog.string.internal.contains)(a2, "<"))
        throw Error("Selector does not allow '<', got: " + a2);
      var c = a2.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
      if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))
        throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + a2);
      if (!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))
        throw Error("() and [] in selector must be balanced, got: " + a2);
      b2 instanceof module$contents$goog$html$SafeStyle_SafeStyle || (b2 = module$contents$goog$html$SafeStyle_SafeStyle.create(b2));
      a2 = a2 + "{" + module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b2).replace(/</g, "\\3C ") + "}";
      return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a2);
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_ = function(a2) {
      for (var b2 = { "(": ")", "[": "]" }, c = [], d = 0; d < a2.length; d++) {
        var e = a2[d];
        if (b2[e])
          c.push(b2[e]);
        else if (module$contents$goog$object_containsValue(b2, e) && c.pop() != e)
          return false;
      }
      return c.length == 0;
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.concat = function(a2) {
      var b2 = "", c = function(d) {
        Array.isArray(d) ? d.forEach(c) : b2 += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d);
      };
      Array.prototype.forEach.call(arguments, c);
      return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b2);
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.fromConstant = function(a2) {
      a2 = goog.string.Const.unwrap(a2);
      if (a2.length === 0)
        return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;
      (0, goog.asserts.assert)(!(0, goog.string.internal.contains)(a2, "<"), "Forbidden '<' character in style sheet string: " + a2);
      return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a2);
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeStyleSheet_SafeStyleSheet && a2.constructor === module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)
        return a2.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
      (0, goog.asserts.fail)("expected object of type SafeStyleSheet, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeStyleSheet";
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(a2) {
      return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a2, module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE);
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.toString = function() {
      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();
    };
    module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
    goog.html.SafeStyleSheet = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;
    var module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE = {};
    var module$contents$goog$html$SafeHtml_SafeHtml = function(a2, b2, c) {
      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = c === module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE ? a2 : "";
      this.dir_ = b2;
      this.implementsGoogStringTypedString = this.implementsGoogI18nBidiDirectionalString = true;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.prototype.getDirection = function() {
      return this.dir_;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.prototype.getTypedStringValue = function() {
      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
    };
    module$contents$goog$html$SafeHtml_SafeHtml.prototype.toString = function() {
      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
    };
    module$contents$goog$html$SafeHtml_SafeHtml.unwrap = function(a2) {
      return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a2).toString();
    };
    module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeHtml_SafeHtml && a2.constructor === module$contents$goog$html$SafeHtml_SafeHtml)
        return a2.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
      goog.asserts.fail("expected object of type SafeHtml, got '" + a2 + "' of type " + goog.typeOf(a2));
      return "type_error:SafeHtml";
    };
    module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeHtml_SafeHtml)
        return a2;
      var b2 = typeof a2 == "object", c = null;
      b2 && a2.implementsGoogI18nBidiDirectionalString && (c = a2.getDirection());
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(b2 && a2.implementsGoogStringTypedString ? a2.getTypedStringValue() : String(a2)), c);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.htmlEscapePreservingNewlines = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeHtml_SafeHtml)
        return a2;
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a2);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a2)), a2.getDirection());
    };
    module$contents$goog$html$SafeHtml_SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(a2) {
      if (a2 instanceof module$contents$goog$html$SafeHtml_SafeHtml)
        return a2;
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a2);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a2)), a2.getDirection());
    };
    module$contents$goog$html$SafeHtml_SafeHtml.comment = function(a2) {
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!--" + goog.string.internal.htmlEscape(a2) + "-->", null);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.create = function(a2, b2, c) {
      module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a2));
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a2), b2, c);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName = function(a2) {
      if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a2))
        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name <" + a2 + ">." : "");
      if (a2.toUpperCase() in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES)
        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name <" + a2 + "> is not allowed for SafeHtml." : "");
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createIframe = function(a2, b2, c, d) {
      a2 && goog.html.TrustedResourceUrl.unwrap(a2);
      var e = {};
      e.src = a2 || null;
      e.srcdoc = b2 && module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b2);
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e, { sandbox: "" }, c);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a2, d);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createSandboxIframe = function(a2, b2, c, d) {
      if (!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe())
        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
      var e = {};
      e.src = a2 ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a2)) : null;
      e.srcdoc = b2 || null;
      e.sandbox = "";
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e, {}, c);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a2, d);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe = function() {
      return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createScriptSrc = function(a2, b2) {
      goog.html.TrustedResourceUrl.unwrap(a2);
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({ src: a2 }, {}, b2);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", a2);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createScript = function(a2, b2) {
      for (var c in b2)
        if (Object.prototype.hasOwnProperty.call(b2, c)) {
          var d = c.toLowerCase();
          if (d == "language" || d == "src" || d == "text" || d == "type")
            throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + d + '" attribute' : "");
        }
      c = "";
      a2 = module$contents$goog$array_concat(a2);
      for (d = 0; d < a2.length; d++)
        c += module$contents$goog$html$SafeScript_SafeScript.unwrap(a2[d]);
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", b2, a2);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createStyle = function(a2, b2) {
      b2 = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({ type: "text/css" }, {}, b2);
      var c = "";
      a2 = module$contents$goog$array_concat(a2);
      for (var d = 0; d < a2.length; d++)
        c += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a2[d]);
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", b2, a2);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createMetaRefresh = function(a2, b2) {
      a2 = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a2));
      (module$contents$goog$labs$userAgent$browser_matchIE() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml()) && goog.string.internal.contains(a2, ";") && (a2 = "'" + a2.replace(/'/g, "%27") + "'");
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", { "http-equiv": "refresh", content: (b2 || 0) + "; url=" + a2 });
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createWithDir = function(a2, b2, c, d) {
      b2 = module$contents$goog$html$SafeHtml_SafeHtml.create(b2, c, d);
      b2.dir_ = a2;
      return b2;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.join = function(a2, b2) {
      a2 = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a2);
      var c = a2.getDirection(), d = [], e = function(f) {
        Array.isArray(f) ? f.forEach(e) : (f = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(f), d.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(f)), f = f.getDirection(), c == goog.i18n.bidi.Dir.NEUTRAL ? c = f : f != goog.i18n.bidi.Dir.NEUTRAL && c != f && (c = null));
      };
      b2.forEach(e);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a2)), c);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.concat = function(a2) {
      return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
    };
    module$contents$goog$html$SafeHtml_SafeHtml.concatWithDir = function(a2, b2) {
      var c = module$contents$goog$html$SafeHtml_SafeHtml.concat(Array.prototype.slice.call(arguments, 1));
      c.dir_ = a2;
      return c;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(a2, b2) {
      var c = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
      a2 = c ? c.createHTML(a2) : a2;
      return new module$contents$goog$html$SafeHtml_SafeHtml(a2, b2, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(a2, b2, c) {
      var d = null;
      var e = "<" + a2 + module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a2, b2);
      c == null ? c = [] : Array.isArray(c) || (c = [c]);
      goog.dom.tags.isVoidTag(a2.toLowerCase()) ? (goog.asserts.assert(!c.length, "Void tag <" + a2 + "> does not allow content."), e += ">") : (d = module$contents$goog$html$SafeHtml_SafeHtml.concat(c), e += ">" + module$contents$goog$html$SafeHtml_SafeHtml.unwrap(d) + "</" + a2 + ">", d = d.getDirection());
      (a2 = b2 && b2.dir) && (d = /^(ltr|rtl|auto)$/i.test(a2) ? goog.i18n.bidi.Dir.NEUTRAL : null);
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e, d);
    };
    module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes = function(a2, b2) {
      var c = "";
      if (b2) {
        for (var d in b2)
          if (Object.prototype.hasOwnProperty.call(b2, d)) {
            if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d))
              throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + d + '".' : "");
            var e = b2[d];
            if (e != null) {
              var f = a2;
              var g = d;
              if (e instanceof goog.string.Const)
                e = goog.string.Const.unwrap(e);
              else if (g.toLowerCase() == "style")
                if (module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
                  if (!goog.isObject(e))
                    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof e + " given: " + e : "");
                  e instanceof module$contents$goog$html$SafeStyle_SafeStyle || (e = module$contents$goog$html$SafeStyle_SafeStyle.create(e));
                  e = module$contents$goog$html$SafeStyle_SafeStyle.unwrap(e);
                } else
                  throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
              else {
                if (/^on/i.test(g))
                  throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + g + '" requires goog.string.Const value, "' + e + '" given.' : "");
                if (g.toLowerCase() in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES)
                  if (e instanceof goog.html.TrustedResourceUrl)
                    e = goog.html.TrustedResourceUrl.unwrap(e);
                  else if (e instanceof goog.html.SafeUrl)
                    e = goog.html.SafeUrl.unwrap(e);
                  else if (typeof e === "string")
                    e = goog.html.SafeUrl.sanitize(e).getTypedStringValue();
                  else
                    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + g + '" on tag "' + f + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + e + '" given.' : "");
              }
              e.implementsGoogStringTypedString && (e = e.getTypedStringValue());
              goog.asserts.assert(typeof e === "string" || typeof e === "number", "String or number value expected, got " + typeof e + " with value: " + e);
              g = g + '="' + goog.string.internal.htmlEscape(String(e)) + '"';
              c += " " + g;
            }
          }
      }
      return c;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes = function(a2, b2, c) {
      var d = {};
      for (g in a2)
        Object.prototype.hasOwnProperty.call(a2, g) && (goog.asserts.assert(g.toLowerCase() == g, "Must be lower case"), d[g] = a2[g]);
      for (var e in b2)
        Object.prototype.hasOwnProperty.call(b2, e) && (goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = b2[e]);
      if (c) {
        for (var f in c)
          if (Object.prototype.hasOwnProperty.call(c, f)) {
            var g = f.toLowerCase();
            if (g in a2)
              throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + g + '" attribute, got "' + f + '" with value "' + c[f] + '"' : "");
            g in b2 && delete d[g];
            d[f] = c[f];
          }
      }
      return d;
    };
    module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;
    module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE = true;
    module$contents$goog$html$SafeHtml_SafeHtml.from = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;
    var module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG = /^[a-zA-Z0-9-]+$/;
    var module$contents$goog$html$SafeHtml_URL_ATTRIBUTES = { action: true, cite: true, data: true, formaction: true, href: true, manifest: true, poster: true, src: true };
    var module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES = module$contents$goog$object_createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
    module$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
    module$contents$goog$html$SafeHtml_SafeHtml.EMPTY = new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML || "", goog.i18n.bidi.Dir.NEUTRAL, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);
    module$contents$goog$html$SafeHtml_SafeHtml.BR = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.SafeHtml = module$contents$goog$html$SafeHtml_SafeHtml;
    goog.html.uncheckedconversions = {};
    goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(a2, b2, c) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b2, c || null);
    };
    goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(a2, b2) {
      goog.asserts.assertString(goog.string.Const.unwrap(a2), "must provide justification");
      goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a2)), "must provide non-empty justification");
      return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b2);
    };
    goog.dom.safe = {};
    goog.dom.safe.InsertAdjacentHtmlPosition = { AFTERBEGIN: "afterbegin", AFTEREND: "afterend", BEFOREBEGIN: "beforebegin", BEFOREEND: "beforeend" };
    goog.dom.safe.insertAdjacentHtml = function(a2, b2, c) {
      a2.insertAdjacentHTML(b2, module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c));
    };
    goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = { MATH: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true };
    goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
      if (goog.DEBUG && typeof document === "undefined")
        return false;
      var a2 = document.createElement("div"), b2 = document.createElement("div");
      b2.appendChild(document.createElement("div"));
      a2.appendChild(b2);
      if (goog.DEBUG && !a2.firstChild)
        return false;
      b2 = a2.firstChild.firstChild;
      a2.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);
      return !b2.parentElement;
    });
    goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(a2, b2) {
      if (goog.dom.safe.isInnerHtmlCleanupRecursive_())
        for (; a2.lastChild; )
          a2.removeChild(a2.lastChild);
      a2.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setInnerHtml = function(a2, b2) {
      if (goog.asserts.ENABLE_ASSERTS && a2.tagName && goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[a2.tagName.toUpperCase()])
        throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + a2.tagName + ".");
      goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a2, b2);
    };
    goog.dom.safe.setInnerHtmlFromConstant = function(a2, b2) {
      goog.dom.safe.setInnerHtml(a2, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."), goog.string.Const.unwrap(b2)));
    };
    goog.dom.safe.setOuterHtml = function(a2, b2) {
      a2.outerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setFormElementAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLFormElement(a2).action = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setButtonFormAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLButtonElement(a2).formAction = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setInputFormAction = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      goog.dom.asserts.assertIsHTMLInputElement(a2).formAction = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setStyle = function(a2, b2) {
      a2.style.cssText = module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b2);
    };
    goog.dom.safe.documentWrite = function(a2, b2) {
      a2.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2));
    };
    goog.dom.safe.setAnchorHref = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLAnchorElement(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.href = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setImageSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLImageElement(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2, /^data:image\//i.test(b2));
      a2.src = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setAudioSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLAudioElement(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2, /^data:audio\//i.test(b2));
      a2.src = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setVideoSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLVideoElement(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2, /^data:video\//i.test(b2));
      a2.src = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.setEmbedSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLEmbedElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
    };
    goog.dom.safe.setFrameSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLFrameElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrap(b2);
    };
    goog.dom.safe.setIframeSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLIFrameElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrap(b2);
    };
    goog.dom.safe.setIframeSrcdoc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLIFrameElement(a2);
      a2.srcdoc = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2);
    };
    goog.dom.safe.setLinkHrefAndRel = function(a2, b2, c) {
      goog.dom.asserts.assertIsHTMLLinkElement(a2);
      a2.rel = c;
      goog.string.internal.caseInsensitiveContains(c, "stylesheet") ? (goog.asserts.assert(b2 instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a2.href = goog.html.TrustedResourceUrl.unwrap(b2), (b2 = goog.dom.safe.getStyleNonce(a2.ownerDocument && a2.ownerDocument.defaultView)) && a2.setAttribute("nonce", b2)) : a2.href = b2 instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(b2) : b2 instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(b2) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b2));
    };
    goog.dom.safe.setObjectData = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLObjectElement(a2);
      a2.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
    };
    goog.dom.safe.setScriptSrc = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLScriptElement(a2);
      a2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b2);
      goog.dom.safe.setNonceForScriptElement_(a2);
    };
    goog.dom.safe.setScriptContent = function(a2, b2) {
      goog.dom.asserts.assertIsHTMLScriptElement(a2);
      a2.textContent = module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b2);
      goog.dom.safe.setNonceForScriptElement_(a2);
    };
    goog.dom.safe.setNonceForScriptElement_ = function(a2) {
      var b2 = goog.dom.safe.getScriptNonce(a2.ownerDocument && a2.ownerDocument.defaultView);
      b2 && a2.setAttribute("nonce", b2);
    };
    goog.dom.safe.setLocationHref = function(a2, b2) {
      goog.dom.asserts.assertIsLocation(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.href = goog.html.SafeUrl.unwrap(b2);
    };
    goog.dom.safe.assignLocation = function(a2, b2) {
      goog.dom.asserts.assertIsLocation(a2);
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.assign(goog.html.SafeUrl.unwrap(b2));
    };
    goog.dom.safe.replaceLocation = function(a2, b2) {
      b2 = b2 instanceof goog.html.SafeUrl ? b2 : goog.html.SafeUrl.sanitizeAssertUnchanged(b2);
      a2.replace(goog.html.SafeUrl.unwrap(b2));
    };
    goog.dom.safe.openInWindow = function(a2, b2, c, d) {
      a2 = a2 instanceof goog.html.SafeUrl ? a2 : goog.html.SafeUrl.sanitizeAssertUnchanged(a2);
      b2 = b2 || goog.global;
      c = c instanceof goog.string.Const ? goog.string.Const.unwrap(c) : c || "";
      return d !== void 0 ? b2.open(goog.html.SafeUrl.unwrap(a2), c, d) : b2.open(goog.html.SafeUrl.unwrap(a2), c);
    };
    goog.dom.safe.parseFromStringHtml = function(a2, b2) {
      return goog.dom.safe.parseFromString(a2, b2, "text/html");
    };
    goog.dom.safe.parseFromString = function(a2, b2, c) {
      return a2.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2), c);
    };
    goog.dom.safe.createImageFromBlob = function(a2) {
      if (!/^image\/.*/g.test(a2.type))
        throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
      var b2 = goog.global.URL.createObjectURL(a2);
      a2 = new goog.global.Image();
      a2.onload = function() {
        goog.global.URL.revokeObjectURL(b2);
      };
      goog.dom.safe.setImageSrc(a2, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), b2));
      return a2;
    };
    goog.dom.safe.createContextualFragment = function(a2, b2) {
      return a2.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b2));
    };
    goog.dom.safe.getScriptNonce = function(a2) {
      return goog.dom.safe.getNonce_("script[nonce]", a2);
    };
    goog.dom.safe.getStyleNonce = function(a2) {
      return goog.dom.safe.getNonce_('style[nonce],link[rel="stylesheet"][nonce]', a2);
    };
    goog.dom.safe.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
    goog.dom.safe.getNonce_ = function(a2, b2) {
      b2 = (b2 || goog.global).document;
      return b2.querySelector ? (a2 = b2.querySelector(a2)) && (a2 = a2.nonce || a2.getAttribute("nonce")) && goog.dom.safe.NONCE_PATTERN_.test(a2) ? a2 : "" : "";
    };
    goog.string.DETECT_DOUBLE_ESCAPING = false;
    goog.string.FORCE_NON_DOM_HTML_UNESCAPING = false;
    goog.string.Unicode = { NBSP: "\xA0" };
    goog.string.startsWith = goog.string.internal.startsWith;
    goog.string.endsWith = goog.string.internal.endsWith;
    goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
    goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
    goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
    goog.string.subs = function(a2, b2) {
      for (var c = a2.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length; )
        d += c.shift() + e.shift();
      return d + c.join("%s");
    };
    goog.string.collapseWhitespace = function(a2) {
      return a2.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
    };
    goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
    goog.string.isEmptyString = function(a2) {
      return a2.length == 0;
    };
    goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
    goog.string.isEmptyOrWhitespaceSafe = function(a2) {
      return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a2));
    };
    goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
    goog.string.isBreakingWhitespace = function(a2) {
      return !/[^\t\n\r ]/.test(a2);
    };
    goog.string.isAlpha = function(a2) {
      return !/[^a-zA-Z]/.test(a2);
    };
    goog.string.isNumeric = function(a2) {
      return !/[^0-9]/.test(a2);
    };
    goog.string.isAlphaNumeric = function(a2) {
      return !/[^a-zA-Z0-9]/.test(a2);
    };
    goog.string.isSpace = function(a2) {
      return a2 == " ";
    };
    goog.string.isUnicodeChar = function(a2) {
      return a2.length == 1 && " " <= a2 && "~" >= a2 || "\x80" <= a2 && "\uFFFD" >= a2;
    };
    goog.string.stripNewlines = function(a2) {
      return a2.replace(/(\r\n|\r|\n)+/g, " ");
    };
    goog.string.canonicalizeNewlines = function(a2) {
      return a2.replace(/(\r\n|\r|\n)/g, "\n");
    };
    goog.string.normalizeWhitespace = function(a2) {
      return a2.replace(/\xa0|\s/g, " ");
    };
    goog.string.normalizeSpaces = function(a2) {
      return a2.replace(/\xa0|[ \t]+/g, " ");
    };
    goog.string.collapseBreakingSpaces = function(a2) {
      return a2.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
    };
    goog.string.trim = goog.string.internal.trim;
    goog.string.trimLeft = function(a2) {
      return a2.replace(/^[\s\xa0]+/, "");
    };
    goog.string.trimRight = function(a2) {
      return a2.replace(/[\s\xa0]+$/, "");
    };
    goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
    goog.string.numberAwareCompare_ = function(a2, b2, c) {
      if (a2 == b2)
        return 0;
      if (!a2)
        return -1;
      if (!b2)
        return 1;
      for (var d = a2.toLowerCase().match(c), e = b2.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {
        c = d[g];
        var k = e[g];
        if (c != k)
          return a2 = parseInt(c, 10), !isNaN(a2) && (b2 = parseInt(k, 10), !isNaN(b2) && a2 - b2) ? a2 - b2 : c < k ? -1 : 1;
      }
      return d.length != e.length ? d.length - e.length : a2 < b2 ? -1 : 1;
    };
    goog.string.intAwareCompare = function(a2, b2) {
      return goog.string.numberAwareCompare_(a2, b2, /\d+|\D+/g);
    };
    goog.string.floatAwareCompare = function(a2, b2) {
      return goog.string.numberAwareCompare_(a2, b2, /\d+|\.\d+|\D+/g);
    };
    goog.string.numerateCompare = goog.string.floatAwareCompare;
    goog.string.urlEncode = function(a2) {
      return encodeURIComponent(String(a2));
    };
    goog.string.urlDecode = function(a2) {
      return decodeURIComponent(a2.replace(/\+/g, " "));
    };
    goog.string.newLineToBr = goog.string.internal.newLineToBr;
    goog.string.htmlEscape = function(a2, b2) {
      a2 = goog.string.internal.htmlEscape(a2, b2);
      goog.string.DETECT_DOUBLE_ESCAPING && (a2 = a2.replace(goog.string.E_RE_, "&#101;"));
      return a2;
    };
    goog.string.E_RE_ = /e/g;
    goog.string.unescapeEntities = function(a2) {
      return goog.string.contains(a2, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a2) : goog.string.unescapePureXmlEntities_(a2) : a2;
    };
    goog.string.unescapeEntitiesWithDocument = function(a2, b2) {
      return goog.string.contains(a2, "&") ? goog.string.unescapeEntitiesUsingDom_(a2, b2) : a2;
    };
    goog.string.unescapeEntitiesUsingDom_ = function(a2, b2) {
      var c = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"' };
      var d = b2 ? b2.createElement("div") : goog.global.document.createElement("div");
      return a2.replace(goog.string.HTML_ENTITY_PATTERN_, function(e, f) {
        var g = c[e];
        if (g)
          return g;
        f.charAt(0) == "#" && (f = Number("0" + f.substr(1)), isNaN(f) || (g = String.fromCharCode(f)));
        g || (goog.dom.safe.setInnerHtml(d, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), e + " ")), g = d.firstChild.nodeValue.slice(0, -1));
        return c[e] = g;
      });
    };
    goog.string.unescapePureXmlEntities_ = function(a2) {
      return a2.replace(/&([^;]+);/g, function(b2, c) {
        switch (c) {
          case "amp":
            return "&";
          case "lt":
            return "<";
          case "gt":
            return ">";
          case "quot":
            return '"';
          default:
            return c.charAt(0) != "#" || (c = Number("0" + c.substr(1)), isNaN(c)) ? b2 : String.fromCharCode(c);
        }
      });
    };
    goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
    goog.string.whitespaceEscape = function(a2, b2) {
      return goog.string.newLineToBr(a2.replace(/  /g, " &#160;"), b2);
    };
    goog.string.preserveSpaces = function(a2) {
      return a2.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
    };
    goog.string.stripQuotes = function(a2, b2) {
      for (var c = b2.length, d = 0; d < c; d++) {
        var e = c == 1 ? b2 : b2.charAt(d);
        if (a2.charAt(0) == e && a2.charAt(a2.length - 1) == e)
          return a2.substring(1, a2.length - 1);
      }
      return a2;
    };
    goog.string.truncate = function(a2, b2, c) {
      c && (a2 = goog.string.unescapeEntities(a2));
      a2.length > b2 && (a2 = a2.substring(0, b2 - 3) + "...");
      c && (a2 = goog.string.htmlEscape(a2));
      return a2;
    };
    goog.string.truncateMiddle = function(a2, b2, c, d) {
      c && (a2 = goog.string.unescapeEntities(a2));
      d && a2.length > b2 ? (d > b2 && (d = b2), a2 = a2.substring(0, b2 - d) + "..." + a2.substring(a2.length - d)) : a2.length > b2 && (d = Math.floor(b2 / 2), a2 = a2.substring(0, d + b2 % 2) + "..." + a2.substring(a2.length - d));
      c && (a2 = goog.string.htmlEscape(a2));
      return a2;
    };
    goog.string.specialEscapeChars_ = { "\0": "\\0", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\x0B", '"': '\\"', "\\": "\\\\", "<": "\\u003C" };
    goog.string.jsEscapeCache_ = { "'": "\\'" };
    goog.string.quote = function(a2) {
      a2 = String(a2);
      for (var b2 = ['"'], c = 0; c < a2.length; c++) {
        var d = a2.charAt(c), e = d.charCodeAt(0);
        b2[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
      }
      b2.push('"');
      return b2.join("");
    };
    goog.string.escapeString = function(a2) {
      for (var b2 = [], c = 0; c < a2.length; c++)
        b2[c] = goog.string.escapeChar(a2.charAt(c));
      return b2.join("");
    };
    goog.string.escapeChar = function(a2) {
      if (a2 in goog.string.jsEscapeCache_)
        return goog.string.jsEscapeCache_[a2];
      if (a2 in goog.string.specialEscapeChars_)
        return goog.string.jsEscapeCache_[a2] = goog.string.specialEscapeChars_[a2];
      var b2 = a2.charCodeAt(0);
      if (31 < b2 && 127 > b2)
        var c = a2;
      else {
        if (256 > b2) {
          if (c = "\\x", 16 > b2 || 256 < b2)
            c += "0";
        } else
          c = "\\u", 4096 > b2 && (c += "0");
        c += b2.toString(16).toUpperCase();
      }
      return goog.string.jsEscapeCache_[a2] = c;
    };
    goog.string.contains = goog.string.internal.contains;
    goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
    goog.string.countOf = function(a2, b2) {
      return a2 && b2 ? a2.split(b2).length - 1 : 0;
    };
    goog.string.removeAt = function(a2, b2, c) {
      var d = a2;
      0 <= b2 && b2 < a2.length && 0 < c && (d = a2.substr(0, b2) + a2.substr(b2 + c, a2.length - b2 - c));
      return d;
    };
    goog.string.remove = function(a2, b2) {
      return a2.replace(b2, "");
    };
    goog.string.removeAll = function(a2, b2) {
      b2 = new RegExp(goog.string.regExpEscape(b2), "g");
      return a2.replace(b2, "");
    };
    goog.string.replaceAll = function(a2, b2, c) {
      b2 = new RegExp(goog.string.regExpEscape(b2), "g");
      return a2.replace(b2, c.replace(/\$/g, "$$$$"));
    };
    goog.string.regExpEscape = function(a2) {
      return String(a2).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
    };
    goog.string.repeat = String.prototype.repeat ? function(a2, b2) {
      return a2.repeat(b2);
    } : function(a2, b2) {
      return Array(b2 + 1).join(a2);
    };
    goog.string.padNumber = function(a2, b2, c) {
      if (!Number.isFinite(a2))
        return String(a2);
      a2 = c !== void 0 ? a2.toFixed(c) : String(a2);
      c = a2.indexOf(".");
      c === -1 && (c = a2.length);
      var d = a2[0] === "-" ? "-" : "";
      d && (a2 = a2.substring(1));
      return d + goog.string.repeat("0", Math.max(0, b2 - c)) + a2;
    };
    goog.string.makeSafe = function(a2) {
      return a2 == null ? "" : String(a2);
    };
    goog.string.buildString = function(a2) {
      return Array.prototype.join.call(arguments, "");
    };
    goog.string.getRandomString = function() {
      return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
    };
    goog.string.compareVersions = goog.string.internal.compareVersions;
    goog.string.hashCode = function(a2) {
      for (var b2 = 0, c = 0; c < a2.length; ++c)
        b2 = 31 * b2 + a2.charCodeAt(c) >>> 0;
      return b2;
    };
    goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
    goog.string.createUniqueString = function() {
      return "goog_" + goog.string.uniqueStringCounter_++;
    };
    goog.string.toNumber = function(a2) {
      var b2 = Number(a2);
      return b2 == 0 && goog.string.isEmptyOrWhitespace(a2) ? NaN : b2;
    };
    goog.string.isLowerCamelCase = function(a2) {
      return /^[a-z]+([A-Z][a-z]*)*$/.test(a2);
    };
    goog.string.isUpperCamelCase = function(a2) {
      return /^([A-Z][a-z]*)+$/.test(a2);
    };
    goog.string.toCamelCase = function(a2) {
      return String(a2).replace(/\-([a-z])/g, function(b2, c) {
        return c.toUpperCase();
      });
    };
    goog.string.toSelectorCase = function(a2) {
      return String(a2).replace(/([A-Z])/g, "-$1").toLowerCase();
    };
    goog.string.toTitleCase = function(a2, b2) {
      b2 = typeof b2 === "string" ? goog.string.regExpEscape(b2) : "\\s";
      return a2.replace(new RegExp("(^" + (b2 ? "|[" + b2 + "]+" : "") + ")([a-z])", "g"), function(c, d, e) {
        return d + e.toUpperCase();
      });
    };
    goog.string.capitalize = function(a2) {
      return String(a2.charAt(0)).toUpperCase() + String(a2.substr(1)).toLowerCase();
    };
    goog.string.parseInt = function(a2) {
      isFinite(a2) && (a2 = String(a2));
      return typeof a2 === "string" ? /^\s*-?0x/i.test(a2) ? parseInt(a2, 16) : parseInt(a2, 10) : NaN;
    };
    goog.string.splitLimit = function(a2, b2, c) {
      a2 = a2.split(b2);
      for (var d = []; 0 < c && a2.length; )
        d.push(a2.shift()), c--;
      a2.length && d.push(a2.join(b2));
      return d;
    };
    goog.string.lastComponent = function(a2, b2) {
      if (b2)
        typeof b2 == "string" && (b2 = [b2]);
      else
        return a2;
      for (var c = -1, d = 0; d < b2.length; d++)
        if (b2[d] != "") {
          var e = a2.lastIndexOf(b2[d]);
          e > c && (c = e);
        }
      return c == -1 ? a2 : a2.slice(c + 1);
    };
    goog.string.editDistance = function(a2, b2) {
      var c = [], d = [];
      if (a2 == b2)
        return 0;
      if (!a2.length || !b2.length)
        return Math.max(a2.length, b2.length);
      for (var e = 0; e < b2.length + 1; e++)
        c[e] = e;
      for (e = 0; e < a2.length; e++) {
        d[0] = e + 1;
        for (var f = 0; f < b2.length; f++)
          d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a2[e] != b2[f]));
        for (f = 0; f < c.length; f++)
          c[f] = d[f];
      }
      return d[b2.length];
    };
    goog.uri = {};
    goog.uri.utils = {};
    goog.uri.utils.QueryArray = {};
    goog.uri.utils.QueryValue = {};
    goog.uri.utils.CharCode_ = { AMPERSAND: 38, EQUAL: 61, HASH: 35, QUESTION: 63 };
    goog.uri.utils.buildFromEncodedParts = function(a2, b2, c, d, e, f, g) {
      var k = "";
      a2 && (k += a2 + ":");
      c && (k += "//", b2 && (k += b2 + "@"), k += c, d && (k += ":" + d));
      e && (k += e);
      f && (k += "?" + f);
      g && (k += "#" + g);
      return k;
    };
    goog.uri.utils.splitRe_ = RegExp("^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$");
    goog.uri.utils.ComponentIndex = { SCHEME: 1, USER_INFO: 2, DOMAIN: 3, PORT: 4, PATH: 5, QUERY_DATA: 6, FRAGMENT: 7 };
    goog.uri.utils.urlPackageSupportLoggingHandler_ = null;
    goog.uri.utils.setUrlPackageSupportLoggingHandler = function(a2) {
      goog.uri.utils.urlPackageSupportLoggingHandler_ = a2;
    };
    goog.uri.utils.split = function(a2) {
      var b2 = a2.match(goog.uri.utils.splitRe_);
      goog.uri.utils.urlPackageSupportLoggingHandler_ && 0 <= ["http", "https", "ws", "wss", "ftp"].indexOf(b2[goog.uri.utils.ComponentIndex.SCHEME]) && goog.uri.utils.urlPackageSupportLoggingHandler_(a2);
      return b2;
    };
    goog.uri.utils.decodeIfPossible_ = function(a2, b2) {
      return a2 ? b2 ? decodeURI(a2) : decodeURIComponent(a2) : a2;
    };
    goog.uri.utils.getComponentByIndex_ = function(a2, b2) {
      return goog.uri.utils.split(b2)[a2] || null;
    };
    goog.uri.utils.getScheme = function(a2) {
      return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, a2);
    };
    goog.uri.utils.getEffectiveScheme = function(a2) {
      a2 = goog.uri.utils.getScheme(a2);
      !a2 && goog.global.self && goog.global.self.location && (a2 = goog.global.self.location.protocol, a2 = a2.substr(0, a2.length - 1));
      return a2 ? a2.toLowerCase() : "";
    };
    goog.uri.utils.getUserInfoEncoded = function(a2) {
      return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, a2);
    };
    goog.uri.utils.getUserInfo = function(a2) {
      return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(a2));
    };
    goog.uri.utils.getDomainEncoded = function(a2) {
      return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, a2);
    };
    goog.uri.utils.getDomain = function(a2) {
      return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(a2), true);
    };
    goog.uri.utils.getPort = function(a2) {
      return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, a2)) || null;
    };
    goog.uri.utils.getPathEncoded = function(a2) {
      return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, a2);
    };
    goog.uri.utils.getPath = function(a2) {
      return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(a2), true);
    };
    goog.uri.utils.getQueryData = function(a2) {
      return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, a2);
    };
    goog.uri.utils.getFragmentEncoded = function(a2) {
      var b2 = a2.indexOf("#");
      return 0 > b2 ? null : a2.substr(b2 + 1);
    };
    goog.uri.utils.setFragmentEncoded = function(a2, b2) {
      return goog.uri.utils.removeFragment(a2) + (b2 ? "#" + b2 : "");
    };
    goog.uri.utils.getFragment = function(a2) {
      return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(a2));
    };
    goog.uri.utils.getHost = function(a2) {
      a2 = goog.uri.utils.split(a2);
      return goog.uri.utils.buildFromEncodedParts(a2[goog.uri.utils.ComponentIndex.SCHEME], a2[goog.uri.utils.ComponentIndex.USER_INFO], a2[goog.uri.utils.ComponentIndex.DOMAIN], a2[goog.uri.utils.ComponentIndex.PORT]);
    };
    goog.uri.utils.getOrigin = function(a2) {
      a2 = goog.uri.utils.split(a2);
      return goog.uri.utils.buildFromEncodedParts(a2[goog.uri.utils.ComponentIndex.SCHEME], null, a2[goog.uri.utils.ComponentIndex.DOMAIN], a2[goog.uri.utils.ComponentIndex.PORT]);
    };
    goog.uri.utils.getPathAndAfter = function(a2) {
      a2 = goog.uri.utils.split(a2);
      return goog.uri.utils.buildFromEncodedParts(null, null, null, null, a2[goog.uri.utils.ComponentIndex.PATH], a2[goog.uri.utils.ComponentIndex.QUERY_DATA], a2[goog.uri.utils.ComponentIndex.FRAGMENT]);
    };
    goog.uri.utils.removeFragment = function(a2) {
      var b2 = a2.indexOf("#");
      return 0 > b2 ? a2 : a2.substr(0, b2);
    };
    goog.uri.utils.haveSameDomain = function(a2, b2) {
      a2 = goog.uri.utils.split(a2);
      b2 = goog.uri.utils.split(b2);
      return a2[goog.uri.utils.ComponentIndex.DOMAIN] == b2[goog.uri.utils.ComponentIndex.DOMAIN] && a2[goog.uri.utils.ComponentIndex.SCHEME] == b2[goog.uri.utils.ComponentIndex.SCHEME] && a2[goog.uri.utils.ComponentIndex.PORT] == b2[goog.uri.utils.ComponentIndex.PORT];
    };
    goog.uri.utils.assertNoFragmentsOrQueries_ = function(a2) {
      goog.asserts.assert(0 > a2.indexOf("#") && 0 > a2.indexOf("?"), "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", a2);
    };
    goog.uri.utils.parseQueryData = function(a2, b2) {
      if (a2) {
        a2 = a2.split("&");
        for (var c = 0; c < a2.length; c++) {
          var d = a2[c].indexOf("="), e = null;
          if (0 <= d) {
            var f = a2[c].substring(0, d);
            e = a2[c].substring(d + 1);
          } else
            f = a2[c];
          b2(f, e ? goog.string.urlDecode(e) : "");
        }
      }
    };
    goog.uri.utils.splitQueryData_ = function(a2) {
      var b2 = a2.indexOf("#");
      0 > b2 && (b2 = a2.length);
      var c = a2.indexOf("?");
      if (0 > c || c > b2) {
        c = b2;
        var d = "";
      } else
        d = a2.substring(c + 1, b2);
      return [a2.substr(0, c), d, a2.substr(b2)];
    };
    goog.uri.utils.joinQueryData_ = function(a2) {
      return a2[0] + (a2[1] ? "?" + a2[1] : "") + a2[2];
    };
    goog.uri.utils.appendQueryData_ = function(a2, b2) {
      return b2 ? a2 ? a2 + "&" + b2 : b2 : a2;
    };
    goog.uri.utils.appendQueryDataToUri_ = function(a2, b2) {
      if (!b2)
        return a2;
      a2 = goog.uri.utils.splitQueryData_(a2);
      a2[1] = goog.uri.utils.appendQueryData_(a2[1], b2);
      return goog.uri.utils.joinQueryData_(a2);
    };
    goog.uri.utils.appendKeyValuePairs_ = function(a2, b2, c) {
      goog.asserts.assertString(a2);
      if (Array.isArray(b2)) {
        goog.asserts.assertArray(b2);
        for (var d = 0; d < b2.length; d++)
          goog.uri.utils.appendKeyValuePairs_(a2, String(b2[d]), c);
      } else
        b2 != null && c.push(a2 + (b2 === "" ? "" : "=" + goog.string.urlEncode(b2)));
    };
    goog.uri.utils.buildQueryData = function(a2, b2) {
      goog.asserts.assert(Math.max(a2.length - (b2 || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
      var c = [];
      for (b2 = b2 || 0; b2 < a2.length; b2 += 2)
        goog.uri.utils.appendKeyValuePairs_(a2[b2], a2[b2 + 1], c);
      return c.join("&");
    };
    goog.uri.utils.buildQueryDataFromMap = function(a2) {
      var b2 = [], c;
      for (c in a2)
        goog.uri.utils.appendKeyValuePairs_(c, a2[c], b2);
      return b2.join("&");
    };
    goog.uri.utils.appendParams = function(a2, b2) {
      var c = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
      return goog.uri.utils.appendQueryDataToUri_(a2, c);
    };
    goog.uri.utils.appendParamsFromMap = function(a2, b2) {
      b2 = goog.uri.utils.buildQueryDataFromMap(b2);
      return goog.uri.utils.appendQueryDataToUri_(a2, b2);
    };
    goog.uri.utils.appendParam = function(a2, b2, c) {
      c = c != null ? "=" + goog.string.urlEncode(c) : "";
      return goog.uri.utils.appendQueryDataToUri_(a2, b2 + c);
    };
    goog.uri.utils.findParam_ = function(a2, b2, c, d) {
      for (var e = c.length; 0 <= (b2 = a2.indexOf(c, b2)) && b2 < d; ) {
        var f = a2.charCodeAt(b2 - 1);
        if (f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.QUESTION) {
          if (f = a2.charCodeAt(b2 + e), !f || f == goog.uri.utils.CharCode_.EQUAL || f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.HASH)
            return b2;
        }
        b2 += e + 1;
      }
      return -1;
    };
    goog.uri.utils.hashOrEndRe_ = /#|$/;
    goog.uri.utils.hasParam = function(a2, b2) {
      return 0 <= goog.uri.utils.findParam_(a2, 0, b2, a2.search(goog.uri.utils.hashOrEndRe_));
    };
    goog.uri.utils.getParamValue = function(a2, b2) {
      var c = a2.search(goog.uri.utils.hashOrEndRe_), d = goog.uri.utils.findParam_(a2, 0, b2, c);
      if (0 > d)
        return null;
      var e = a2.indexOf("&", d);
      if (0 > e || e > c)
        e = c;
      d += b2.length + 1;
      return goog.string.urlDecode(a2.substr(d, e - d));
    };
    goog.uri.utils.getParamValues = function(a2, b2) {
      for (var c = a2.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a2, d, b2, c)); ) {
        d = a2.indexOf("&", e);
        if (0 > d || d > c)
          d = c;
        e += b2.length + 1;
        f.push(goog.string.urlDecode(a2.substr(e, d - e)));
      }
      return f;
    };
    goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
    goog.uri.utils.removeParam = function(a2, b2) {
      for (var c = a2.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a2, d, b2, c)); )
        f.push(a2.substring(d, e)), d = Math.min(a2.indexOf("&", e) + 1 || c, c);
      f.push(a2.substr(d));
      return f.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
    };
    goog.uri.utils.setParam = function(a2, b2, c) {
      return goog.uri.utils.appendParam(goog.uri.utils.removeParam(a2, b2), b2, c);
    };
    goog.uri.utils.setParamsFromMap = function(a2, b2) {
      a2 = goog.uri.utils.splitQueryData_(a2);
      var c = a2[1], d = [];
      c && c.split("&").forEach(function(e) {
        var f = e.indexOf("=");
        b2.hasOwnProperty(0 <= f ? e.substr(0, f) : e) || d.push(e);
      });
      a2[1] = goog.uri.utils.appendQueryData_(d.join("&"), goog.uri.utils.buildQueryDataFromMap(b2));
      return goog.uri.utils.joinQueryData_(a2);
    };
    goog.uri.utils.appendPath = function(a2, b2) {
      goog.uri.utils.assertNoFragmentsOrQueries_(a2);
      goog.string.endsWith(a2, "/") && (a2 = a2.substr(0, a2.length - 1));
      goog.string.startsWith(b2, "/") && (b2 = b2.substr(1));
      return "" + a2 + "/" + b2;
    };
    goog.uri.utils.setPath = function(a2, b2) {
      goog.string.startsWith(b2, "/") || (b2 = "/" + b2);
      a2 = goog.uri.utils.split(a2);
      return goog.uri.utils.buildFromEncodedParts(a2[goog.uri.utils.ComponentIndex.SCHEME], a2[goog.uri.utils.ComponentIndex.USER_INFO], a2[goog.uri.utils.ComponentIndex.DOMAIN], a2[goog.uri.utils.ComponentIndex.PORT], b2, a2[goog.uri.utils.ComponentIndex.QUERY_DATA], a2[goog.uri.utils.ComponentIndex.FRAGMENT]);
    };
    goog.uri.utils.StandardQueryParam = { RANDOM: "zx" };
    goog.uri.utils.makeUnique = function(a2) {
      return goog.uri.utils.setParam(a2, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
    };
    proto.tflite = {};
    proto.tflite.proto = {};
    proto.tflite.proto.BenchmarkStoragePaths = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.BenchmarkStoragePaths, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.BenchmarkStoragePaths.prototype.getStorageFilePath = function() {
      return this.internal_getStringFieldWithDefault(1);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.setStorageFilePath = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.clearStorageFilePath = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.hasStorageFilePath = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.getDataDirectoryPath = function() {
      return this.internal_getStringFieldWithDefault(2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.setDataDirectoryPath = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.clearDataDirectoryPath = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.hasDataDirectoryPath = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.internalDoNotUse$proto$tflite$proto$BenchmarkStoragePaths$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readString };
    };
    proto.tflite.proto.BenchmarkStoragePaths.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.BenchmarkStoragePaths.serializeBinaryToWriter);
    };
    proto.tflite.proto.BenchmarkStoragePaths.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.BenchmarkStoragePaths, proto.tflite.proto.BenchmarkStoragePaths.internalDoNotUse$proto$tflite$proto$BenchmarkStoragePaths$getBinaryFieldsObject);
    };
    proto.tflite.proto.BenchmarkStoragePaths.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.BenchmarkStoragePaths.internalDoNotUse$proto$tflite$proto$BenchmarkStoragePaths$getBinaryFieldsObject);
    };
    proto.tflite.proto.BenchmarkStoragePaths.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.BenchmarkStoragePaths, a2);
    };
    proto.tflite.proto.BenchmarkStoragePaths.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.BenchmarkStoragePaths.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.BenchmarkStoragePaths();
      a2.storageFilePath != null && b2.internal_setField(1, a2.storageFilePath);
      a2.dataDirectoryPath != null && b2.internal_setField(2, a2.dataDirectoryPath);
      return b2;
    });
    proto.tflite.proto.BenchmarkStoragePaths.prototype.toObject = function(a2) {
      return proto.tflite.proto.BenchmarkStoragePaths.internal_toObject(a2, this);
    };
    proto.tflite.proto.BenchmarkStoragePaths.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { storageFilePath: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), dataDirectoryPath: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.CPUSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.CPUSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.CPUSettings.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(1, -1);
    };
    proto.tflite.proto.CPUSettings.prototype.setNumThreads = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.CPUSettings.prototype.clearNumThreads = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.CPUSettings.prototype.hasNumThreads = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.CPUSettings.internalDoNotUse$proto$tflite$proto$CPUSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32 };
    };
    proto.tflite.proto.CPUSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.CPUSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.CPUSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.CPUSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.CPUSettings, proto.tflite.proto.CPUSettings.internalDoNotUse$proto$tflite$proto$CPUSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.CPUSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.CPUSettings.internalDoNotUse$proto$tflite$proto$CPUSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.CPUSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.CPUSettings, a2);
    };
    proto.tflite.proto.CPUSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.CPUSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.CPUSettings();
      a2.numThreads != null && b2.internal_setField(1, a2.numThreads);
      return b2;
    });
    proto.tflite.proto.CPUSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.CPUSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.CPUSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { numThreads: b2.internal_getIntegerFieldWithDefault(1, -1) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.ModelFile = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.ModelFile, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.ModelFile.prototype.getFilename = function() {
      return this.internal_getStringFieldWithDefault(1);
    };
    proto.tflite.proto.ModelFile.prototype.setFilename = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.ModelFile.prototype.clearFilename = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.ModelFile.prototype.hasFilename = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.ModelFile.prototype.getFd = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.proto.ModelFile.prototype.setFd = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.ModelFile.prototype.clearFd = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.ModelFile.prototype.hasFd = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.ModelFile.prototype.getOffset = function() {
      return this.internal_getIntegerFieldWithDefault(3);
    };
    proto.tflite.proto.ModelFile.prototype.setOffset = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.ModelFile.prototype.clearOffset = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.ModelFile.prototype.hasOffset = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.ModelFile.prototype.getLength = function() {
      return this.internal_getIntegerFieldWithDefault(4);
    };
    proto.tflite.proto.ModelFile.prototype.setLength = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.ModelFile.prototype.clearLength = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.ModelFile.prototype.hasLength = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.ModelFile.internalDoNotUse$proto$tflite$proto$ModelFile$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readInt64, 3: jspb.internal.binary.readInt64, 4: jspb.internal.binary.readInt64 };
    };
    proto.tflite.proto.ModelFile.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.ModelFile.serializeBinaryToWriter);
    };
    proto.tflite.proto.ModelFile.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.writeInt64(b2, a2, 3);
      jspb.internal.binary.writeInt64(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.ModelFile.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.ModelFile, proto.tflite.proto.ModelFile.internalDoNotUse$proto$tflite$proto$ModelFile$getBinaryFieldsObject);
    };
    proto.tflite.proto.ModelFile.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.ModelFile.internalDoNotUse$proto$tflite$proto$ModelFile$getBinaryFieldsObject);
    };
    proto.tflite.proto.ModelFile.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.ModelFile, a2);
    };
    proto.tflite.proto.ModelFile.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.ModelFile.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.ModelFile();
      a2.filename != null && b2.internal_setField(1, a2.filename);
      a2.fd != null && b2.internal_setField(2, a2.fd);
      a2.offset != null && b2.internal_setField(3, a2.offset);
      a2.length != null && b2.internal_setField(4, a2.length);
      return b2;
    });
    proto.tflite.proto.ModelFile.prototype.toObject = function(a2) {
      return proto.tflite.proto.ModelFile.internal_toObject(a2, this);
    };
    proto.tflite.proto.ModelFile.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { filename: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), fd: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), offset: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), length: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.CoralSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.CoralSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.CoralSettings.prototype.getDevice = function() {
      return this.internal_getStringFieldWithDefault(1);
    };
    proto.tflite.proto.CoralSettings.prototype.setDevice = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.CoralSettings.prototype.clearDevice = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.CoralSettings.prototype.hasDevice = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.CoralSettings.prototype.getPerformance = function() {
      return this.internal_getFieldWithDefault(2, 1);
    };
    proto.tflite.proto.CoralSettings.prototype.setPerformance = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.CoralSettings.prototype.clearPerformance = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.CoralSettings.prototype.hasPerformance = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.CoralSettings.prototype.getUsbAlwaysDfu = function() {
      return this.internal_getBooleanFieldWithDefault(3);
    };
    proto.tflite.proto.CoralSettings.prototype.setUsbAlwaysDfu = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.CoralSettings.prototype.clearUsbAlwaysDfu = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.CoralSettings.prototype.hasUsbAlwaysDfu = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.CoralSettings.prototype.getUsbMaxBulkInQueueLength = function() {
      return this.internal_getIntegerFieldWithDefault(4);
    };
    proto.tflite.proto.CoralSettings.prototype.setUsbMaxBulkInQueueLength = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.CoralSettings.prototype.clearUsbMaxBulkInQueueLength = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.CoralSettings.prototype.hasUsbMaxBulkInQueueLength = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.CoralSettings.internalDoNotUse$proto$tflite$proto$CoralSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readEnum, 3: jspb.internal.binary.readBool, 4: jspb.internal.binary.readInt32 };
    };
    proto.tflite.proto.CoralSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.CoralSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.CoralSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeEnum(b2, a2, 2);
      jspb.internal.binary.writeBool(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.CoralSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.CoralSettings, proto.tflite.proto.CoralSettings.internalDoNotUse$proto$tflite$proto$CoralSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.CoralSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.CoralSettings.internalDoNotUse$proto$tflite$proto$CoralSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.CoralSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.CoralSettings, a2);
    };
    proto.tflite.proto.CoralSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.CoralSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.CoralSettings();
      a2.device != null && b2.internal_setField(1, a2.device);
      a2.performance != null && b2.internal_setField(2, a2.performance);
      a2.usbAlwaysDfu != null && b2.internal_setField(3, a2.usbAlwaysDfu);
      a2.usbMaxBulkInQueueLength != null && b2.internal_setField(4, a2.usbMaxBulkInQueueLength);
      return b2;
    });
    proto.tflite.proto.CoralSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.CoralSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.CoralSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { device: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), performance: b2.internal_getFieldWithDefault(2, 1), usbAlwaysDfu: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(3)), usbMaxBulkInQueueLength: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.CoralSettings.Performance = { UNDEFINED: 0, MAXIMUM: 1, HIGH: 2, MEDIUM: 3, LOW: 4 };
    proto.tflite.proto.EdgeTpuDeviceSpec = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.proto.EdgeTpuDeviceSpec.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.proto.EdgeTpuDeviceSpec, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.getPlatformType = function() {
      return this.internal_getFieldWithDefault(1, 0);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.setPlatformType = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.clearPlatformType = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.hasPlatformType = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.getNumChips = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.setNumChips = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.clearNumChips = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.hasNumChips = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.getDevicePathsList = function() {
      return this.internal_getRepeatedField(3);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.setDevicePathsList = function(a2) {
      return this.internal_setRepeatedField(3, a2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.addDevicePaths = function(a2, b2) {
      return this.internal_addToRepeatedField(3, a2, b2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.clearDevicePathsList = function() {
      return this.internal_clearRepeatedField(3);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.getChipFamily = function() {
      return this.internal_getIntegerFieldWithDefault(4);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.setChipFamily = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.clearChipFamily = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.hasChipFamily = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.internalDoNotUse$proto$tflite$proto$EdgeTpuDeviceSpec$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: jspb.internal.binary.readInt32, 3: jspb.internal.binary.readRepeatedString, 4: jspb.internal.binary.readInt32 };
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.EdgeTpuDeviceSpec.serializeBinaryToWriter);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeRepeatedString(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.EdgeTpuDeviceSpec, proto.tflite.proto.EdgeTpuDeviceSpec.internalDoNotUse$proto$tflite$proto$EdgeTpuDeviceSpec$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.EdgeTpuDeviceSpec.internalDoNotUse$proto$tflite$proto$EdgeTpuDeviceSpec$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.EdgeTpuDeviceSpec, a2);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.repeatedFields_ = [3];
    proto.tflite.proto.EdgeTpuDeviceSpec.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.EdgeTpuDeviceSpec.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.EdgeTpuDeviceSpec();
      a2.platformType != null && b2.internal_setField(1, a2.platformType);
      a2.numChips != null && b2.internal_setField(2, a2.numChips);
      a2.devicePathsList != null && b2.internal_setRepeatedField(3, a2.devicePathsList);
      a2.chipFamily != null && b2.internal_setField(4, a2.chipFamily);
      return b2;
    });
    proto.tflite.proto.EdgeTpuDeviceSpec.prototype.toObject = function(a2) {
      return proto.tflite.proto.EdgeTpuDeviceSpec.internal_toObject(a2, this);
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { platformType: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), numChips: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), devicePathsList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(3)), chipFamily: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.EdgeTpuDeviceSpec.PlatformType = { MMIO: 0, REFERENCE: 1, SIMULATOR: 2, REMOTE_SIMULATOR: 3 };
    proto.tflite.proto.EdgeTpuInactivePowerConfig = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.EdgeTpuInactivePowerConfig, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.getInactivePowerState = function() {
      return this.internal_getFieldWithDefault(1, 0);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.setInactivePowerState = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.clearInactivePowerState = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.hasInactivePowerState = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.getInactiveTimeoutUs = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.setInactiveTimeoutUs = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.clearInactiveTimeoutUs = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.hasInactiveTimeoutUs = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.internalDoNotUse$proto$tflite$proto$EdgeTpuInactivePowerConfig$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: jspb.internal.binary.readInt64 };
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.EdgeTpuInactivePowerConfig.serializeBinaryToWriter);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.EdgeTpuInactivePowerConfig, proto.tflite.proto.EdgeTpuInactivePowerConfig.internalDoNotUse$proto$tflite$proto$EdgeTpuInactivePowerConfig$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.EdgeTpuInactivePowerConfig.internalDoNotUse$proto$tflite$proto$EdgeTpuInactivePowerConfig$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.EdgeTpuInactivePowerConfig, a2);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.EdgeTpuInactivePowerConfig.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.EdgeTpuInactivePowerConfig();
      a2.inactivePowerState != null && b2.internal_setField(1, a2.inactivePowerState);
      a2.inactiveTimeoutUs != null && b2.internal_setField(2, a2.inactiveTimeoutUs);
      return b2;
    });
    proto.tflite.proto.EdgeTpuInactivePowerConfig.prototype.toObject = function(a2) {
      return proto.tflite.proto.EdgeTpuInactivePowerConfig.internal_toObject(a2, this);
    };
    proto.tflite.proto.EdgeTpuInactivePowerConfig.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { inactivePowerState: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), inactiveTimeoutUs: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.EdgeTpuSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.proto.EdgeTpuSettings.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.proto.EdgeTpuSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.EdgeTpuSettings.prototype.getInferencePowerState = function() {
      return this.internal_getFieldWithDefault(1, 0);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setInferencePowerState = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearInferencePowerState = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.hasInferencePowerState = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.getInactivePowerConfigsList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.proto.EdgeTpuInactivePowerConfig, 2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setInactivePowerConfigsList = function(a2) {
      return this.internal_setRepeatedWrapperField(2, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.addInactivePowerConfigs = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(2, a2, proto.tflite.proto.EdgeTpuInactivePowerConfig, b2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.addAndReturnInactivePowerConfigs = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(2, a2, proto.tflite.proto.EdgeTpuInactivePowerConfig, b2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearInactivePowerConfigsList = function() {
      return this.internal_clearRepeatedWrapperField(2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.getInferencePriority = function() {
      return this.internal_getIntegerFieldWithDefault(3, -1);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setInferencePriority = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearInferencePriority = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.hasInferencePriority = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.getEdgetpuDeviceSpec = function() {
      return this.internal_getWrapperField(proto.tflite.proto.EdgeTpuDeviceSpec, 4);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setEdgetpuDeviceSpec = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearEdgetpuDeviceSpec = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.hasEdgetpuDeviceSpec = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.getModelToken = function() {
      return this.internal_getStringFieldWithDefault(5);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearModelToken = function() {
      return this.internal_clearField(5);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.hasModelToken = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.getFloatTruncationType = function() {
      return this.internal_getFieldWithDefault(6, 0);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.setFloatTruncationType = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.clearFloatTruncationType = function() {
      return this.internal_clearField(6);
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.hasFloatTruncationType = function() {
      return this.internal_hasField(6);
    };
    proto.tflite.proto.EdgeTpuSettings.internalDoNotUse$proto$tflite$proto$EdgeTpuSettings$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readEnum,
        2: [jspb.internal.binary.readRepeatedMessage, proto.tflite.proto.EdgeTpuInactivePowerConfig, proto.tflite.proto.EdgeTpuInactivePowerConfig.internalDoNotUse$proto$tflite$proto$EdgeTpuInactivePowerConfig$getBinaryFieldsObject],
        3: jspb.internal.binary.readInt32,
        4: [jspb.internal.binary.readMessage, proto.tflite.proto.EdgeTpuDeviceSpec, proto.tflite.proto.EdgeTpuDeviceSpec.internalDoNotUse$proto$tflite$proto$EdgeTpuDeviceSpec$getBinaryFieldsObject],
        5: jspb.internal.binary.readString,
        6: jspb.internal.binary.readEnum
      };
    };
    proto.tflite.proto.EdgeTpuSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.EdgeTpuSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.EdgeTpuSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 2, proto.tflite.proto.EdgeTpuInactivePowerConfig, proto.tflite.proto.EdgeTpuInactivePowerConfig.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.tflite.proto.EdgeTpuDeviceSpec, proto.tflite.proto.EdgeTpuDeviceSpec.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 5);
      jspb.internal.binary.writeEnum(b2, a2, 6);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.EdgeTpuSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.EdgeTpuSettings, proto.tflite.proto.EdgeTpuSettings.internalDoNotUse$proto$tflite$proto$EdgeTpuSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.EdgeTpuSettings.internalDoNotUse$proto$tflite$proto$EdgeTpuSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.EdgeTpuSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.EdgeTpuSettings, a2);
    };
    proto.tflite.proto.EdgeTpuSettings.repeatedFields_ = [2];
    proto.tflite.proto.EdgeTpuSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.EdgeTpuSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.EdgeTpuSettings();
      a2.inferencePowerState != null && b2.internal_setField(1, a2.inferencePowerState);
      a2.inactivePowerConfigsList && b2.internal_setRepeatedWrapperField(2, a2.inactivePowerConfigsList.map(proto.tflite.proto.EdgeTpuInactivePowerConfig.fromObject));
      a2.inferencePriority != null && b2.internal_setField(3, a2.inferencePriority);
      a2.edgetpuDeviceSpec && b2.internal_setWrapperField(4, proto.tflite.proto.EdgeTpuDeviceSpec.fromObject(a2.edgetpuDeviceSpec));
      a2.modelToken != null && b2.internal_setField(5, a2.modelToken);
      a2.floatTruncationType != null && b2.internal_setField(6, a2.floatTruncationType);
      return b2;
    });
    proto.tflite.proto.EdgeTpuSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.EdgeTpuSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.EdgeTpuSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { inferencePowerState: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), inactivePowerConfigsList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getInactivePowerConfigsList(), proto.tflite.proto.EdgeTpuInactivePowerConfig.internal_toObject, a2), inferencePriority: b2.internal_getIntegerFieldWithDefault(3, -1), edgetpuDeviceSpec: proto.tflite.proto.EdgeTpuDeviceSpec.internal_toObject(a2, b2.getEdgetpuDeviceSpec()), modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(5)), floatTruncationType: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(6)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.EdgeTpuSettings.FloatTruncationType = { UNSPECIFIED: 0, NO_TRUNCATION: 1, BFLOAT16: 2, HALF: 3 };
    proto.tflite.proto.FallbackSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.FallbackSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.FallbackSettings.prototype.getAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_getBooleanFieldWithDefault(7);
    };
    proto.tflite.proto.FallbackSettings.prototype.setAllowAutomaticFallbackOnCompilationError = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.proto.FallbackSettings.prototype.clearAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.proto.FallbackSettings.prototype.hasAllowAutomaticFallbackOnCompilationError = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.proto.FallbackSettings.prototype.getAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_getBooleanFieldWithDefault(8);
    };
    proto.tflite.proto.FallbackSettings.prototype.setAllowAutomaticFallbackOnExecutionError = function(a2) {
      return this.internal_setField(8, a2);
    };
    proto.tflite.proto.FallbackSettings.prototype.clearAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_clearField(8);
    };
    proto.tflite.proto.FallbackSettings.prototype.hasAllowAutomaticFallbackOnExecutionError = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.proto.FallbackSettings.internalDoNotUse$proto$tflite$proto$FallbackSettings$getBinaryFieldsObject = function() {
      return { 7: jspb.internal.binary.readBool, 8: jspb.internal.binary.readBool };
    };
    proto.tflite.proto.FallbackSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.FallbackSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.FallbackSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBool(b2, a2, 7);
      jspb.internal.binary.writeBool(b2, a2, 8);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.FallbackSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.FallbackSettings, proto.tflite.proto.FallbackSettings.internalDoNotUse$proto$tflite$proto$FallbackSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.FallbackSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.FallbackSettings.internalDoNotUse$proto$tflite$proto$FallbackSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.FallbackSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.FallbackSettings, a2);
    };
    proto.tflite.proto.FallbackSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.FallbackSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.FallbackSettings();
      a2.allowAutomaticFallbackOnCompilationError != null && b2.internal_setField(7, a2.allowAutomaticFallbackOnCompilationError);
      a2.allowAutomaticFallbackOnExecutionError != null && b2.internal_setField(8, a2.allowAutomaticFallbackOnExecutionError);
      return b2;
    });
    proto.tflite.proto.FallbackSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.FallbackSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.FallbackSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { allowAutomaticFallbackOnCompilationError: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(7)), allowAutomaticFallbackOnExecutionError: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(8)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.GPUSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.GPUSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.GPUSettings.prototype.getIsPrecisionLossAllowed = function() {
      return this.internal_getBooleanFieldWithDefault(1);
    };
    proto.tflite.proto.GPUSettings.prototype.setIsPrecisionLossAllowed = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearIsPrecisionLossAllowed = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.GPUSettings.prototype.hasIsPrecisionLossAllowed = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.GPUSettings.prototype.getEnableQuantizedInference = function() {
      return this.internal_getBooleanFieldWithDefault(2, true);
    };
    proto.tflite.proto.GPUSettings.prototype.setEnableQuantizedInference = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearEnableQuantizedInference = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.GPUSettings.prototype.hasEnableQuantizedInference = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.GPUSettings.prototype.getForceBackend = function() {
      return this.internal_getFieldWithDefault(3, 0);
    };
    proto.tflite.proto.GPUSettings.prototype.setForceBackend = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearForceBackend = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.GPUSettings.prototype.hasForceBackend = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.GPUSettings.prototype.getInferencePriority1 = function() {
      return this.internal_getFieldWithDefault(4, 0);
    };
    proto.tflite.proto.GPUSettings.prototype.setInferencePriority1 = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearInferencePriority1 = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.GPUSettings.prototype.hasInferencePriority1 = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.GPUSettings.prototype.getInferencePriority2 = function() {
      return this.internal_getFieldWithDefault(5, 0);
    };
    proto.tflite.proto.GPUSettings.prototype.setInferencePriority2 = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearInferencePriority2 = function() {
      return this.internal_clearField(5);
    };
    proto.tflite.proto.GPUSettings.prototype.hasInferencePriority2 = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.proto.GPUSettings.prototype.getInferencePriority3 = function() {
      return this.internal_getFieldWithDefault(6, 0);
    };
    proto.tflite.proto.GPUSettings.prototype.setInferencePriority3 = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearInferencePriority3 = function() {
      return this.internal_clearField(6);
    };
    proto.tflite.proto.GPUSettings.prototype.hasInferencePriority3 = function() {
      return this.internal_hasField(6);
    };
    proto.tflite.proto.GPUSettings.prototype.getInferencePreference = function() {
      return this.internal_getFieldWithDefault(7, 0);
    };
    proto.tflite.proto.GPUSettings.prototype.setInferencePreference = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearInferencePreference = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.proto.GPUSettings.prototype.hasInferencePreference = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.proto.GPUSettings.prototype.getCacheDirectory = function() {
      return this.internal_getStringFieldWithDefault(8);
    };
    proto.tflite.proto.GPUSettings.prototype.setCacheDirectory = function(a2) {
      return this.internal_setField(8, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearCacheDirectory = function() {
      return this.internal_clearField(8);
    };
    proto.tflite.proto.GPUSettings.prototype.hasCacheDirectory = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.proto.GPUSettings.prototype.getModelToken = function() {
      return this.internal_getStringFieldWithDefault(9);
    };
    proto.tflite.proto.GPUSettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(9, a2);
    };
    proto.tflite.proto.GPUSettings.prototype.clearModelToken = function() {
      return this.internal_clearField(9);
    };
    proto.tflite.proto.GPUSettings.prototype.hasModelToken = function() {
      return this.internal_hasField(9);
    };
    proto.tflite.proto.GPUSettings.internalDoNotUse$proto$tflite$proto$GPUSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readBool, 2: jspb.internal.binary.readBool, 3: jspb.internal.binary.readEnum, 4: jspb.internal.binary.readEnum, 5: jspb.internal.binary.readEnum, 6: jspb.internal.binary.readEnum, 7: jspb.internal.binary.readEnum, 8: jspb.internal.binary.readString, 9: jspb.internal.binary.readString };
    };
    proto.tflite.proto.GPUSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.GPUSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.GPUSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBool(b2, a2, 1);
      jspb.internal.binary.writeBool(b2, a2, 2);
      jspb.internal.binary.writeEnum(b2, a2, 3);
      jspb.internal.binary.writeEnum(b2, a2, 4);
      jspb.internal.binary.writeEnum(b2, a2, 5);
      jspb.internal.binary.writeEnum(b2, a2, 6);
      jspb.internal.binary.writeEnum(b2, a2, 7);
      jspb.internal.binary.writeString(b2, a2, 8);
      jspb.internal.binary.writeString(b2, a2, 9);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.GPUSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.GPUSettings, proto.tflite.proto.GPUSettings.internalDoNotUse$proto$tflite$proto$GPUSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.GPUSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.GPUSettings.internalDoNotUse$proto$tflite$proto$GPUSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.GPUSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.GPUSettings, a2);
    };
    proto.tflite.proto.GPUSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.GPUSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.GPUSettings();
      a2.isPrecisionLossAllowed != null && b2.internal_setField(1, a2.isPrecisionLossAllowed);
      a2.enableQuantizedInference != null && b2.internal_setField(2, a2.enableQuantizedInference);
      a2.forceBackend != null && b2.internal_setField(3, a2.forceBackend);
      a2.inferencePriority1 != null && b2.internal_setField(4, a2.inferencePriority1);
      a2.inferencePriority2 != null && b2.internal_setField(5, a2.inferencePriority2);
      a2.inferencePriority3 != null && b2.internal_setField(6, a2.inferencePriority3);
      a2.inferencePreference != null && b2.internal_setField(7, a2.inferencePreference);
      a2.cacheDirectory != null && b2.internal_setField(8, a2.cacheDirectory);
      a2.modelToken != null && b2.internal_setField(9, a2.modelToken);
      return b2;
    });
    proto.tflite.proto.GPUSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.GPUSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.GPUSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { isPrecisionLossAllowed: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(1)), enableQuantizedInference: b2.internal_getBooleanFieldWithDefault(2, true), forceBackend: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), inferencePriority1: b2.internal_getFieldWithDefault(4, 0), inferencePriority2: b2.internal_getFieldWithDefault(5, 0), inferencePriority3: b2.internal_getFieldWithDefault(6, 0), inferencePreference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(7)), cacheDirectory: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(8)), modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(9)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.HexagonSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.HexagonSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.HexagonSettings.prototype.getDebugLevel = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.proto.HexagonSettings.prototype.setDebugLevel = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.HexagonSettings.prototype.clearDebugLevel = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.HexagonSettings.prototype.hasDebugLevel = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.HexagonSettings.prototype.getPowersaveLevel = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.proto.HexagonSettings.prototype.setPowersaveLevel = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.HexagonSettings.prototype.clearPowersaveLevel = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.HexagonSettings.prototype.hasPowersaveLevel = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.HexagonSettings.prototype.getPrintGraphProfile = function() {
      return this.internal_getBooleanFieldWithDefault(3);
    };
    proto.tflite.proto.HexagonSettings.prototype.setPrintGraphProfile = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.HexagonSettings.prototype.clearPrintGraphProfile = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.HexagonSettings.prototype.hasPrintGraphProfile = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.HexagonSettings.prototype.getPrintGraphDebug = function() {
      return this.internal_getBooleanFieldWithDefault(4);
    };
    proto.tflite.proto.HexagonSettings.prototype.setPrintGraphDebug = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.HexagonSettings.prototype.clearPrintGraphDebug = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.HexagonSettings.prototype.hasPrintGraphDebug = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.HexagonSettings.internalDoNotUse$proto$tflite$proto$HexagonSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32, 2: jspb.internal.binary.readInt32, 3: jspb.internal.binary.readBool, 4: jspb.internal.binary.readBool };
    };
    proto.tflite.proto.HexagonSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.HexagonSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.HexagonSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeBool(b2, a2, 3);
      jspb.internal.binary.writeBool(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.HexagonSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.HexagonSettings, proto.tflite.proto.HexagonSettings.internalDoNotUse$proto$tflite$proto$HexagonSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.HexagonSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.HexagonSettings.internalDoNotUse$proto$tflite$proto$HexagonSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.HexagonSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.HexagonSettings, a2);
    };
    proto.tflite.proto.HexagonSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.HexagonSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.HexagonSettings();
      a2.debugLevel != null && b2.internal_setField(1, a2.debugLevel);
      a2.powersaveLevel != null && b2.internal_setField(2, a2.powersaveLevel);
      a2.printGraphProfile != null && b2.internal_setField(3, a2.printGraphProfile);
      a2.printGraphDebug != null && b2.internal_setField(4, a2.printGraphDebug);
      return b2;
    });
    proto.tflite.proto.HexagonSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.HexagonSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.HexagonSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { debugLevel: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), powersaveLevel: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), printGraphProfile: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(3)), printGraphDebug: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.NNAPISettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.NNAPISettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.NNAPISettings.prototype.getAcceleratorName = function() {
      return this.internal_getStringFieldWithDefault(1);
    };
    proto.tflite.proto.NNAPISettings.prototype.setAcceleratorName = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearAcceleratorName = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasAcceleratorName = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.NNAPISettings.prototype.getCacheDirectory = function() {
      return this.internal_getStringFieldWithDefault(2);
    };
    proto.tflite.proto.NNAPISettings.prototype.setCacheDirectory = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearCacheDirectory = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasCacheDirectory = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.NNAPISettings.prototype.getModelToken = function() {
      return this.internal_getStringFieldWithDefault(3);
    };
    proto.tflite.proto.NNAPISettings.prototype.setModelToken = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearModelToken = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasModelToken = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.NNAPISettings.prototype.getExecutionPreference = function() {
      return this.internal_getFieldWithDefault(4, 0);
    };
    proto.tflite.proto.NNAPISettings.prototype.setExecutionPreference = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearExecutionPreference = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasExecutionPreference = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.NNAPISettings.prototype.getNoOfNnapiInstancesToCache = function() {
      return this.internal_getIntegerFieldWithDefault(5);
    };
    proto.tflite.proto.NNAPISettings.prototype.setNoOfNnapiInstancesToCache = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearNoOfNnapiInstancesToCache = function() {
      return this.internal_clearField(5);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasNoOfNnapiInstancesToCache = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.proto.NNAPISettings.prototype.getFallbackSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.FallbackSettings, 6);
    };
    proto.tflite.proto.NNAPISettings.prototype.setFallbackSettings = function(a2) {
      return this.internal_setWrapperField(6, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearFallbackSettings = function() {
      return this.internal_clearWrapperField(6);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasFallbackSettings = function() {
      return this.internal_hasField(6);
    };
    proto.tflite.proto.NNAPISettings.prototype.getAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_getBooleanFieldWithDefault(7);
    };
    proto.tflite.proto.NNAPISettings.prototype.setAllowNnapiCpuOnAndroid10Plus = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasAllowNnapiCpuOnAndroid10Plus = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.proto.NNAPISettings.prototype.getExecutionPriority = function() {
      return this.internal_getFieldWithDefault(8, 0);
    };
    proto.tflite.proto.NNAPISettings.prototype.setExecutionPriority = function(a2) {
      return this.internal_setField(8, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearExecutionPriority = function() {
      return this.internal_clearField(8);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasExecutionPriority = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.proto.NNAPISettings.prototype.getAllowDynamicDimensions = function() {
      return this.internal_getBooleanFieldWithDefault(9);
    };
    proto.tflite.proto.NNAPISettings.prototype.setAllowDynamicDimensions = function(a2) {
      return this.internal_setField(9, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearAllowDynamicDimensions = function() {
      return this.internal_clearField(9);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasAllowDynamicDimensions = function() {
      return this.internal_hasField(9);
    };
    proto.tflite.proto.NNAPISettings.prototype.getAllowFp16PrecisionForFp32 = function() {
      return this.internal_getBooleanFieldWithDefault(10);
    };
    proto.tflite.proto.NNAPISettings.prototype.setAllowFp16PrecisionForFp32 = function(a2) {
      return this.internal_setField(10, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearAllowFp16PrecisionForFp32 = function() {
      return this.internal_clearField(10);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasAllowFp16PrecisionForFp32 = function() {
      return this.internal_hasField(10);
    };
    proto.tflite.proto.NNAPISettings.prototype.getUseBurstComputation = function() {
      return this.internal_getBooleanFieldWithDefault(11);
    };
    proto.tflite.proto.NNAPISettings.prototype.setUseBurstComputation = function(a2) {
      return this.internal_setField(11, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearUseBurstComputation = function() {
      return this.internal_clearField(11);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasUseBurstComputation = function() {
      return this.internal_hasField(11);
    };
    proto.tflite.proto.NNAPISettings.prototype.getSupportLibraryHandle = function() {
      return this.internal_getIntegerFieldWithDefault(12);
    };
    proto.tflite.proto.NNAPISettings.prototype.setSupportLibraryHandle = function(a2) {
      return this.internal_setField(12, a2);
    };
    proto.tflite.proto.NNAPISettings.prototype.clearSupportLibraryHandle = function() {
      return this.internal_clearField(12);
    };
    proto.tflite.proto.NNAPISettings.prototype.hasSupportLibraryHandle = function() {
      return this.internal_hasField(12);
    };
    proto.tflite.proto.NNAPISettings.internalDoNotUse$proto$tflite$proto$NNAPISettings$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readString,
        2: jspb.internal.binary.readString,
        3: jspb.internal.binary.readString,
        4: jspb.internal.binary.readEnum,
        5: jspb.internal.binary.readInt32,
        6: [jspb.internal.binary.readMessage, proto.tflite.proto.FallbackSettings, proto.tflite.proto.FallbackSettings.internalDoNotUse$proto$tflite$proto$FallbackSettings$getBinaryFieldsObject],
        7: jspb.internal.binary.readBool,
        8: jspb.internal.binary.readEnum,
        9: jspb.internal.binary.readBool,
        10: jspb.internal.binary.readBool,
        11: jspb.internal.binary.readBool,
        12: jspb.internal.binary.readInt64
      };
    };
    proto.tflite.proto.NNAPISettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.NNAPISettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.NNAPISettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.writeString(b2, a2, 3);
      jspb.internal.binary.writeEnum(b2, a2, 4);
      jspb.internal.binary.writeInt32(b2, a2, 5);
      jspb.internal.binary.writeMessage(b2, a2, 6, proto.tflite.proto.FallbackSettings, proto.tflite.proto.FallbackSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeBool(b2, a2, 7);
      jspb.internal.binary.writeEnum(b2, a2, 8);
      jspb.internal.binary.writeBool(b2, a2, 9);
      jspb.internal.binary.writeBool(b2, a2, 10);
      jspb.internal.binary.writeBool(b2, a2, 11);
      jspb.internal.binary.writeInt64(b2, a2, 12);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.NNAPISettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.NNAPISettings, proto.tflite.proto.NNAPISettings.internalDoNotUse$proto$tflite$proto$NNAPISettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.NNAPISettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.NNAPISettings.internalDoNotUse$proto$tflite$proto$NNAPISettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.NNAPISettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.NNAPISettings, a2);
    };
    proto.tflite.proto.NNAPISettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.NNAPISettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.NNAPISettings();
      a2.acceleratorName != null && b2.internal_setField(1, a2.acceleratorName);
      a2.cacheDirectory != null && b2.internal_setField(2, a2.cacheDirectory);
      a2.modelToken != null && b2.internal_setField(3, a2.modelToken);
      a2.executionPreference != null && b2.internal_setField(4, a2.executionPreference);
      a2.noOfNnapiInstancesToCache != null && b2.internal_setField(5, a2.noOfNnapiInstancesToCache);
      a2.fallbackSettings && b2.internal_setWrapperField(6, proto.tflite.proto.FallbackSettings.fromObject(a2.fallbackSettings));
      a2.allowNnapiCpuOnAndroid10Plus != null && b2.internal_setField(7, a2.allowNnapiCpuOnAndroid10Plus);
      a2.executionPriority != null && b2.internal_setField(8, a2.executionPriority);
      a2.allowDynamicDimensions != null && b2.internal_setField(9, a2.allowDynamicDimensions);
      a2.allowFp16PrecisionForFp32 != null && b2.internal_setField(10, a2.allowFp16PrecisionForFp32);
      a2.useBurstComputation != null && b2.internal_setField(11, a2.useBurstComputation);
      a2.supportLibraryHandle != null && b2.internal_setField(12, a2.supportLibraryHandle);
      return b2;
    });
    proto.tflite.proto.NNAPISettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.NNAPISettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.NNAPISettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = {
          acceleratorName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)),
          cacheDirectory: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)),
          modelToken: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)),
          executionPreference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)),
          noOfNnapiInstancesToCache: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(5)),
          fallbackSettings: proto.tflite.proto.FallbackSettings.internal_toObject(a2, b2.getFallbackSettings()),
          allowNnapiCpuOnAndroid10Plus: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(7)),
          executionPriority: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(8)),
          allowDynamicDimensions: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(9)),
          allowFp16PrecisionForFp32: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(10)),
          useBurstComputation: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getBooleanField(11)),
          supportLibraryHandle: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(12))
        };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.XNNPackSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.XNNPackSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.XNNPackSettings.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.proto.XNNPackSettings.prototype.setNumThreads = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.XNNPackSettings.prototype.clearNumThreads = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.XNNPackSettings.prototype.hasNumThreads = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.XNNPackSettings.internalDoNotUse$proto$tflite$proto$XNNPackSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32 };
    };
    proto.tflite.proto.XNNPackSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.XNNPackSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.XNNPackSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.XNNPackSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.XNNPackSettings, proto.tflite.proto.XNNPackSettings.internalDoNotUse$proto$tflite$proto$XNNPackSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.XNNPackSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.XNNPackSettings.internalDoNotUse$proto$tflite$proto$XNNPackSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.XNNPackSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.XNNPackSettings, a2);
    };
    proto.tflite.proto.XNNPackSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.XNNPackSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.XNNPackSettings();
      a2.numThreads != null && b2.internal_setField(1, a2.numThreads);
      return b2;
    });
    proto.tflite.proto.XNNPackSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.XNNPackSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.XNNPackSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { numThreads: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.TFLiteSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.TFLiteSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.TFLiteSettings.prototype.getDelegate = function() {
      return this.internal_getFieldWithDefault(1, 0);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setDelegate = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearDelegate = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasDelegate = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getNnapiSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.NNAPISettings, 2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setNnapiSettings = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearNnapiSettings = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasNnapiSettings = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getGpuSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.GPUSettings, 3);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setGpuSettings = function(a2) {
      return this.internal_setWrapperField(3, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearGpuSettings = function() {
      return this.internal_clearWrapperField(3);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasGpuSettings = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getHexagonSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.HexagonSettings, 4);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setHexagonSettings = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearHexagonSettings = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasHexagonSettings = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getXnnpackSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.XNNPackSettings, 5);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setXnnpackSettings = function(a2) {
      return this.internal_setWrapperField(5, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearXnnpackSettings = function() {
      return this.internal_clearWrapperField(5);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasXnnpackSettings = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getCpuSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.CPUSettings, 6);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setCpuSettings = function(a2) {
      return this.internal_setWrapperField(6, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearCpuSettings = function() {
      return this.internal_clearWrapperField(6);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasCpuSettings = function() {
      return this.internal_hasField(6);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getMaxDelegatedPartitions = function() {
      return this.internal_getIntegerFieldWithDefault(7);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setMaxDelegatedPartitions = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearMaxDelegatedPartitions = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasMaxDelegatedPartitions = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getEdgetpuSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.EdgeTpuSettings, 8);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setEdgetpuSettings = function(a2) {
      return this.internal_setWrapperField(8, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearEdgetpuSettings = function() {
      return this.internal_clearWrapperField(8);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasEdgetpuSettings = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getCoralSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.CoralSettings, 10);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setCoralSettings = function(a2) {
      return this.internal_setWrapperField(10, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearCoralSettings = function() {
      return this.internal_clearWrapperField(10);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasCoralSettings = function() {
      return this.internal_hasField(10);
    };
    proto.tflite.proto.TFLiteSettings.prototype.getFallbackSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.FallbackSettings, 9);
    };
    proto.tflite.proto.TFLiteSettings.prototype.setFallbackSettings = function(a2) {
      return this.internal_setWrapperField(9, a2);
    };
    proto.tflite.proto.TFLiteSettings.prototype.clearFallbackSettings = function() {
      return this.internal_clearWrapperField(9);
    };
    proto.tflite.proto.TFLiteSettings.prototype.hasFallbackSettings = function() {
      return this.internal_hasField(9);
    };
    proto.tflite.proto.TFLiteSettings.internalDoNotUse$proto$tflite$proto$TFLiteSettings$getBinaryFieldsObject = function() {
      return {
        1: jspb.internal.binary.readEnum,
        2: [jspb.internal.binary.readMessage, proto.tflite.proto.NNAPISettings, proto.tflite.proto.NNAPISettings.internalDoNotUse$proto$tflite$proto$NNAPISettings$getBinaryFieldsObject],
        3: [jspb.internal.binary.readMessage, proto.tflite.proto.GPUSettings, proto.tflite.proto.GPUSettings.internalDoNotUse$proto$tflite$proto$GPUSettings$getBinaryFieldsObject],
        4: [jspb.internal.binary.readMessage, proto.tflite.proto.HexagonSettings, proto.tflite.proto.HexagonSettings.internalDoNotUse$proto$tflite$proto$HexagonSettings$getBinaryFieldsObject],
        5: [jspb.internal.binary.readMessage, proto.tflite.proto.XNNPackSettings, proto.tflite.proto.XNNPackSettings.internalDoNotUse$proto$tflite$proto$XNNPackSettings$getBinaryFieldsObject],
        6: [jspb.internal.binary.readMessage, proto.tflite.proto.CPUSettings, proto.tflite.proto.CPUSettings.internalDoNotUse$proto$tflite$proto$CPUSettings$getBinaryFieldsObject],
        7: jspb.internal.binary.readInt32,
        8: [jspb.internal.binary.readMessage, proto.tflite.proto.EdgeTpuSettings, proto.tflite.proto.EdgeTpuSettings.internalDoNotUse$proto$tflite$proto$EdgeTpuSettings$getBinaryFieldsObject],
        10: [jspb.internal.binary.readMessage, proto.tflite.proto.CoralSettings, proto.tflite.proto.CoralSettings.internalDoNotUse$proto$tflite$proto$CoralSettings$getBinaryFieldsObject],
        9: [jspb.internal.binary.readMessage, proto.tflite.proto.FallbackSettings, proto.tflite.proto.FallbackSettings.internalDoNotUse$proto$tflite$proto$FallbackSettings$getBinaryFieldsObject]
      };
    };
    proto.tflite.proto.TFLiteSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.TFLiteSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.TFLiteSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.tflite.proto.NNAPISettings, proto.tflite.proto.NNAPISettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 3, proto.tflite.proto.GPUSettings, proto.tflite.proto.GPUSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.tflite.proto.HexagonSettings, proto.tflite.proto.HexagonSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 5, proto.tflite.proto.XNNPackSettings, proto.tflite.proto.XNNPackSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 6, proto.tflite.proto.CPUSettings, proto.tflite.proto.CPUSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 7);
      jspb.internal.binary.writeMessage(b2, a2, 8, proto.tflite.proto.EdgeTpuSettings, proto.tflite.proto.EdgeTpuSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 10, proto.tflite.proto.CoralSettings, proto.tflite.proto.CoralSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 9, proto.tflite.proto.FallbackSettings, proto.tflite.proto.FallbackSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.TFLiteSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.TFLiteSettings, proto.tflite.proto.TFLiteSettings.internalDoNotUse$proto$tflite$proto$TFLiteSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.TFLiteSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.TFLiteSettings.internalDoNotUse$proto$tflite$proto$TFLiteSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.TFLiteSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.TFLiteSettings, a2);
    };
    proto.tflite.proto.TFLiteSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.TFLiteSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.TFLiteSettings();
      a2.delegate != null && b2.internal_setField(1, a2.delegate);
      a2.nnapiSettings && b2.internal_setWrapperField(2, proto.tflite.proto.NNAPISettings.fromObject(a2.nnapiSettings));
      a2.gpuSettings && b2.internal_setWrapperField(3, proto.tflite.proto.GPUSettings.fromObject(a2.gpuSettings));
      a2.hexagonSettings && b2.internal_setWrapperField(4, proto.tflite.proto.HexagonSettings.fromObject(a2.hexagonSettings));
      a2.xnnpackSettings && b2.internal_setWrapperField(5, proto.tflite.proto.XNNPackSettings.fromObject(a2.xnnpackSettings));
      a2.cpuSettings && b2.internal_setWrapperField(6, proto.tflite.proto.CPUSettings.fromObject(a2.cpuSettings));
      a2.maxDelegatedPartitions != null && b2.internal_setField(7, a2.maxDelegatedPartitions);
      a2.edgetpuSettings && b2.internal_setWrapperField(8, proto.tflite.proto.EdgeTpuSettings.fromObject(a2.edgetpuSettings));
      a2.coralSettings && b2.internal_setWrapperField(10, proto.tflite.proto.CoralSettings.fromObject(a2.coralSettings));
      a2.fallbackSettings && b2.internal_setWrapperField(9, proto.tflite.proto.FallbackSettings.fromObject(a2.fallbackSettings));
      return b2;
    });
    proto.tflite.proto.TFLiteSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.TFLiteSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.TFLiteSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { delegate: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), nnapiSettings: proto.tflite.proto.NNAPISettings.internal_toObject(a2, b2.getNnapiSettings()), gpuSettings: proto.tflite.proto.GPUSettings.internal_toObject(a2, b2.getGpuSettings()), hexagonSettings: proto.tflite.proto.HexagonSettings.internal_toObject(a2, b2.getHexagonSettings()), xnnpackSettings: proto.tflite.proto.XNNPackSettings.internal_toObject(a2, b2.getXnnpackSettings()), cpuSettings: proto.tflite.proto.CPUSettings.internal_toObject(a2, b2.getCpuSettings()), maxDelegatedPartitions: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(7)), edgetpuSettings: proto.tflite.proto.EdgeTpuSettings.internal_toObject(a2, b2.getEdgetpuSettings()), coralSettings: proto.tflite.proto.CoralSettings.internal_toObject(a2, b2.getCoralSettings()), fallbackSettings: proto.tflite.proto.FallbackSettings.internal_toObject(a2, b2.getFallbackSettings()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.MinibenchmarkSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.proto.MinibenchmarkSettings.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.proto.MinibenchmarkSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.MinibenchmarkSettings.prototype.getSettingsToTestList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.proto.TFLiteSettings, 1);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.setSettingsToTestList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.addSettingsToTest = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.proto.TFLiteSettings, b2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.addAndReturnSettingsToTest = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.proto.TFLiteSettings, b2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.clearSettingsToTestList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.getModelFile = function() {
      return this.internal_getWrapperField(proto.tflite.proto.ModelFile, 2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.setModelFile = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.clearModelFile = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.hasModelFile = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.getStoragePaths = function() {
      return this.internal_getWrapperField(proto.tflite.proto.BenchmarkStoragePaths, 3);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.setStoragePaths = function(a2) {
      return this.internal_setWrapperField(3, a2);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.clearStoragePaths = function() {
      return this.internal_clearWrapperField(3);
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.hasStoragePaths = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.MinibenchmarkSettings.internalDoNotUse$proto$tflite$proto$MinibenchmarkSettings$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.proto.TFLiteSettings, proto.tflite.proto.TFLiteSettings.internalDoNotUse$proto$tflite$proto$TFLiteSettings$getBinaryFieldsObject], 2: [jspb.internal.binary.readMessage, proto.tflite.proto.ModelFile, proto.tflite.proto.ModelFile.internalDoNotUse$proto$tflite$proto$ModelFile$getBinaryFieldsObject], 3: [
        jspb.internal.binary.readMessage,
        proto.tflite.proto.BenchmarkStoragePaths,
        proto.tflite.proto.BenchmarkStoragePaths.internalDoNotUse$proto$tflite$proto$BenchmarkStoragePaths$getBinaryFieldsObject
      ] };
    };
    proto.tflite.proto.MinibenchmarkSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.MinibenchmarkSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.MinibenchmarkSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.proto.TFLiteSettings, proto.tflite.proto.TFLiteSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.tflite.proto.ModelFile, proto.tflite.proto.ModelFile.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 3, proto.tflite.proto.BenchmarkStoragePaths, proto.tflite.proto.BenchmarkStoragePaths.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.MinibenchmarkSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.MinibenchmarkSettings, proto.tflite.proto.MinibenchmarkSettings.internalDoNotUse$proto$tflite$proto$MinibenchmarkSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.MinibenchmarkSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.MinibenchmarkSettings.internalDoNotUse$proto$tflite$proto$MinibenchmarkSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.MinibenchmarkSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.MinibenchmarkSettings, a2);
    };
    proto.tflite.proto.MinibenchmarkSettings.repeatedFields_ = [1];
    proto.tflite.proto.MinibenchmarkSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.MinibenchmarkSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.MinibenchmarkSettings();
      a2.settingsToTestList && b2.internal_setRepeatedWrapperField(1, a2.settingsToTestList.map(proto.tflite.proto.TFLiteSettings.fromObject));
      a2.modelFile && b2.internal_setWrapperField(2, proto.tflite.proto.ModelFile.fromObject(a2.modelFile));
      a2.storagePaths && b2.internal_setWrapperField(3, proto.tflite.proto.BenchmarkStoragePaths.fromObject(a2.storagePaths));
      return b2;
    });
    proto.tflite.proto.MinibenchmarkSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.MinibenchmarkSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.MinibenchmarkSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { settingsToTestList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getSettingsToTestList(), proto.tflite.proto.TFLiteSettings.internal_toObject, a2), modelFile: proto.tflite.proto.ModelFile.internal_toObject(a2, b2.getModelFile()), storagePaths: proto.tflite.proto.BenchmarkStoragePaths.internal_toObject(a2, b2.getStoragePaths()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.proto.ComputeSettings = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.proto.ComputeSettings, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.proto.ComputeSettings.prototype.getPreference = function() {
      return this.internal_getFieldWithDefault(1, 0);
    };
    proto.tflite.proto.ComputeSettings.prototype.setPreference = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.proto.ComputeSettings.prototype.clearPreference = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.proto.ComputeSettings.prototype.hasPreference = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.proto.ComputeSettings.prototype.getTfliteSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.TFLiteSettings, 2);
    };
    proto.tflite.proto.ComputeSettings.prototype.setTfliteSettings = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.tflite.proto.ComputeSettings.prototype.clearTfliteSettings = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.tflite.proto.ComputeSettings.prototype.hasTfliteSettings = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.proto.ComputeSettings.prototype.getModelNamespaceForStatistics = function() {
      return this.internal_getStringFieldWithDefault(3);
    };
    proto.tflite.proto.ComputeSettings.prototype.setModelNamespaceForStatistics = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.proto.ComputeSettings.prototype.clearModelNamespaceForStatistics = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.proto.ComputeSettings.prototype.hasModelNamespaceForStatistics = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.proto.ComputeSettings.prototype.getModelIdentifierForStatistics = function() {
      return this.internal_getStringFieldWithDefault(4);
    };
    proto.tflite.proto.ComputeSettings.prototype.setModelIdentifierForStatistics = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.proto.ComputeSettings.prototype.clearModelIdentifierForStatistics = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.proto.ComputeSettings.prototype.hasModelIdentifierForStatistics = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.proto.ComputeSettings.prototype.getSettingsToTestLocally = function() {
      return this.internal_getWrapperField(proto.tflite.proto.MinibenchmarkSettings, 5);
    };
    proto.tflite.proto.ComputeSettings.prototype.setSettingsToTestLocally = function(a2) {
      return this.internal_setWrapperField(5, a2);
    };
    proto.tflite.proto.ComputeSettings.prototype.clearSettingsToTestLocally = function() {
      return this.internal_clearWrapperField(5);
    };
    proto.tflite.proto.ComputeSettings.prototype.hasSettingsToTestLocally = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readEnum, 2: [jspb.internal.binary.readMessage, proto.tflite.proto.TFLiteSettings, proto.tflite.proto.TFLiteSettings.internalDoNotUse$proto$tflite$proto$TFLiteSettings$getBinaryFieldsObject], 3: jspb.internal.binary.readString, 4: jspb.internal.binary.readString, 5: [jspb.internal.binary.readMessage, proto.tflite.proto.MinibenchmarkSettings, proto.tflite.proto.MinibenchmarkSettings.internalDoNotUse$proto$tflite$proto$MinibenchmarkSettings$getBinaryFieldsObject] };
    };
    proto.tflite.proto.ComputeSettings.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.proto.ComputeSettings.serializeBinaryToWriter);
    };
    proto.tflite.proto.ComputeSettings.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeEnum(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.tflite.proto.TFLiteSettings, proto.tflite.proto.TFLiteSettings.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 3);
      jspb.internal.binary.writeString(b2, a2, 4);
      jspb.internal.binary.writeMessage(b2, a2, 5, proto.tflite.proto.MinibenchmarkSettings, proto.tflite.proto.MinibenchmarkSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.proto.ComputeSettings.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.ComputeSettings.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject);
    };
    proto.tflite.proto.ComputeSettings.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.proto.ComputeSettings, a2);
    };
    proto.tflite.proto.ComputeSettings.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.proto.ComputeSettings.fromObject = function(a2) {
      var b2 = new proto.tflite.proto.ComputeSettings();
      a2.preference != null && b2.internal_setField(1, a2.preference);
      a2.tfliteSettings && b2.internal_setWrapperField(2, proto.tflite.proto.TFLiteSettings.fromObject(a2.tfliteSettings));
      a2.modelNamespaceForStatistics != null && b2.internal_setField(3, a2.modelNamespaceForStatistics);
      a2.modelIdentifierForStatistics != null && b2.internal_setField(4, a2.modelIdentifierForStatistics);
      a2.settingsToTestLocally && b2.internal_setWrapperField(5, proto.tflite.proto.MinibenchmarkSettings.fromObject(a2.settingsToTestLocally));
      return b2;
    });
    proto.tflite.proto.ComputeSettings.prototype.toObject = function(a2) {
      return proto.tflite.proto.ComputeSettings.internal_toObject(a2, this);
    };
    proto.tflite.proto.ComputeSettings.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = {
          preference: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)),
          tfliteSettings: proto.tflite.proto.TFLiteSettings.internal_toObject(a2, b2.getTfliteSettings()),
          modelNamespaceForStatistics: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)),
          modelIdentifierForStatistics: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)),
          settingsToTestLocally: proto.tflite.proto.MinibenchmarkSettings.internal_toObject(a2, b2.getSettingsToTestLocally())
        };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task = {};
    proto.tflite.task.core = {};
    proto.tflite.task.core.BaseOptions = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.core.BaseOptions, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.core.BaseOptions.prototype.getModelFile = function() {
      return this.internal_getWrapperField(proto.visionkit.ExternalFile, 1);
    };
    proto.tflite.task.core.BaseOptions.prototype.setModelFile = function(a2) {
      return this.internal_setWrapperField(1, a2);
    };
    proto.tflite.task.core.BaseOptions.prototype.clearModelFile = function() {
      return this.internal_clearWrapperField(1);
    };
    proto.tflite.task.core.BaseOptions.prototype.hasModelFile = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.core.BaseOptions.prototype.getComputeSettings = function() {
      return this.internal_getWrapperField(proto.acceleration.Acceleration, 2);
    };
    proto.tflite.task.core.BaseOptions.prototype.setComputeSettings = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.tflite.task.core.BaseOptions.prototype.clearComputeSettings = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.tflite.task.core.BaseOptions.prototype.hasComputeSettings = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readMessage, proto.visionkit.ExternalFile, proto.visionkit.ExternalFile.internalDoNotUse$proto$visionkit$ExternalFile$getBinaryFieldsObject], 2: [jspb.internal.binary.readMessage, proto.acceleration.Acceleration, proto.acceleration.Acceleration.internalDoNotUse$proto$acceleration$Acceleration$getBinaryFieldsObject] };
    };
    proto.tflite.task.core.BaseOptions.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.core.BaseOptions.serializeBinaryToWriter);
    };
    proto.tflite.task.core.BaseOptions.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 1, proto.visionkit.ExternalFile, proto.visionkit.ExternalFile.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.acceleration.Acceleration, proto.acceleration.Acceleration.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.core.BaseOptions.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.core.BaseOptions.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.core.BaseOptions.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.core.BaseOptions, a2);
    };
    proto.tflite.task.core.BaseOptions.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.core.BaseOptions.fromObject = function(a2) {
      var b2 = new proto.tflite.task.core.BaseOptions();
      a2.modelFile && b2.internal_setWrapperField(1, proto.visionkit.ExternalFile.fromObject(a2.modelFile));
      a2.computeSettings && b2.internal_setWrapperField(2, proto.acceleration.Acceleration.fromObject(a2.computeSettings));
      return b2;
    });
    proto.tflite.task.core.BaseOptions.prototype.toObject = function(a2) {
      return proto.tflite.task.core.BaseOptions.internal_toObject(a2, this);
    };
    proto.tflite.task.core.BaseOptions.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { modelFile: proto.visionkit.ExternalFile.internal_toObject(a2, b2.getModelFile()), computeSettings: proto.acceleration.Acceleration.internal_toObject(a2, b2.getComputeSettings()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.core.FileDescriptorMeta = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.core.FileDescriptorMeta, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.core.FileDescriptorMeta.prototype.getFd = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.setFd = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.clearFd = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.hasFd = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.getLength = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.setLength = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.clearLength = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.hasLength = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.getOffset = function() {
      return this.internal_getIntegerFieldWithDefault(3);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.setOffset = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.clearOffset = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.hasOffset = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.core.FileDescriptorMeta.internalDoNotUse$proto$tflite$task$core$FileDescriptorMeta$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32, 2: jspb.internal.binary.readInt64, 3: jspb.internal.binary.readInt64 };
    };
    proto.tflite.task.core.FileDescriptorMeta.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.core.FileDescriptorMeta.serializeBinaryToWriter);
    };
    proto.tflite.task.core.FileDescriptorMeta.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.writeInt64(b2, a2, 2);
      jspb.internal.binary.writeInt64(b2, a2, 3);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.core.FileDescriptorMeta.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.core.FileDescriptorMeta, proto.tflite.task.core.FileDescriptorMeta.internalDoNotUse$proto$tflite$task$core$FileDescriptorMeta$getBinaryFieldsObject);
    };
    proto.tflite.task.core.FileDescriptorMeta.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.core.FileDescriptorMeta.internalDoNotUse$proto$tflite$task$core$FileDescriptorMeta$getBinaryFieldsObject);
    };
    proto.tflite.task.core.FileDescriptorMeta.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.core.FileDescriptorMeta, a2);
    };
    proto.tflite.task.core.FileDescriptorMeta.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.core.FileDescriptorMeta.fromObject = function(a2) {
      var b2 = new proto.tflite.task.core.FileDescriptorMeta();
      a2.fd != null && b2.internal_setField(1, a2.fd);
      a2.length != null && b2.internal_setField(2, a2.length);
      a2.offset != null && b2.internal_setField(3, a2.offset);
      return b2;
    });
    proto.tflite.task.core.FileDescriptorMeta.prototype.toObject = function(a2) {
      return proto.tflite.task.core.FileDescriptorMeta.internal_toObject(a2, this);
    };
    proto.tflite.task.core.FileDescriptorMeta.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { fd: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), length: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), offset: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.core.ExternalFile = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.core.ExternalFile, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.core.ExternalFile.prototype.getFileName = function() {
      return this.internal_getStringFieldWithDefault(1);
    };
    proto.tflite.task.core.ExternalFile.prototype.setFileName = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.task.core.ExternalFile.prototype.clearFileName = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.core.ExternalFile.prototype.hasFileName = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.core.ExternalFile.prototype.getFileContent = function() {
      return this.internal_getStringFieldWithDefault(2);
    };
    proto.tflite.task.core.ExternalFile.prototype.getFileContent_asB64 = function() {
      return module$contents$jspb$internal_bytesAsB64(this.getFileContent());
    };
    proto.tflite.task.core.ExternalFile.prototype.getFileContent_asU8 = function() {
      return module$contents$jspb$internal_bytesAsU8(this.getFileContent());
    };
    proto.tflite.task.core.ExternalFile.prototype.setFileContent = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.core.ExternalFile.prototype.clearFileContent = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.core.ExternalFile.prototype.hasFileContent = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.core.ExternalFile.prototype.getFileDescriptorMeta = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.FileDescriptorMeta, 4);
    };
    proto.tflite.task.core.ExternalFile.prototype.setFileDescriptorMeta = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.tflite.task.core.ExternalFile.prototype.clearFileDescriptorMeta = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.tflite.task.core.ExternalFile.prototype.hasFileDescriptorMeta = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readString, 2: jspb.internal.binary.readBytes, 4: [jspb.internal.binary.readMessage, proto.tflite.task.core.FileDescriptorMeta, proto.tflite.task.core.FileDescriptorMeta.internalDoNotUse$proto$tflite$task$core$FileDescriptorMeta$getBinaryFieldsObject] };
    };
    proto.tflite.task.core.ExternalFile.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.core.ExternalFile.serializeBinaryToWriter);
    };
    proto.tflite.task.core.ExternalFile.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeString(b2, a2, 1);
      jspb.internal.binary.writeBytes(b2, a2, 2);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.tflite.task.core.FileDescriptorMeta, proto.tflite.task.core.FileDescriptorMeta.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.core.ExternalFile.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject);
    };
    proto.tflite.task.core.ExternalFile.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject);
    };
    proto.tflite.task.core.ExternalFile.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.core.ExternalFile, a2);
    };
    proto.tflite.task.core.ExternalFile.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.core.ExternalFile.fromObject = function(a2) {
      var b2 = new proto.tflite.task.core.ExternalFile();
      a2.fileName != null && b2.internal_setField(1, a2.fileName);
      a2.fileContent != null && b2.internal_setField(2, a2.fileContent);
      a2.fileDescriptorMeta && b2.internal_setWrapperField(4, proto.tflite.task.core.FileDescriptorMeta.fromObject(a2.fileDescriptorMeta));
      return b2;
    });
    proto.tflite.task.core.ExternalFile.prototype.toObject = function(a2) {
      return proto.tflite.task.core.ExternalFile.internal_toObject(a2, this);
    };
    proto.tflite.task.core.ExternalFile.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { fileName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), fileContent: b2.getFileContent_asB64(), fileDescriptorMeta: proto.tflite.task.core.FileDescriptorMeta.internal_toObject(a2, b2.getFileDescriptorMeta()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.text = {};
    proto.tflite.task.text.BertNLClassifierOptions = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.text.BertNLClassifierOptions, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.text.BertNLClassifierOptions.prototype.getBaseOptions = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.BaseOptions, 1);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.setBaseOptions = function(a2) {
      return this.internal_setWrapperField(1, a2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.clearBaseOptions = function() {
      return this.internal_clearWrapperField(1);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.hasBaseOptions = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.getMaxSeqLen = function() {
      return this.internal_getIntegerFieldWithDefault(2, 128);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.setMaxSeqLen = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.clearMaxSeqLen = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.hasMaxSeqLen = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.internalDoNotUse$proto$tflite$task$text$BertNLClassifierOptions$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readMessage, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject], 2: jspb.internal.binary.readInt32 };
    };
    proto.tflite.task.text.BertNLClassifierOptions.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.text.BertNLClassifierOptions.serializeBinaryToWriter);
    };
    proto.tflite.task.text.BertNLClassifierOptions.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 1, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.text.BertNLClassifierOptions, proto.tflite.task.text.BertNLClassifierOptions.internalDoNotUse$proto$tflite$task$text$BertNLClassifierOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.text.BertNLClassifierOptions.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.text.BertNLClassifierOptions.internalDoNotUse$proto$tflite$task$text$BertNLClassifierOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.text.BertNLClassifierOptions.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.text.BertNLClassifierOptions, a2);
    };
    proto.tflite.task.text.BertNLClassifierOptions.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.text.BertNLClassifierOptions.fromObject = function(a2) {
      var b2 = new proto.tflite.task.text.BertNLClassifierOptions();
      a2.baseOptions && b2.internal_setWrapperField(1, proto.tflite.task.core.BaseOptions.fromObject(a2.baseOptions));
      a2.maxSeqLen != null && b2.internal_setField(2, a2.maxSeqLen);
      return b2;
    });
    proto.tflite.task.text.BertNLClassifierOptions.prototype.toObject = function(a2) {
      return proto.tflite.task.text.BertNLClassifierOptions.internal_toObject(a2, this);
    };
    proto.tflite.task.text.BertNLClassifierOptions.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { baseOptions: proto.tflite.task.core.BaseOptions.internal_toObject(a2, b2.getBaseOptions()), maxSeqLen: b2.internal_getIntegerFieldWithDefault(2, 128) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision = {};
    proto.tflite.task.vision.BoundingBox = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.vision.BoundingBox, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.BoundingBox.prototype.getOriginX = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.task.vision.BoundingBox.prototype.setOriginX = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.clearOriginX = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.vision.BoundingBox.prototype.hasOriginX = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.vision.BoundingBox.prototype.getOriginY = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.setOriginY = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.clearOriginY = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.hasOriginY = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.getWidth = function() {
      return this.internal_getIntegerFieldWithDefault(3);
    };
    proto.tflite.task.vision.BoundingBox.prototype.setWidth = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.clearWidth = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.BoundingBox.prototype.hasWidth = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.BoundingBox.prototype.getHeight = function() {
      return this.internal_getIntegerFieldWithDefault(4);
    };
    proto.tflite.task.vision.BoundingBox.prototype.setHeight = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.task.vision.BoundingBox.prototype.clearHeight = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.task.vision.BoundingBox.prototype.hasHeight = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.vision.BoundingBox.internalDoNotUse$proto$tflite$task$vision$BoundingBox$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32, 2: jspb.internal.binary.readInt32, 3: jspb.internal.binary.readInt32, 4: jspb.internal.binary.readInt32 };
    };
    proto.tflite.task.vision.BoundingBox.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.BoundingBox.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.BoundingBox.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.BoundingBox.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.BoundingBox, proto.tflite.task.vision.BoundingBox.internalDoNotUse$proto$tflite$task$vision$BoundingBox$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.BoundingBox.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.BoundingBox.internalDoNotUse$proto$tflite$task$vision$BoundingBox$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.BoundingBox.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.BoundingBox, a2);
    };
    proto.tflite.task.vision.BoundingBox.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.BoundingBox.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.BoundingBox();
      a2.originX != null && b2.internal_setField(1, a2.originX);
      a2.originY != null && b2.internal_setField(2, a2.originY);
      a2.width != null && b2.internal_setField(3, a2.width);
      a2.height != null && b2.internal_setField(4, a2.height);
      return b2;
    });
    proto.tflite.task.vision.BoundingBox.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.BoundingBox.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.BoundingBox.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { originX: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), originY: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), width: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), height: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Class = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.vision.Class, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Class.prototype.getIndex = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.task.vision.Class.prototype.setIndex = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.task.vision.Class.prototype.clearIndex = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.vision.Class.prototype.hasIndex = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.vision.Class.prototype.getScore = function() {
      return this.internal_getFloatingPointFieldWithDefault(2);
    };
    proto.tflite.task.vision.Class.prototype.setScore = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.Class.prototype.clearScore = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.Class.prototype.hasScore = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.Class.prototype.getDisplayName = function() {
      return this.internal_getStringFieldWithDefault(3);
    };
    proto.tflite.task.vision.Class.prototype.setDisplayName = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.Class.prototype.clearDisplayName = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.Class.prototype.hasDisplayName = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.Class.prototype.getClassName = function() {
      return this.internal_getStringFieldWithDefault(4);
    };
    proto.tflite.task.vision.Class.prototype.setClassName = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.task.vision.Class.prototype.clearClassName = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.task.vision.Class.prototype.hasClassName = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.vision.Class.internalDoNotUse$proto$tflite$task$vision$Class$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readInt32, 2: jspb.internal.binary.readFloat, 3: jspb.internal.binary.readString, 4: jspb.internal.binary.readString };
    };
    proto.tflite.task.vision.Class.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Class.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Class.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeInt32(b2, a2, 1);
      jspb.internal.binary.writeFloat(b2, a2, 2);
      jspb.internal.binary.writeString(b2, a2, 3);
      jspb.internal.binary.writeString(b2, a2, 4);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Class.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Class, proto.tflite.task.vision.Class.internalDoNotUse$proto$tflite$task$vision$Class$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Class.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Class.internalDoNotUse$proto$tflite$task$vision$Class$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Class.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Class, a2);
    };
    proto.tflite.task.vision.Class.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Class.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Class();
      a2.index != null && b2.internal_setField(1, a2.index);
      a2.score != null && b2.internal_setField(2, a2.score);
      a2.displayName != null && b2.internal_setField(3, a2.displayName);
      a2.className != null && b2.internal_setField(4, a2.className);
      return b2;
    });
    proto.tflite.task.vision.Class.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Class.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Class.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { index: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), score: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getFloatingPointField(2)), displayName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), className: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Classifications = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.Classifications.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.Classifications, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Classifications.prototype.getClassesList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Class, 1);
    };
    proto.tflite.task.vision.Classifications.prototype.setClassesList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.task.vision.Classifications.prototype.addClasses = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.task.vision.Class, b2);
    };
    proto.tflite.task.vision.Classifications.prototype.addAndReturnClasses = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.task.vision.Class, b2);
    };
    proto.tflite.task.vision.Classifications.prototype.clearClassesList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.task.vision.Classifications.prototype.getHeadIndex = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.task.vision.Classifications.prototype.setHeadIndex = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.Classifications.prototype.clearHeadIndex = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.Classifications.prototype.hasHeadIndex = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.Classifications.internalDoNotUse$proto$tflite$task$vision$Classifications$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Class, proto.tflite.task.vision.Class.internalDoNotUse$proto$tflite$task$vision$Class$getBinaryFieldsObject], 2: jspb.internal.binary.readInt32 };
    };
    proto.tflite.task.vision.Classifications.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Classifications.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Classifications.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.task.vision.Class, proto.tflite.task.vision.Class.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Classifications.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Classifications, proto.tflite.task.vision.Classifications.internalDoNotUse$proto$tflite$task$vision$Classifications$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Classifications.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Classifications.internalDoNotUse$proto$tflite$task$vision$Classifications$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Classifications.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Classifications, a2);
    };
    proto.tflite.task.vision.Classifications.repeatedFields_ = [1];
    proto.tflite.task.vision.Classifications.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Classifications.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Classifications();
      a2.classesList && b2.internal_setRepeatedWrapperField(1, a2.classesList.map(proto.tflite.task.vision.Class.fromObject));
      a2.headIndex != null && b2.internal_setField(2, a2.headIndex);
      return b2;
    });
    proto.tflite.task.vision.Classifications.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Classifications.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Classifications.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { classesList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getClassesList(), proto.tflite.task.vision.Class.internal_toObject, a2), headIndex: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.ClassificationResult = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.ClassificationResult.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.ClassificationResult, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.ClassificationResult.prototype.getClassificationsList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Classifications, 1);
    };
    proto.tflite.task.vision.ClassificationResult.prototype.setClassificationsList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.task.vision.ClassificationResult.prototype.addClassifications = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.task.vision.Classifications, b2);
    };
    proto.tflite.task.vision.ClassificationResult.prototype.addAndReturnClassifications = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.task.vision.Classifications, b2);
    };
    proto.tflite.task.vision.ClassificationResult.prototype.clearClassificationsList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.task.vision.ClassificationResult.internalDoNotUse$proto$tflite$task$vision$ClassificationResult$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Classifications, proto.tflite.task.vision.Classifications.internalDoNotUse$proto$tflite$task$vision$Classifications$getBinaryFieldsObject] };
    };
    proto.tflite.task.vision.ClassificationResult.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.ClassificationResult.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.ClassificationResult.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.task.vision.Classifications, proto.tflite.task.vision.Classifications.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.ClassificationResult.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.ClassificationResult, proto.tflite.task.vision.ClassificationResult.internalDoNotUse$proto$tflite$task$vision$ClassificationResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ClassificationResult.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.ClassificationResult.internalDoNotUse$proto$tflite$task$vision$ClassificationResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ClassificationResult.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.ClassificationResult, a2);
    };
    proto.tflite.task.vision.ClassificationResult.repeatedFields_ = [1];
    proto.tflite.task.vision.ClassificationResult.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.ClassificationResult.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.ClassificationResult();
      a2.classificationsList && b2.internal_setRepeatedWrapperField(1, a2.classificationsList.map(proto.tflite.task.vision.Classifications.fromObject));
      return b2;
    });
    proto.tflite.task.vision.ClassificationResult.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.ClassificationResult.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.ClassificationResult.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { classificationsList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getClassificationsList(), proto.tflite.task.vision.Classifications.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Detection = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.Detection.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.Detection, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Detection.prototype.getBoundingBox = function() {
      return this.internal_getWrapperField(proto.tflite.task.vision.BoundingBox, 2);
    };
    proto.tflite.task.vision.Detection.prototype.setBoundingBox = function(a2) {
      return this.internal_setWrapperField(2, a2);
    };
    proto.tflite.task.vision.Detection.prototype.clearBoundingBox = function() {
      return this.internal_clearWrapperField(2);
    };
    proto.tflite.task.vision.Detection.prototype.hasBoundingBox = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.Detection.prototype.getClassesList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Class, 3);
    };
    proto.tflite.task.vision.Detection.prototype.setClassesList = function(a2) {
      return this.internal_setRepeatedWrapperField(3, a2);
    };
    proto.tflite.task.vision.Detection.prototype.addClasses = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(3, a2, proto.tflite.task.vision.Class, b2);
    };
    proto.tflite.task.vision.Detection.prototype.addAndReturnClasses = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(3, a2, proto.tflite.task.vision.Class, b2);
    };
    proto.tflite.task.vision.Detection.prototype.clearClassesList = function() {
      return this.internal_clearRepeatedWrapperField(3);
    };
    proto.tflite.task.vision.Detection.internalDoNotUse$proto$tflite$task$vision$Detection$getBinaryFieldsObject = function() {
      return { 2: [jspb.internal.binary.readMessage, proto.tflite.task.vision.BoundingBox, proto.tflite.task.vision.BoundingBox.internalDoNotUse$proto$tflite$task$vision$BoundingBox$getBinaryFieldsObject], 3: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Class, proto.tflite.task.vision.Class.internalDoNotUse$proto$tflite$task$vision$Class$getBinaryFieldsObject] };
    };
    proto.tflite.task.vision.Detection.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Detection.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Detection.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 2, proto.tflite.task.vision.BoundingBox, proto.tflite.task.vision.BoundingBox.serializeBinaryToWriter);
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 3, proto.tflite.task.vision.Class, proto.tflite.task.vision.Class.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Detection.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Detection, proto.tflite.task.vision.Detection.internalDoNotUse$proto$tflite$task$vision$Detection$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Detection.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Detection.internalDoNotUse$proto$tflite$task$vision$Detection$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Detection.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Detection, a2);
    };
    proto.tflite.task.vision.Detection.repeatedFields_ = [3];
    proto.tflite.task.vision.Detection.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Detection.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Detection();
      a2.boundingBox && b2.internal_setWrapperField(2, proto.tflite.task.vision.BoundingBox.fromObject(a2.boundingBox));
      a2.classesList && b2.internal_setRepeatedWrapperField(3, a2.classesList.map(proto.tflite.task.vision.Class.fromObject));
      return b2;
    });
    proto.tflite.task.vision.Detection.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Detection.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Detection.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { boundingBox: proto.tflite.task.vision.BoundingBox.internal_toObject(a2, b2.getBoundingBox()), classesList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getClassesList(), proto.tflite.task.vision.Class.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.DetectionResult = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.DetectionResult.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.DetectionResult, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.DetectionResult.prototype.getDetectionsList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Detection, 1);
    };
    proto.tflite.task.vision.DetectionResult.prototype.setDetectionsList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.task.vision.DetectionResult.prototype.addDetections = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.task.vision.Detection, b2);
    };
    proto.tflite.task.vision.DetectionResult.prototype.addAndReturnDetections = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.task.vision.Detection, b2);
    };
    proto.tflite.task.vision.DetectionResult.prototype.clearDetectionsList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.task.vision.DetectionResult.internalDoNotUse$proto$tflite$task$vision$DetectionResult$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Detection, proto.tflite.task.vision.Detection.internalDoNotUse$proto$tflite$task$vision$Detection$getBinaryFieldsObject] };
    };
    proto.tflite.task.vision.DetectionResult.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.DetectionResult.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.DetectionResult.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.task.vision.Detection, proto.tflite.task.vision.Detection.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.DetectionResult.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.DetectionResult, proto.tflite.task.vision.DetectionResult.internalDoNotUse$proto$tflite$task$vision$DetectionResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.DetectionResult.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.DetectionResult.internalDoNotUse$proto$tflite$task$vision$DetectionResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.DetectionResult.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.DetectionResult, a2);
    };
    proto.tflite.task.vision.DetectionResult.repeatedFields_ = [1];
    proto.tflite.task.vision.DetectionResult.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.DetectionResult.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.DetectionResult();
      a2.detectionsList && b2.internal_setRepeatedWrapperField(1, a2.detectionsList.map(proto.tflite.task.vision.Detection.fromObject));
      return b2;
    });
    proto.tflite.task.vision.DetectionResult.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.DetectionResult.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.DetectionResult.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { detectionsList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getDetectionsList(), proto.tflite.task.vision.Detection.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.ImageClassifierOptions = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.ImageClassifierOptions.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.ImageClassifierOptions, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getBaseOptions = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.BaseOptions, 14);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setBaseOptions = function(a2) {
      return this.internal_setWrapperField(14, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearBaseOptions = function() {
      return this.internal_clearWrapperField(14);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasBaseOptions = function() {
      return this.internal_hasField(14);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getModelFileWithMetadata = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.ExternalFile, 10);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setModelFileWithMetadata = function(a2) {
      return this.internal_setWrapperField(10, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearModelFileWithMetadata = function() {
      return this.internal_clearWrapperField(10);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasModelFileWithMetadata = function() {
      return this.internal_hasField(10);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getDisplayNamesLocale = function() {
      return this.internal_getStringFieldWithDefault(11, "en");
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setDisplayNamesLocale = function(a2) {
      return this.internal_setField(11, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearDisplayNamesLocale = function() {
      return this.internal_clearField(11);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasDisplayNamesLocale = function() {
      return this.internal_hasField(11);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getMaxResults = function() {
      return this.internal_getIntegerFieldWithDefault(2, -1);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setMaxResults = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearMaxResults = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasMaxResults = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getScoreThreshold = function() {
      return this.internal_getFloatingPointFieldWithDefault(3);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setScoreThreshold = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearScoreThreshold = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasScoreThreshold = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getClassNameWhitelistList = function() {
      return this.internal_getRepeatedField(4);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setClassNameWhitelistList = function(a2) {
      return this.internal_setRepeatedField(4, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.addClassNameWhitelist = function(a2, b2) {
      return this.internal_addToRepeatedField(4, a2, b2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearClassNameWhitelistList = function() {
      return this.internal_clearRepeatedField(4);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getClassNameBlacklistList = function() {
      return this.internal_getRepeatedField(5);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setClassNameBlacklistList = function(a2) {
      return this.internal_setRepeatedField(5, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.addClassNameBlacklist = function(a2, b2) {
      return this.internal_addToRepeatedField(5, a2, b2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearClassNameBlacklistList = function() {
      return this.internal_clearRepeatedField(5);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(13, -1);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setNumThreads = function(a2) {
      return this.internal_setField(13, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearNumThreads = function() {
      return this.internal_clearField(13);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasNumThreads = function() {
      return this.internal_hasField(13);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.getComputeSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.ComputeSettings, 9);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.setComputeSettings = function(a2) {
      return this.internal_setWrapperField(9, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.clearComputeSettings = function() {
      return this.internal_clearWrapperField(9);
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.hasComputeSettings = function() {
      return this.internal_hasField(9);
    };
    proto.tflite.task.vision.ImageClassifierOptions.internalDoNotUse$proto$tflite$task$vision$ImageClassifierOptions$getBinaryFieldsObject = function() {
      return {
        14: [jspb.internal.binary.readMessage, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject],
        10: [jspb.internal.binary.readMessage, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject],
        11: jspb.internal.binary.readString,
        2: jspb.internal.binary.readInt32,
        3: jspb.internal.binary.readFloat,
        4: jspb.internal.binary.readRepeatedString,
        5: jspb.internal.binary.readRepeatedString,
        13: jspb.internal.binary.readInt32,
        9: [jspb.internal.binary.readMessage, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject]
      };
    };
    proto.tflite.task.vision.ImageClassifierOptions.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.ImageClassifierOptions.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.ImageClassifierOptions.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 14, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 10, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 11);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeFloat(b2, a2, 3);
      jspb.internal.binary.writeRepeatedString(b2, a2, 4);
      jspb.internal.binary.writeRepeatedString(b2, a2, 5);
      jspb.internal.binary.writeInt32(b2, a2, 13);
      jspb.internal.binary.writeMessage(b2, a2, 9, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.ImageClassifierOptions, proto.tflite.task.vision.ImageClassifierOptions.internalDoNotUse$proto$tflite$task$vision$ImageClassifierOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ImageClassifierOptions.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.ImageClassifierOptions.internalDoNotUse$proto$tflite$task$vision$ImageClassifierOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ImageClassifierOptions.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.ImageClassifierOptions, a2);
    };
    proto.tflite.task.vision.ImageClassifierOptions.repeatedFields_ = [4, 5];
    proto.tflite.task.vision.ImageClassifierOptions.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.ImageClassifierOptions.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.ImageClassifierOptions();
      a2.baseOptions && b2.internal_setWrapperField(14, proto.tflite.task.core.BaseOptions.fromObject(a2.baseOptions));
      a2.modelFileWithMetadata && b2.internal_setWrapperField(10, proto.tflite.task.core.ExternalFile.fromObject(a2.modelFileWithMetadata));
      a2.displayNamesLocale != null && b2.internal_setField(11, a2.displayNamesLocale);
      a2.maxResults != null && b2.internal_setField(2, a2.maxResults);
      a2.scoreThreshold != null && b2.internal_setField(3, a2.scoreThreshold);
      a2.classNameWhitelistList != null && b2.internal_setRepeatedField(4, a2.classNameWhitelistList);
      a2.classNameBlacklistList != null && b2.internal_setRepeatedField(5, a2.classNameBlacklistList);
      a2.numThreads != null && b2.internal_setField(13, a2.numThreads);
      a2.computeSettings && b2.internal_setWrapperField(9, proto.tflite.proto.ComputeSettings.fromObject(a2.computeSettings));
      return b2;
    });
    proto.tflite.task.vision.ImageClassifierOptions.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.ImageClassifierOptions.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.ImageClassifierOptions.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = {
          baseOptions: proto.tflite.task.core.BaseOptions.internal_toObject(a2, b2.getBaseOptions()),
          modelFileWithMetadata: proto.tflite.task.core.ExternalFile.internal_toObject(a2, b2.getModelFileWithMetadata()),
          displayNamesLocale: b2.internal_getStringFieldWithDefault(11, "en"),
          maxResults: b2.internal_getIntegerFieldWithDefault(2, -1),
          scoreThreshold: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getFloatingPointField(3)),
          classNameWhitelistList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(4)),
          classNameBlacklistList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(5)),
          numThreads: b2.internal_getIntegerFieldWithDefault(13, -1),
          computeSettings: proto.tflite.proto.ComputeSettings.internal_toObject(a2, b2.getComputeSettings())
        };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.ImageSegmenterOptions = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.vision.ImageSegmenterOptions, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getBaseOptions = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.BaseOptions, 8);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setBaseOptions = function(a2) {
      return this.internal_setWrapperField(8, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearBaseOptions = function() {
      return this.internal_clearWrapperField(8);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasBaseOptions = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getModelFileWithMetadata = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.ExternalFile, 5);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setModelFileWithMetadata = function(a2) {
      return this.internal_setWrapperField(5, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearModelFileWithMetadata = function() {
      return this.internal_clearWrapperField(5);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasModelFileWithMetadata = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getDisplayNamesLocale = function() {
      return this.internal_getStringFieldWithDefault(6, "en");
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setDisplayNamesLocale = function(a2) {
      return this.internal_setField(6, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearDisplayNamesLocale = function() {
      return this.internal_clearField(6);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasDisplayNamesLocale = function() {
      return this.internal_hasField(6);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getOutputType = function() {
      return this.internal_getFieldWithDefault(3, 1);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setOutputType = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearOutputType = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasOutputType = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(7, -1);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setNumThreads = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearNumThreads = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasNumThreads = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.getComputeSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.ComputeSettings, 4);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.setComputeSettings = function(a2) {
      return this.internal_setWrapperField(4, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.clearComputeSettings = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.hasComputeSettings = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.internalDoNotUse$proto$tflite$task$vision$ImageSegmenterOptions$getBinaryFieldsObject = function() {
      return {
        8: [jspb.internal.binary.readMessage, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject],
        5: [jspb.internal.binary.readMessage, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject],
        6: jspb.internal.binary.readString,
        3: jspb.internal.binary.readEnum,
        7: jspb.internal.binary.readInt32,
        4: [jspb.internal.binary.readMessage, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject]
      };
    };
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.ImageSegmenterOptions.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 8, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 5, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 6);
      jspb.internal.binary.writeEnum(b2, a2, 3);
      jspb.internal.binary.writeInt32(b2, a2, 7);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.ImageSegmenterOptions, proto.tflite.task.vision.ImageSegmenterOptions.internalDoNotUse$proto$tflite$task$vision$ImageSegmenterOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.ImageSegmenterOptions.internalDoNotUse$proto$tflite$task$vision$ImageSegmenterOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.ImageSegmenterOptions, a2);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.ImageSegmenterOptions.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.ImageSegmenterOptions();
      a2.baseOptions && b2.internal_setWrapperField(8, proto.tflite.task.core.BaseOptions.fromObject(a2.baseOptions));
      a2.modelFileWithMetadata && b2.internal_setWrapperField(5, proto.tflite.task.core.ExternalFile.fromObject(a2.modelFileWithMetadata));
      a2.displayNamesLocale != null && b2.internal_setField(6, a2.displayNamesLocale);
      a2.outputType != null && b2.internal_setField(3, a2.outputType);
      a2.numThreads != null && b2.internal_setField(7, a2.numThreads);
      a2.computeSettings && b2.internal_setWrapperField(4, proto.tflite.proto.ComputeSettings.fromObject(a2.computeSettings));
      return b2;
    });
    proto.tflite.task.vision.ImageSegmenterOptions.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.ImageSegmenterOptions.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.ImageSegmenterOptions.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { baseOptions: proto.tflite.task.core.BaseOptions.internal_toObject(a2, b2.getBaseOptions()), modelFileWithMetadata: proto.tflite.task.core.ExternalFile.internal_toObject(a2, b2.getModelFileWithMetadata()), displayNamesLocale: b2.internal_getStringFieldWithDefault(6, "en"), outputType: b2.internal_getFieldWithDefault(3, 1), numThreads: b2.internal_getIntegerFieldWithDefault(7, -1), computeSettings: proto.tflite.proto.ComputeSettings.internal_toObject(a2, b2.getComputeSettings()) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.ImageSegmenterOptions.OutputType = { UNSPECIFIED: 0, CATEGORY_MASK: 1, CONFIDENCE_MASK: 2 };
    proto.tflite.task.vision.ObjectDetectorOptions = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.ObjectDetectorOptions.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.ObjectDetectorOptions, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getBaseOptions = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.BaseOptions, 9);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setBaseOptions = function(a2) {
      return this.internal_setWrapperField(9, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearBaseOptions = function() {
      return this.internal_clearWrapperField(9);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasBaseOptions = function() {
      return this.internal_hasField(9);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getModelFileWithMetadata = function() {
      return this.internal_getWrapperField(proto.tflite.task.core.ExternalFile, 1);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setModelFileWithMetadata = function(a2) {
      return this.internal_setWrapperField(1, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearModelFileWithMetadata = function() {
      return this.internal_clearWrapperField(1);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasModelFileWithMetadata = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getDisplayNamesLocale = function() {
      return this.internal_getStringFieldWithDefault(2, "en");
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setDisplayNamesLocale = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearDisplayNamesLocale = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasDisplayNamesLocale = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getMaxResults = function() {
      return this.internal_getIntegerFieldWithDefault(3, -1);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setMaxResults = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearMaxResults = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasMaxResults = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getScoreThreshold = function() {
      return this.internal_getFloatingPointFieldWithDefault(4);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setScoreThreshold = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearScoreThreshold = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasScoreThreshold = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getClassNameWhitelistList = function() {
      return this.internal_getRepeatedField(5);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setClassNameWhitelistList = function(a2) {
      return this.internal_setRepeatedField(5, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.addClassNameWhitelist = function(a2, b2) {
      return this.internal_addToRepeatedField(5, a2, b2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearClassNameWhitelistList = function() {
      return this.internal_clearRepeatedField(5);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getClassNameBlacklistList = function() {
      return this.internal_getRepeatedField(6);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setClassNameBlacklistList = function(a2) {
      return this.internal_setRepeatedField(6, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.addClassNameBlacklist = function(a2, b2) {
      return this.internal_addToRepeatedField(6, a2, b2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearClassNameBlacklistList = function() {
      return this.internal_clearRepeatedField(6);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getNumThreads = function() {
      return this.internal_getIntegerFieldWithDefault(7, -1);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setNumThreads = function(a2) {
      return this.internal_setField(7, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearNumThreads = function() {
      return this.internal_clearField(7);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasNumThreads = function() {
      return this.internal_hasField(7);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.getComputeSettings = function() {
      return this.internal_getWrapperField(proto.tflite.proto.ComputeSettings, 8);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.setComputeSettings = function(a2) {
      return this.internal_setWrapperField(8, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.clearComputeSettings = function() {
      return this.internal_clearWrapperField(8);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.hasComputeSettings = function() {
      return this.internal_hasField(8);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.internalDoNotUse$proto$tflite$task$vision$ObjectDetectorOptions$getBinaryFieldsObject = function() {
      return {
        9: [jspb.internal.binary.readMessage, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.internalDoNotUse$proto$tflite$task$core$BaseOptions$getBinaryFieldsObject],
        1: [jspb.internal.binary.readMessage, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.internalDoNotUse$proto$tflite$task$core$ExternalFile$getBinaryFieldsObject],
        2: jspb.internal.binary.readString,
        3: jspb.internal.binary.readInt32,
        4: jspb.internal.binary.readFloat,
        5: jspb.internal.binary.readRepeatedString,
        6: jspb.internal.binary.readRepeatedString,
        7: jspb.internal.binary.readInt32,
        8: [jspb.internal.binary.readMessage, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.internalDoNotUse$proto$tflite$proto$ComputeSettings$getBinaryFieldsObject]
      };
    };
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.ObjectDetectorOptions.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeMessage(b2, a2, 9, proto.tflite.task.core.BaseOptions, proto.tflite.task.core.BaseOptions.serializeBinaryToWriter);
      jspb.internal.binary.writeMessage(b2, a2, 1, proto.tflite.task.core.ExternalFile, proto.tflite.task.core.ExternalFile.serializeBinaryToWriter);
      jspb.internal.binary.writeString(b2, a2, 2);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.writeFloat(b2, a2, 4);
      jspb.internal.binary.writeRepeatedString(b2, a2, 5);
      jspb.internal.binary.writeRepeatedString(b2, a2, 6);
      jspb.internal.binary.writeInt32(b2, a2, 7);
      jspb.internal.binary.writeMessage(b2, a2, 8, proto.tflite.proto.ComputeSettings, proto.tflite.proto.ComputeSettings.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.ObjectDetectorOptions, proto.tflite.task.vision.ObjectDetectorOptions.internalDoNotUse$proto$tflite$task$vision$ObjectDetectorOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.ObjectDetectorOptions.internalDoNotUse$proto$tflite$task$vision$ObjectDetectorOptions$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.ObjectDetectorOptions, a2);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.repeatedFields_ = [5, 6];
    proto.tflite.task.vision.ObjectDetectorOptions.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.ObjectDetectorOptions.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.ObjectDetectorOptions();
      a2.baseOptions && b2.internal_setWrapperField(9, proto.tflite.task.core.BaseOptions.fromObject(a2.baseOptions));
      a2.modelFileWithMetadata && b2.internal_setWrapperField(1, proto.tflite.task.core.ExternalFile.fromObject(a2.modelFileWithMetadata));
      a2.displayNamesLocale != null && b2.internal_setField(2, a2.displayNamesLocale);
      a2.maxResults != null && b2.internal_setField(3, a2.maxResults);
      a2.scoreThreshold != null && b2.internal_setField(4, a2.scoreThreshold);
      a2.classNameWhitelistList != null && b2.internal_setRepeatedField(5, a2.classNameWhitelistList);
      a2.classNameBlacklistList != null && b2.internal_setRepeatedField(6, a2.classNameBlacklistList);
      a2.numThreads != null && b2.internal_setField(7, a2.numThreads);
      a2.computeSettings && b2.internal_setWrapperField(8, proto.tflite.proto.ComputeSettings.fromObject(a2.computeSettings));
      return b2;
    });
    proto.tflite.task.vision.ObjectDetectorOptions.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.ObjectDetectorOptions.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.ObjectDetectorOptions.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = {
          baseOptions: proto.tflite.task.core.BaseOptions.internal_toObject(a2, b2.getBaseOptions()),
          modelFileWithMetadata: proto.tflite.task.core.ExternalFile.internal_toObject(a2, b2.getModelFileWithMetadata()),
          displayNamesLocale: b2.internal_getStringFieldWithDefault(2, "en"),
          maxResults: b2.internal_getIntegerFieldWithDefault(3, -1),
          scoreThreshold: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getFloatingPointField(4)),
          classNameWhitelistList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(5)),
          classNameBlacklistList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedField(6)),
          numThreads: b2.internal_getIntegerFieldWithDefault(7, -1),
          computeSettings: proto.tflite.proto.ComputeSettings.internal_toObject(a2, b2.getComputeSettings())
        };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Segmentation = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.Segmentation.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.Segmentation, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Segmentation.prototype.getMaskOneofCase = function() {
      return this.internal_computeOneofCase(proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_);
    };
    proto.tflite.task.vision.Segmentation.prototype.getCategoryMask = function() {
      return this.internal_getOneofStringFieldWithDefault(1, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_);
    };
    proto.tflite.task.vision.Segmentation.prototype.getCategoryMask_asB64 = function() {
      return module$contents$jspb$internal_bytesAsB64(this.getCategoryMask());
    };
    proto.tflite.task.vision.Segmentation.prototype.getCategoryMask_asU8 = function() {
      return module$contents$jspb$internal_bytesAsU8(this.getCategoryMask());
    };
    proto.tflite.task.vision.Segmentation.prototype.setCategoryMask = function(a2) {
      return this.internal_setOneofField(1, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_, a2);
    };
    proto.tflite.task.vision.Segmentation.prototype.clearCategoryMask = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.vision.Segmentation.prototype.hasCategoryMask = function() {
      return this.internal_hasOneofField(1, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_);
    };
    proto.tflite.task.vision.Segmentation.prototype.getConfidenceMasks = function() {
      return this.internal_getOneofWrapperField(proto.tflite.task.vision.Segmentation.ConfidenceMasks, 4, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_);
    };
    proto.tflite.task.vision.Segmentation.prototype.setConfidenceMasks = function(a2) {
      return this.internal_setOneofWrapperField(4, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_, a2);
    };
    proto.tflite.task.vision.Segmentation.prototype.clearConfidenceMasks = function() {
      return this.internal_clearWrapperField(4);
    };
    proto.tflite.task.vision.Segmentation.prototype.hasConfidenceMasks = function() {
      return this.internal_hasOneofField(4, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_);
    };
    proto.tflite.task.vision.Segmentation.prototype.getWidth = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.task.vision.Segmentation.prototype.setWidth = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.Segmentation.prototype.clearWidth = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.Segmentation.prototype.hasWidth = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.Segmentation.prototype.getHeight = function() {
      return this.internal_getIntegerFieldWithDefault(3);
    };
    proto.tflite.task.vision.Segmentation.prototype.setHeight = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.Segmentation.prototype.clearHeight = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.Segmentation.prototype.hasHeight = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.Segmentation.prototype.getColoredLabelsList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Segmentation.ColoredLabel, 5);
    };
    proto.tflite.task.vision.Segmentation.prototype.setColoredLabelsList = function(a2) {
      return this.internal_setRepeatedWrapperField(5, a2);
    };
    proto.tflite.task.vision.Segmentation.prototype.addColoredLabels = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(5, a2, proto.tflite.task.vision.Segmentation.ColoredLabel, b2);
    };
    proto.tflite.task.vision.Segmentation.prototype.addAndReturnColoredLabels = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(5, a2, proto.tflite.task.vision.Segmentation.ColoredLabel, b2);
    };
    proto.tflite.task.vision.Segmentation.prototype.clearColoredLabelsList = function() {
      return this.internal_clearRepeatedWrapperField(5);
    };
    proto.tflite.task.vision.Segmentation.internalDoNotUse$proto$tflite$task$vision$Segmentation$getBinaryFieldsObject = function() {
      return {
        1: [jspb.internal.binary.readBytesOneof, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_],
        4: [jspb.internal.binary.readMessageOneof, proto.tflite.task.vision.Segmentation.ConfidenceMasks, proto.tflite.task.vision.Segmentation.ConfidenceMasks.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMasks$getBinaryFieldsObject, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_],
        2: jspb.internal.binary.readInt32,
        3: jspb.internal.binary.readInt32,
        5: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Segmentation.ColoredLabel, proto.tflite.task.vision.Segmentation.ColoredLabel.internalDoNotUse$proto$tflite$task$vision$Segmentation$ColoredLabel$getBinaryFieldsObject]
      };
    };
    proto.tflite.task.vision.Segmentation.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Segmentation.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Segmentation.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeBytes(b2, a2, 1);
      jspb.internal.binary.writeMessage(b2, a2, 4, proto.tflite.task.vision.Segmentation.ConfidenceMasks, proto.tflite.task.vision.Segmentation.ConfidenceMasks.serializeBinaryToWriter);
      jspb.internal.binary.writeInt32(b2, a2, 2);
      jspb.internal.binary.writeInt32(b2, a2, 3);
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 5, proto.tflite.task.vision.Segmentation.ColoredLabel, proto.tflite.task.vision.Segmentation.ColoredLabel.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Segmentation.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Segmentation, proto.tflite.task.vision.Segmentation.internalDoNotUse$proto$tflite$task$vision$Segmentation$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Segmentation.internalDoNotUse$proto$tflite$task$vision$Segmentation$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Segmentation, a2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.Segmentation.ConfidenceMask.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.Segmentation.ConfidenceMask, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.getValueList = function() {
      return this.internal_getRepeatedFloatingPointField(1);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.setValueList = function(a2) {
      return this.internal_setRepeatedField(1, a2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.addValue = function(a2, b2) {
      return this.internal_addToRepeatedField(1, a2, b2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.clearValueList = function() {
      return this.internal_clearRepeatedField(1);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMask$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readPackableFloatInto };
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Segmentation.ConfidenceMask.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writePackedFloat(b2, a2, 1);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Segmentation.ConfidenceMask, proto.tflite.task.vision.Segmentation.ConfidenceMask.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMask$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Segmentation.ConfidenceMask.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMask$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Segmentation.ConfidenceMask, a2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.Segmentation.ConfidenceMasks.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.Segmentation.ConfidenceMasks, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.getConfidenceMaskList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Segmentation.ConfidenceMask, 1);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.setConfidenceMaskList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.addConfidenceMask = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.task.vision.Segmentation.ConfidenceMask, b2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.addAndReturnConfidenceMask = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.task.vision.Segmentation.ConfidenceMask, b2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.clearConfidenceMaskList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMasks$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Segmentation.ConfidenceMask, proto.tflite.task.vision.Segmentation.ConfidenceMask.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMask$getBinaryFieldsObject] };
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Segmentation.ConfidenceMasks.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.task.vision.Segmentation.ConfidenceMask, proto.tflite.task.vision.Segmentation.ConfidenceMask.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Segmentation.ConfidenceMasks, proto.tflite.task.vision.Segmentation.ConfidenceMasks.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMasks$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Segmentation.ConfidenceMasks.internalDoNotUse$proto$tflite$task$vision$Segmentation$ConfidenceMasks$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Segmentation.ConfidenceMasks, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2);
    };
    $jscomp.inherits(proto.tflite.task.vision.Segmentation.ColoredLabel, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.getR = function() {
      return this.internal_getIntegerFieldWithDefault(1);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.setR = function(a2) {
      return this.internal_setField(1, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.clearR = function() {
      return this.internal_clearField(1);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.hasR = function() {
      return this.internal_hasField(1);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.getG = function() {
      return this.internal_getIntegerFieldWithDefault(2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.setG = function(a2) {
      return this.internal_setField(2, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.clearG = function() {
      return this.internal_clearField(2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.hasG = function() {
      return this.internal_hasField(2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.getB = function() {
      return this.internal_getIntegerFieldWithDefault(3);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.setB = function(a2) {
      return this.internal_setField(3, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.clearB = function() {
      return this.internal_clearField(3);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.hasB = function() {
      return this.internal_hasField(3);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.getClassName = function() {
      return this.internal_getStringFieldWithDefault(4);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.setClassName = function(a2) {
      return this.internal_setField(4, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.clearClassName = function() {
      return this.internal_clearField(4);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.hasClassName = function() {
      return this.internal_hasField(4);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.getDisplayName = function() {
      return this.internal_getStringFieldWithDefault(5);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.setDisplayName = function(a2) {
      return this.internal_setField(5, a2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.clearDisplayName = function() {
      return this.internal_clearField(5);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.hasDisplayName = function() {
      return this.internal_hasField(5);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.internalDoNotUse$proto$tflite$task$vision$Segmentation$ColoredLabel$getBinaryFieldsObject = function() {
      return { 1: jspb.internal.binary.readUint32, 2: jspb.internal.binary.readUint32, 3: jspb.internal.binary.readUint32, 4: jspb.internal.binary.readString, 5: jspb.internal.binary.readString };
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.Segmentation.ColoredLabel.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeUint32(b2, a2, 1);
      jspb.internal.binary.writeUint32(b2, a2, 2);
      jspb.internal.binary.writeUint32(b2, a2, 3);
      jspb.internal.binary.writeString(b2, a2, 4);
      jspb.internal.binary.writeString(b2, a2, 5);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.Segmentation.ColoredLabel, proto.tflite.task.vision.Segmentation.ColoredLabel.internalDoNotUse$proto$tflite$task$vision$Segmentation$ColoredLabel$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.Segmentation.ColoredLabel.internalDoNotUse$proto$tflite$task$vision$Segmentation$ColoredLabel$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.Segmentation.ColoredLabel, a2);
    };
    proto.tflite.task.vision.Segmentation.repeatedFields_ = [5];
    proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_ = [1, 4];
    proto.tflite.task.vision.Segmentation.MaskOneofCase = { MASK_ONEOF_NOT_SET: 0, CATEGORY_MASK: 1, CONFIDENCE_MASKS: 4 };
    proto.tflite.task.vision.Segmentation.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Segmentation.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Segmentation();
      a2.categoryMask != null && b2.internal_setOneofField(1, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_, a2.categoryMask);
      a2.confidenceMasks && b2.internal_setOneofWrapperField(4, proto.tflite.task.vision.Segmentation.oneofGroup_MaskOneof_, proto.tflite.task.vision.Segmentation.ConfidenceMasks.fromObject(a2.confidenceMasks));
      a2.width != null && b2.internal_setField(2, a2.width);
      a2.height != null && b2.internal_setField(3, a2.height);
      a2.coloredLabelsList && b2.internal_setRepeatedWrapperField(5, a2.coloredLabelsList.map(proto.tflite.task.vision.Segmentation.ColoredLabel.fromObject));
      return b2;
    });
    proto.tflite.task.vision.Segmentation.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Segmentation.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Segmentation.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { categoryMask: b2.getCategoryMask_asB64(), confidenceMasks: proto.tflite.task.vision.Segmentation.ConfidenceMasks.internal_toObject(a2, b2.getConfidenceMasks()), width: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), height: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), coloredLabelsList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getColoredLabelsList(), proto.tflite.task.vision.Segmentation.ColoredLabel.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.repeatedFields_ = [1];
    proto.tflite.task.vision.Segmentation.ConfidenceMask.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Segmentation.ConfidenceMask.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Segmentation.ConfidenceMask();
      a2.valueList != null && b2.internal_setRepeatedField(1, a2.valueList);
      return b2;
    });
    proto.tflite.task.vision.Segmentation.ConfidenceMask.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Segmentation.ConfidenceMask.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMask.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { valueList: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getRepeatedFloatingPointField(1)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.repeatedFields_ = [1];
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Segmentation.ConfidenceMasks.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Segmentation.ConfidenceMasks();
      a2.confidenceMaskList && b2.internal_setRepeatedWrapperField(1, a2.confidenceMaskList.map(proto.tflite.task.vision.Segmentation.ConfidenceMask.fromObject));
      return b2;
    });
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Segmentation.ConfidenceMasks.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Segmentation.ConfidenceMasks.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { confidenceMaskList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getConfidenceMaskList(), proto.tflite.task.vision.Segmentation.ConfidenceMask.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.Segmentation.ColoredLabel.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.Segmentation.ColoredLabel();
      a2.r != null && b2.internal_setField(1, a2.r);
      a2.g != null && b2.internal_setField(2, a2.g);
      a2.b != null && b2.internal_setField(3, a2.b);
      a2.className != null && b2.internal_setField(4, a2.className);
      a2.displayName != null && b2.internal_setField(5, a2.displayName);
      return b2;
    });
    proto.tflite.task.vision.Segmentation.ColoredLabel.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.Segmentation.ColoredLabel.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.Segmentation.ColoredLabel.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { r: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(1)), g: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(2)), b: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(3)), className: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(4)), displayName: module$contents$jspb$internal$public_for_gencode_toObjectPrimitive(b2.internal_getField(5)) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    proto.tflite.task.vision.SegmentationResult = function(a2) {
      module$contents$jspb$internal$public_for_gencode_GeneratedMessage.call(this, a2, -1, proto.tflite.task.vision.SegmentationResult.repeatedFields_);
    };
    $jscomp.inherits(proto.tflite.task.vision.SegmentationResult, module$contents$jspb$internal$public_for_gencode_GeneratedMessage);
    proto.tflite.task.vision.SegmentationResult.prototype.getSegmentationList = function() {
      return this.internal_getRepeatedWrapperField(proto.tflite.task.vision.Segmentation, 1);
    };
    proto.tflite.task.vision.SegmentationResult.prototype.setSegmentationList = function(a2) {
      return this.internal_setRepeatedWrapperField(1, a2);
    };
    proto.tflite.task.vision.SegmentationResult.prototype.addSegmentation = function(a2, b2) {
      return this.internal_addToRepeatedWrapperField(1, a2, proto.tflite.task.vision.Segmentation, b2);
    };
    proto.tflite.task.vision.SegmentationResult.prototype.addAndReturnSegmentation = function(a2, b2) {
      return this.internal_addAndReturnRepeatedWrapperField(1, a2, proto.tflite.task.vision.Segmentation, b2);
    };
    proto.tflite.task.vision.SegmentationResult.prototype.clearSegmentationList = function() {
      return this.internal_clearRepeatedWrapperField(1);
    };
    proto.tflite.task.vision.SegmentationResult.internalDoNotUse$proto$tflite$task$vision$SegmentationResult$getBinaryFieldsObject = function() {
      return { 1: [jspb.internal.binary.readRepeatedMessage, proto.tflite.task.vision.Segmentation, proto.tflite.task.vision.Segmentation.internalDoNotUse$proto$tflite$task$vision$Segmentation$getBinaryFieldsObject] };
    };
    proto.tflite.task.vision.SegmentationResult.prototype.serializeBinary = function() {
      return jspb.internal.binary.serializeBinary(this, proto.tflite.task.vision.SegmentationResult.serializeBinaryToWriter);
    };
    proto.tflite.task.vision.SegmentationResult.serializeBinaryToWriter = function(a2, b2) {
      jspb.internal.binary.writeRepeatedMessage(b2, a2, 1, proto.tflite.task.vision.Segmentation, proto.tflite.task.vision.Segmentation.serializeBinaryToWriter);
      jspb.internal.binary.serializeBinaryExtensionsAndUnknownFields(a2, b2);
    };
    proto.tflite.task.vision.SegmentationResult.deserializeBinary = function(a2) {
      return jspb.internal.binary.deserializeBinary(a2, proto.tflite.task.vision.SegmentationResult, proto.tflite.task.vision.SegmentationResult.internalDoNotUse$proto$tflite$task$vision$SegmentationResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.SegmentationResult.deserializeBinaryFromReader = function(a2, b2) {
      return module$contents$jspb$internal$binary_deserializeBinaryFromReaderGeneric(a2, b2, proto.tflite.task.vision.SegmentationResult.internalDoNotUse$proto$tflite$task$vision$SegmentationResult$getBinaryFieldsObject);
    };
    proto.tflite.task.vision.SegmentationResult.deserialize = function(a2) {
      return module$exports$jspb.Message.deserializeWithCtor(proto.tflite.task.vision.SegmentationResult, a2);
    };
    proto.tflite.task.vision.SegmentationResult.repeatedFields_ = [1];
    proto.tflite.task.vision.SegmentationResult.ObjectFormat = function() {
    };
    module$contents$jspb$internal$public_for_gencode_GENERATE_FROM_OBJECT && (proto.tflite.task.vision.SegmentationResult.fromObject = function(a2) {
      var b2 = new proto.tflite.task.vision.SegmentationResult();
      a2.segmentationList && b2.internal_setRepeatedWrapperField(1, a2.segmentationList.map(proto.tflite.task.vision.Segmentation.fromObject));
      return b2;
    });
    proto.tflite.task.vision.SegmentationResult.prototype.toObject = function(a2) {
      return proto.tflite.task.vision.SegmentationResult.internal_toObject(a2, this);
    };
    proto.tflite.task.vision.SegmentationResult.internal_toObject = function(a2, b2) {
      if (b2 != null) {
        var c = { segmentationList: module$contents$jspb$internal$public_for_gencode_toObjectList(b2.getSegmentationList(), proto.tflite.task.vision.Segmentation.internal_toObject, a2) };
        a2 && (c.$jspbMessageInstance = b2);
        return c;
      }
    };
    var module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils = {};
    var module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_WASM_SIMD_CHECK = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]);
    var module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_WASM_MULTI_THREADED_CHECK = new Uint8Array([
      0,
      97,
      115,
      109,
      1,
      0,
      0,
      0,
      1,
      4,
      1,
      96,
      0,
      0,
      3,
      2,
      1,
      0,
      5,
      4,
      1,
      3,
      1,
      1,
      10,
      11,
      1,
      9,
      0,
      65,
      0,
      254,
      16,
      2,
      0,
      26,
      11
    ]);
    var module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_wasmFeatures = void 0;
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray = function(a2) {
      if (a2 == null)
        return [];
      for (var b2 = [], c = 0; c < a2.size(); c++) {
        var d = a2.get(c);
        b2.push(d);
      }
      return b2;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete = function(a2, b2) {
      try {
        return b2(a2);
      } finally {
        a2 != null && a2.delete();
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callWithStatusOrAndDelete = function(a2, b2, c) {
      try {
        if (!a2.ok())
          throw Error(b2 + a2.errorMessage());
        return c(a2.value());
      } finally {
        a2.delete();
      }
    };
    var module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext = null;
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.fromPixels = function(a2) {
      if (a2 == null)
        throw Error("pixels passed to fromPixels() can not be null");
      var b2 = false, c = false, d = false, e = false;
      if (typeof ImageData !== "undefined" && a2 instanceof ImageData)
        b2 = true;
      else if (typeof HTMLVideoElement !== "undefined" && a2 instanceof HTMLVideoElement)
        c = true;
      else if (typeof HTMLImageElement !== "undefined" && a2 instanceof HTMLImageElement)
        d = true;
      else if (a2.getContext != null)
        e = true;
      else
        throw Error("pixels passed to fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was " + a2.constructor.name);
      if (c && c && 2 > a2.readyState)
        throw Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");
      var f = $jscomp.makeIterator(c ? [a2.videoWidth, a2.videoHeight] : [a2.width, a2.height]), g = f.next().value;
      f = f.next().value;
      if (e)
        var k = a2.getContext("2d").getImageData(0, 0, g, f).data;
      else if (b2)
        k = a2.data;
      else if (d || c)
        module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext == null && (module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext = document.createElement("canvas").getContext("2d")), module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext.canvas.width = g, module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext.canvas.height = f, module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext.drawImage(a2, 0, 0, g, f), k = module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_fromPixels2DContext.getImageData(0, 0, g, f).data;
      return { vals: k, width: g, height: f };
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.getWasmFeatures = function() {
      var a2, b2, c, d, e, f, g;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(k) {
        if (k.nextAddress == 1) {
          if (module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_wasmFeatures)
            return k.jumpTo(2);
          a2 = $jscomp;
          b2 = a2.makeIterator;
          return k.yield(Promise.all([module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_isSupportedSimd(), module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_isSupportedMultiThreaded()]), 3);
        }
        k.nextAddress != 2 && (c = b2.call(a2, k.yieldResult), d = c.next().value, e = c.next().value, f = d, g = e, module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_wasmFeatures = { simd: f, multiThreading: g });
        return k.return(module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_wasmFeatures);
      });
    };
    function module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_isSupportedSimd() {
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(a2) {
        switch (a2.nextAddress) {
          case 1:
            return a2.setCatchFinallyBlocks(2), a2.yield(WebAssembly.instantiate(module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_WASM_SIMD_CHECK), 4);
          case 4:
            a2.leaveTryBlock(3);
            break;
          case 2:
            return a2.enterCatchBlock(), a2.return(false);
          case 3:
            return a2.return(true);
        }
      });
    }
    function module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_isSupportedMultiThreaded() {
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(a2) {
        switch (a2.nextAddress) {
          case 1:
            return a2.setCatchFinallyBlocks(2), new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), a2.yield(WebAssembly.instantiate(module$contents$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils_WASM_MULTI_THREADED_CHECK), 4);
          case 4:
            a2.leaveTryBlock(3);
            break;
          case 2:
            return a2.enterCatchBlock(), a2.return(false);
          case 3:
            return a2.return(true);
        }
      });
    }
    var module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader = { EmscriptenModuleLoader: function(a2, b2, c) {
      this.wasmModulesPath = a2;
      this.tfliteWebApiName = b2;
      this.wasmWebWorkerObjectURL = c;
      this.scriptSrc = "";
      this.scriptSrc = !this.isWebWorker() && document.currentScript ? document.currentScript.getAttribute("src") || "" : "";
    } };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance = function(a2, b2, c) {
      var d = a2 + b2;
      c = URL.createObjectURL(new Blob([c], { type: "application/javascript" }));
      module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.instances.has(d) || (a2 = new module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader(a2, b2, c), module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.instances.set(d, a2));
      return module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.instances.get(d);
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.load = function(a2) {
      this.loadPromise || (this.loadPromise = this.loadModule(a2 === void 0 ? false : a2));
      return this.loadPromise;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.loadModule = function(a2) {
      a2 = a2 === void 0 ? false : a2;
      var b2 = this, c, d, e, f, g, k, h, l, m, n, p, q, r, t, v;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(u) {
        if (u.nextAddress == 1)
          return u.yield(b2.genFullLoaderUrl(), 2);
        if (u.nextAddress != 3)
          return d = c = u.yieldResult, d.startsWith("http") || (d.startsWith("/") ? d = b2.scriptSrc.startsWith("http") ? "" + (0, goog.uri.utils.getHost)(b2.scriptSrc) + d : "" + b2.getLocation().origin + d : a2 ? b2.scriptSrc.startsWith("http") ? (e = b2.scriptSrc.lastIndexOf("/"), f = b2.scriptSrc.substring(0, e), d = f + "/" + d) : b2.scriptSrc.startsWith("/") ? (g = b2.scriptSrc.lastIndexOf("/"), k = b2.scriptSrc.substring(0, g), d = "" + b2.getLocation().origin + k + "/" + d) : (h = b2.getLocation().href.lastIndexOf("/"), l = b2.getLocation().href.substring(0, h), m = b2.scriptSrc.lastIndexOf("/"), 0 > m ? d = l + "/" + d : (n = b2.scriptSrc.substring(0, m), d = l + "/" + n + "/" + d)) : (p = b2.getLocation().href, q = p.lastIndexOf("/"), r = p.substring(0, q), d = r + "/" + d)), t = true, u.yield(b2.loadScript(d).catch(function() {
            t = false;
          }), 3);
        if (!t)
          return u.return(void 0);
        v = b2.isWebWorker() ? self : window;
        return u.return(v[b2.tfliteWebApiName + "_ModuleFactory"]({ mainScriptUrlOrBlob: d, locateFile: function(w, x) {
          if (w.endsWith(".worker.js"))
            return b2.wasmWebWorkerObjectURL;
          if (b2.isWebWorker() && w.endsWith(".wasm")) {
            x = "";
            var y = d.lastIndexOf("/");
            0 <= y && (x = d.substring(0, y + 1));
            return x + w;
          }
          return x + w;
        } }));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.genFullLoaderUrl = function() {
      var a2 = this, b2, c, d, e;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(f) {
        if (f.nextAddress == 1)
          return b2 = [a2.wasmModulesPath, a2.tfliteWebApiName, "_cc"], f.yield((0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.getWasmFeatures)(), 2);
        c = f.yieldResult;
        d = c.simd;
        e = c.multiThreading;
        d && e ? b2.push("_simd_threaded.js") : !d && e ? b2.push("_threaded.js") : d && !e ? b2.push("_simd.js") : b2.push(".js");
        return f.return(b2.join(""));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.loadScript = function(a2) {
      var b2 = this, c, d;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(e) {
        if (b2.isWebWorker())
          return importScripts(a2), e.jumpTo(0);
        c = document.createElement("script");
        c.setAttribute("id", b2.tfliteWebApiName + "_loader_script");
        d = new Promise(function(f, g) {
          c.onerror = function() {
            g();
            document.head.removeChild(c);
          };
          c.onload = f;
        });
        document.head.appendChild(c);
        c.setAttribute("src", a2);
        return e.yield(d, 0);
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.getLocation = function() {
      if (this.isWebWorker()) {
        var a2 = self.location, b2 = a2.origin;
        a2 = a2.href.replace("blob:", "");
        return { origin: b2, href: a2 };
      }
      return window.location;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.prototype.isWebWorker = function() {
      return typeof window === "undefined";
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.instances = /* @__PURE__ */ new Map();
    var module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client = {};
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.getWasmFeatures = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.getWasmFeatures;
    var module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath = "";
    function module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_setWasmPath(a2) {
      module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath = a2;
    }
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.setWasmPath = module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_setWasmPath;
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.create = function(a2, b2) {
      b2 = b2 === void 0 ? new proto.tflite.task.text.BertNLClassifierOptions() : b2;
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        p = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(new h.BertNLClassifierOptionsCppProto(), function(r) {
          if (r != null)
            return r.initFromJsProto(b2), h.BertNLClassifier.CreateFromOptions(n, m.length, r);
        });
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create BertNLClassifier: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.prototype.classify = function(a2) {
      if (this.cppClassifier != null)
        return a2 = this.cppClassifier.Classify(a2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(b2) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(b2);
        });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.BertNLClassifierOptions", proto.tflite.task.text.BertNLClassifierOptions);
    goog.exportSymbol("tfweb.BertNLClassifierOptions.prototype.serializeBinary", proto.tflite.task.text.BertNLClassifierOptions.prototype.serializeBinary);
    goog.exportSymbol("tfweb.BertNLClassifier", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier);
    goog.exportSymbol("tfweb.BertNLClassifier.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.create);
    goog.exportSymbol("tfweb.BertNLClassifier.prototype.classify", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.prototype.classify);
    goog.exportSymbol("tfweb.BertNLClassifier.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertNLClassifier.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.create = function(a2) {
      var b2, c, d, e, f, g, k, h, l, m, n;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(p) {
        if (p.nextAddress == 1)
          return b2 = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), c = $jscomp, d = c.makeIterator, p.yield(Promise.all([b2.load(), typeof a2 === "string" ? fetch(a2).then(function(q) {
            return q.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        e = d.call(c, p.yieldResult);
        f = e.next().value;
        g = e.next().value;
        k = f;
        h = g;
        l = new Uint8Array(h);
        m = k._malloc(l.length);
        k.HEAPU8.set(l, m);
        n = k.BertQuestionAnswerer.CreateFromBuffer(m, l.length);
        if (n === null || n === void 0 || !n.ok())
          throw Error("Failed to create BertQuestionAnswerer: " + (n === null || n === void 0 ? void 0 : n.errorMessage()));
        return p.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer(k, [m], n.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.prototype.answer = function(a2, b2) {
      if (this.cppClassifier != null)
        return a2 = this.cppClassifier.Answer(a2, b2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(c) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(c);
        });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.BertQuestionAnswerer", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer);
    goog.exportSymbol("tfweb.BertQuestionAnswerer.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.create);
    goog.exportSymbol("tfweb.BertQuestionAnswerer.prototype.answer", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.prototype.answer);
    goog.exportSymbol("tfweb.BertQuestionAnswerer.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.BertQuestionAnswerer.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.create = function(a2, b2) {
      b2 = b2 === void 0 ? new proto.tflite.task.vision.ImageClassifierOptions() : b2;
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        p = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(new h.ImageClassifierOptionsCppProto(), function(r) {
          if (r != null)
            return r.initFromJsProto(b2), h.ImageClassifier.CreateFromOptions(n, m.length, r);
        });
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create ImageClassifier: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.prototype.classify = function(a2) {
      if (this.cppClassifier != null) {
        var b2 = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.fromPixels)(a2);
        a2 = b2.vals;
        var c = b2.width, d = b2.height;
        if (a2 != null)
          return b2 = this.module._malloc(a2.length), this.module.HEAPU8.set(a2, b2), a2 = this.cppClassifier.Classify(b2, c, d), this.module._free(b2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callWithStatusOrAndDelete)(a2, "Failed to run inference method classify: ", function(e) {
            e = e.toArrayBuffer();
            return proto.tflite.task.vision.ClassificationResult.deserializeBinary(e);
          });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.ClassificationResult", proto.tflite.task.vision.ClassificationResult);
    goog.exportSymbol("tfweb.ClassificationResult.prototype.serializeBinary", proto.tflite.task.vision.ClassificationResult.prototype.serializeBinary);
    goog.exportSymbol("tfweb.ImageClassifierOptions", proto.tflite.task.vision.ImageClassifierOptions);
    goog.exportSymbol("tfweb.ImageClassifierOptions.prototype.serializeBinary", proto.tflite.task.vision.ImageClassifierOptions.prototype.serializeBinary);
    goog.exportSymbol("tfweb.ImageClassifier", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier);
    goog.exportSymbol("tfweb.ImageClassifier.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.create);
    goog.exportSymbol("tfweb.ImageClassifier.prototype.classify", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.prototype.classify);
    goog.exportSymbol("tfweb.ImageClassifier.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageClassifier.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.create = function(a2, b2) {
      b2 = b2 === void 0 ? new proto.tflite.task.vision.ImageSegmenterOptions() : b2;
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        p = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(new h.ImageSegmenterOptionsCppProto(), function(r) {
          if (r != null)
            return r.initFromJsProto(b2), h.ImageSegmenter.CreateFromOptions(n, m.length, r);
        });
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create ImageSegmenter: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.prototype.segment = function(a2) {
      if (this.cppClassifier != null) {
        var b2 = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.fromPixels)(a2);
        a2 = b2.vals;
        var c = b2.width, d = b2.height;
        if (a2 != null)
          return b2 = this.module._malloc(a2.length), this.module.HEAPU8.set(a2, b2), a2 = this.cppClassifier.Segment(b2, c, d), this.module._free(b2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callWithStatusOrAndDelete)(a2, "Failed to run inference method segment: ", function(e) {
            e = e.toArrayBuffer();
            return proto.tflite.task.vision.SegmentationResult.deserializeBinary(e);
          });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.ImageSegmenterOptions", proto.tflite.task.vision.ImageSegmenterOptions);
    goog.exportSymbol("tfweb.ImageSegmenterOptions.prototype.serializeBinary", proto.tflite.task.vision.ImageSegmenterOptions.prototype.serializeBinary);
    goog.exportSymbol("tfweb.SegmentationResult", proto.tflite.task.vision.SegmentationResult);
    goog.exportSymbol("tfweb.SegmentationResult.prototype.serializeBinary", proto.tflite.task.vision.SegmentationResult.prototype.serializeBinary);
    goog.exportSymbol("tfweb.ImageSegmenter", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter);
    goog.exportSymbol("tfweb.ImageSegmenter.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.create);
    goog.exportSymbol("tfweb.ImageSegmenter.prototype.segment", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.prototype.segment);
    goog.exportSymbol("tfweb.ImageSegmenter.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ImageSegmenter.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.create = function(a2, b2) {
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        p = h.NLClassifier.CreateFromBufferAndOptions(n, m.length, b2);
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create NLClassifier: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.prototype.classify = function(a2) {
      if (this.cppClassifier != null)
        return a2 = this.cppClassifier.Classify(a2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(b2) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(b2);
        });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.NLClassifier", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier);
    goog.exportSymbol("tfweb.NLClassifier.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.create);
    goog.exportSymbol("tfweb.NLClassifier.prototype.classify", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.prototype.classify);
    goog.exportSymbol("tfweb.NLClassifier.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.NLClassifier.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.create = function(a2, b2) {
      b2 = b2 === void 0 ? new proto.tflite.task.vision.ObjectDetectorOptions() : b2;
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        p = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(new h.ObjectDetectorOptionsCppProto(), function(r) {
          if (r != null)
            return r.initFromJsProto(b2), h.ObjectDetector.CreateFromOptions(n, m.length, r);
        });
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create ObjectDetector: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.prototype.detect = function(a2) {
      if (this.cppClassifier != null) {
        var b2 = (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.fromPixels)(a2);
        a2 = b2.vals;
        var c = b2.width, d = b2.height;
        if (a2 != null)
          return b2 = this.module._malloc(a2.length), this.module.HEAPU8.set(a2, b2), a2 = this.cppClassifier.Detect(b2, c, d), this.module._free(b2), (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callWithStatusOrAndDelete)(a2, "Failed to run inference method detect: ", function(e) {
            e = e.toArrayBuffer();
            return proto.tflite.task.vision.DetectionResult.deserializeBinary(e);
          });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.DetectionResult", proto.tflite.task.vision.DetectionResult);
    goog.exportSymbol("tfweb.DetectionResult.prototype.serializeBinary", proto.tflite.task.vision.DetectionResult.prototype.serializeBinary);
    goog.exportSymbol("tfweb.ObjectDetectorOptions", proto.tflite.task.vision.ObjectDetectorOptions);
    goog.exportSymbol("tfweb.ObjectDetectorOptions.prototype.serializeBinary", proto.tflite.task.vision.ObjectDetectorOptions.prototype.serializeBinary);
    goog.exportSymbol("tfweb.ObjectDetector", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector);
    goog.exportSymbol("tfweb.ObjectDetector.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.create);
    goog.exportSymbol("tfweb.ObjectDetector.prototype.detect", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.prototype.detect);
    goog.exportSymbol("tfweb.ObjectDetector.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.ObjectDetector.prototype.cleanUp);
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner = function(a2, b2, c) {
      this.module = a2;
      this.memOffsetsToFree = b2;
      this.cppClassifier = c;
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.create = function(a2, b2) {
      b2 = b2 === void 0 ? {} : b2;
      var c, d, e, f, g, k, h, l, m, n, p;
      return $jscomp.asyncExecutePromiseGeneratorProgram(function(q) {
        if (q.nextAddress == 1)
          return c = module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance(module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_wasmModulesPath, "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n'), d = $jscomp, e = d.makeIterator, q.yield(Promise.all([c.load(), typeof a2 === "string" ? fetch(a2).then(function(r) {
            return r.arrayBuffer();
          }) : Promise.resolve(a2)]), 2);
        f = e.call(d, q.yieldResult);
        g = f.next().value;
        k = f.next().value;
        h = g;
        l = k;
        m = new Uint8Array(l);
        n = h._malloc(m.length);
        h.HEAPU8.set(m, n);
        b2.numThreads == null && (b2.numThreads = navigator ? navigator.hardwareConcurrency / 2 : -1);
        b2.enableProfiling == null && (b2.enableProfiling = false);
        b2.maxProfilingBufferEntries == null && (b2.maxProfilingBufferEntries = 1024);
        p = h.TFLiteWebModelRunner.CreateFromBufferAndOptions(n, m.length, b2);
        if (p === null || p === void 0 || !p.ok())
          throw Error("Failed to create TFLiteWebModelRunner: " + (p === null || p === void 0 ? void 0 : p.errorMessage()));
        return q.return(new module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner(h, [n], p.value()));
      });
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getInputs = function() {
      if (this.cppClassifier != null) {
        var a2 = this.cppClassifier.GetInputs();
        return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(b2) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(b2);
        });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getOutputs = function() {
      if (this.cppClassifier != null) {
        var a2 = this.cppClassifier.GetOutputs();
        return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(b2) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(b2);
        });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.infer = function() {
      if (this.cppClassifier != null)
        return this.cppClassifier.Infer();
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getProfilingResults = function() {
      if (this.cppClassifier != null) {
        var a2 = this.cppClassifier.GetProfilingResults();
        return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.callAndDelete)(a2, function(b2) {
          return (0, module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.convertCppVectorToArray)(b2);
        });
      }
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getProfilingSummary = function() {
      if (this.cppClassifier != null)
        return this.cppClassifier.GetProfilingSummary();
    };
    module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.cleanUp = function() {
      if (this.cppClassifier != null) {
        for (var a2 = $jscomp.makeIterator(this.memOffsetsToFree), b2 = a2.next(); !b2.done; b2 = a2.next())
          this.module._free(b2.value);
        this.cppClassifier.delete();
      }
    };
    goog.exportSymbol("tfweb.TFLiteWebModelRunner", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.create", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.create);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.getInputs", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getInputs);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.getOutputs", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getOutputs);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.infer", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.infer);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.getProfilingResults", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getProfilingResults);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.getProfilingSummary", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.getProfilingSummary);
    goog.exportSymbol("tfweb.TFLiteWebModelRunner.prototype.cleanUp", module$exports$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client.TFLiteWebModelRunner.prototype.cleanUp);
    goog.exportSymbol("tfweb.tflite_web_api.setWasmPath", module$contents$google3$third_party$tensorflow_lite_support$web$tflite_web_api_client_setWasmPath);
    goog.exportSymbol("tfweb.tflite_web_api.getWasmFeatures", module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$utils.getWasmFeatures);
    module$exports$google3$third_party$tensorflow_lite_support$web$task$codegen$common$emscripten_module_loader.EmscriptenModuleLoader.getInstance("", "tflite_web_api", '"use strict";var Module={};var initializedJS=false;function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}tflite_web_api_ModuleFactory(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();if(!initializedJS){Module["___embind_register_native_and_builtin_types"]();initializedJS=true}try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}postMessage({"cmd":"cancelDone"})}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};\n').load(true);
    var tfweb = typeof window !== "undefined" && window["tfweb"] || exports["tfweb"];
    exports.tfweb = tfweb;
  }
});

// node_modules/@tensorflow/tfjs-core/dist/backends/backend.js
var EPSILON_FLOAT32 = 1e-7;
var EPSILON_FLOAT16 = 1e-4;
var DataStorage = class {
  constructor(backend, dataMover) {
    this.backend = backend;
    this.dataMover = dataMover;
    this.data = /* @__PURE__ */ new WeakMap();
    this.dataIdsCount = 0;
  }
  get(dataId) {
    if (!this.data.has(dataId)) {
      this.dataMover.moveData(this.backend, dataId);
    }
    return this.data.get(dataId);
  }
  set(dataId, value) {
    this.dataIdsCount++;
    this.data.set(dataId, value);
  }
  has(dataId) {
    return this.data.has(dataId);
  }
  delete(dataId) {
    this.dataIdsCount--;
    return this.data.delete(dataId);
  }
  numDataIds() {
    return this.dataIdsCount;
  }
};
var KernelBackend = class {
  refCount(dataId) {
    return notYetImplemented("refCount");
  }
  incRef(dataId) {
    return notYetImplemented("incRef");
  }
  timerAvailable() {
    return true;
  }
  time(f) {
    return notYetImplemented("time");
  }
  read(dataId) {
    return notYetImplemented("read");
  }
  readSync(dataId) {
    return notYetImplemented("readSync");
  }
  readToGPU(dataId, options) {
    return notYetImplemented("readToGPU");
  }
  numDataIds() {
    return notYetImplemented("numDataIds");
  }
  disposeData(dataId, force) {
    return notYetImplemented("disposeData");
  }
  write(values, shape, dtype) {
    return notYetImplemented("write");
  }
  move(dataId, values, shape, dtype, refCount) {
    return notYetImplemented("move");
  }
  memory() {
    return notYetImplemented("memory");
  }
  floatPrecision() {
    return notYetImplemented("floatPrecision");
  }
  epsilon() {
    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;
  }
  dispose() {
    return notYetImplemented("dispose");
  }
};
function notYetImplemented(kernelName) {
  throw new Error(`'${kernelName}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`);
}

// node_modules/@tensorflow/tfjs-core/dist/util_base.js
function shuffle(array) {
  let counter = array.length;
  let index = 0;
  while (counter > 0) {
    index = Math.random() * counter | 0;
    counter--;
    swap(array, counter, index);
  }
}
function shuffleCombo(array, array2) {
  if (array.length !== array2.length) {
    throw new Error(`Array sizes must match to be shuffled together First array length was ${array.length}Second array length was ${array2.length}`);
  }
  let counter = array.length;
  let index = 0;
  while (counter > 0) {
    index = Math.random() * counter | 0;
    counter--;
    swap(array, counter, index);
    swap(array2, counter, index);
  }
}
function clamp(min, x, max) {
  return Math.max(min, Math.min(x, max));
}
function nearestLargerEven(val) {
  return val % 2 === 0 ? val : val + 1;
}
function swap(object, left, right) {
  const temp = object[left];
  object[left] = object[right];
  object[right] = temp;
}
function sum(arr) {
  let sum3 = 0;
  for (let i = 0; i < arr.length; i++) {
    sum3 += arr[i];
  }
  return sum3;
}
function randUniform(a2, b2) {
  const r = Math.random();
  return b2 * r + (1 - r) * a2;
}
function distSquared(a2, b2) {
  let result = 0;
  for (let i = 0; i < a2.length; i++) {
    const diff = Number(a2[i]) - Number(b2[i]);
    result += diff * diff;
  }
  return result;
}
function assert(expr, msg) {
  if (!expr) {
    throw new Error(typeof msg === "string" ? msg : msg());
  }
}
function assertShapesMatch(shapeA, shapeB, errorMessagePrefix = "") {
  assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);
}
function assertNonNull(a2) {
  assert(a2 != null, () => `The input to the tensor constructor must be a non-null value.`);
}
function flatten(arr, result = [], skipTypedArray = false) {
  if (result == null) {
    result = [];
  }
  if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {
    for (let i = 0; i < arr.length; ++i) {
      flatten(arr[i], result, skipTypedArray);
    }
  } else {
    result.push(arr);
  }
  return result;
}
function sizeFromShape(shape) {
  if (shape.length === 0) {
    return 1;
  }
  let size = shape[0];
  for (let i = 1; i < shape.length; i++) {
    size *= shape[i];
  }
  return size;
}
function isScalarShape(shape) {
  return shape.length === 0;
}
function arraysEqual(n1, n2) {
  if (n1 === n2) {
    return true;
  }
  if (n1 == null || n2 == null) {
    return false;
  }
  if (n1.length !== n2.length) {
    return false;
  }
  for (let i = 0; i < n1.length; i++) {
    if (n1[i] !== n2[i]) {
      return false;
    }
  }
  return true;
}
function isInt(a2) {
  return a2 % 1 === 0;
}
function tanh(x) {
  if (Math.tanh != null) {
    return Math.tanh(x);
  }
  if (x === Infinity) {
    return 1;
  } else if (x === -Infinity) {
    return -1;
  } else {
    const e2x = Math.exp(2 * x);
    return (e2x - 1) / (e2x + 1);
  }
}
function sizeToSquarishShape(size) {
  const width = Math.ceil(Math.sqrt(size));
  return [width, Math.ceil(size / width)];
}
function createShuffledIndices(n) {
  const shuffledIndices = new Uint32Array(n);
  for (let i = 0; i < n; ++i) {
    shuffledIndices[i] = i;
  }
  shuffle(shuffledIndices);
  return shuffledIndices;
}
function rightPad(a2, size) {
  if (size <= a2.length) {
    return a2;
  }
  return a2 + " ".repeat(size - a2.length);
}
function repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {
  return new Promise((resolve, reject) => {
    let tryCount = 0;
    const tryFn = () => {
      if (checkFn()) {
        resolve();
        return;
      }
      tryCount++;
      const nextBackoff = delayFn(tryCount);
      if (maxCounter != null && tryCount >= maxCounter) {
        reject();
        return;
      }
      setTimeout(tryFn, nextBackoff);
    };
    tryFn();
  });
}
function inferFromImplicitShape(shape, size) {
  let shapeProd = 1;
  let implicitIdx = -1;
  for (let i = 0; i < shape.length; ++i) {
    if (shape[i] >= 0) {
      shapeProd *= shape[i];
    } else if (shape[i] === -1) {
      if (implicitIdx !== -1) {
        throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${implicitIdx} and dim ${i}`);
      }
      implicitIdx = i;
    } else if (shape[i] < 0) {
      throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);
    }
  }
  if (implicitIdx === -1) {
    if (size > 0 && size !== shapeProd) {
      throw Error(`Size(${size}) must match the product of shape ${shape}`);
    }
    return shape;
  }
  if (shapeProd === 0) {
    throw Error(`Cannot infer the missing size in [${shape}] when there are 0 elements`);
  }
  if (size % shapeProd !== 0) {
    throw Error(`The implicit shape can't be a fractional number. Got ${size} / ${shapeProd}`);
  }
  const newShape = shape.slice();
  newShape[implicitIdx] = size / shapeProd;
  return newShape;
}
function parseAxisParam(axis, shape) {
  const rank = shape.length;
  axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);
  assert(axis.every((ax) => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but got axis ${axis}`);
  assert(axis.every((ax) => isInt(ax)), () => `All values in axis param must be integers but got axis ${axis}`);
  return axis.map((a2) => a2 < 0 ? rank + a2 : a2);
}
function squeezeShape(shape, axis) {
  const newShape = [];
  const keptDims = [];
  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;
  const axes = axis == null || isEmptyArray ? null : parseAxisParam(axis, shape).sort();
  let j = 0;
  for (let i = 0; i < shape.length; ++i) {
    if (axes != null) {
      if (axes[j] === i && shape[i] !== 1) {
        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);
      }
      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {
        newShape.push(shape[i]);
        keptDims.push(i);
      }
      if (axes[j] <= i) {
        j++;
      }
    }
    if (shape[i] !== 1) {
      newShape.push(shape[i]);
      keptDims.push(i);
    }
  }
  return { newShape, keptDims };
}
function getTypedArrayFromDType(dtype, size) {
  let values = null;
  if (dtype == null || dtype === "float32") {
    values = new Float32Array(size);
  } else if (dtype === "int32") {
    values = new Int32Array(size);
  } else if (dtype === "bool") {
    values = new Uint8Array(size);
  } else {
    throw new Error(`Unknown data type ${dtype}`);
  }
  return values;
}
function getArrayFromDType(dtype, size) {
  let values = null;
  if (dtype == null || dtype === "float32") {
    values = new Float32Array(size);
  } else if (dtype === "int32") {
    values = new Int32Array(size);
  } else if (dtype === "bool") {
    values = new Uint8Array(size);
  } else if (dtype === "string") {
    values = new Array(size);
  } else {
    throw new Error(`Unknown data type ${dtype}`);
  }
  return values;
}
function checkConversionForErrors(vals, dtype) {
  for (let i = 0; i < vals.length; i++) {
    const num = vals[i];
    if (isNaN(num) || !isFinite(num)) {
      throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);
    }
  }
}
function isValidDtype(dtype) {
  return dtype === "bool" || dtype === "complex64" || dtype === "float32" || dtype === "int32" || dtype === "string";
}
function hasEncodingLoss(oldType, newType) {
  if (newType === "complex64") {
    return false;
  }
  if (newType === "float32" && oldType !== "complex64") {
    return false;
  }
  if (newType === "int32" && oldType !== "float32" && oldType !== "complex64") {
    return false;
  }
  if (newType === "bool" && oldType === "bool") {
    return false;
  }
  return true;
}
function isTypedArray(a2) {
  return a2 instanceof Float32Array || a2 instanceof Int32Array || a2 instanceof Uint8Array || a2 instanceof Uint8ClampedArray;
}
function bytesPerElement(dtype) {
  if (dtype === "float32" || dtype === "int32") {
    return 4;
  } else if (dtype === "complex64") {
    return 8;
  } else if (dtype === "bool") {
    return 1;
  } else {
    throw new Error(`Unknown dtype ${dtype}`);
  }
}
function bytesFromStringArray(arr) {
  if (arr == null) {
    return 0;
  }
  let bytes = 0;
  arr.forEach((x) => bytes += x.length);
  return bytes;
}
function isString(value) {
  return typeof value === "string" || value instanceof String;
}
function isBoolean(value) {
  return typeof value === "boolean";
}
function isNumber(value) {
  return typeof value === "number";
}
function inferDtype(values) {
  if (Array.isArray(values)) {
    return inferDtype(values[0]);
  }
  if (values instanceof Float32Array) {
    return "float32";
  } else if (values instanceof Int32Array || values instanceof Uint8Array || values instanceof Uint8ClampedArray) {
    return "int32";
  } else if (isNumber(values)) {
    return "float32";
  } else if (isString(values)) {
    return "string";
  } else if (isBoolean(values)) {
    return "bool";
  }
  return "float32";
}
function isFunction(f) {
  return !!(f && f.constructor && f.call && f.apply);
}
function nearestDivisor(size, start) {
  for (let i = start; i < size; ++i) {
    if (size % i === 0) {
      return i;
    }
  }
  return size;
}
function computeStrides(shape) {
  const rank = shape.length;
  if (rank < 2) {
    return [];
  }
  const strides = new Array(rank - 1);
  strides[rank - 2] = shape[rank - 1];
  for (let i = rank - 3; i >= 0; --i) {
    strides[i] = strides[i + 1] * shape[i + 1];
  }
  return strides;
}
function createNestedArray(offset, shape, a2, isComplex = false) {
  const ret = new Array();
  if (shape.length === 1) {
    const d = shape[0] * (isComplex ? 2 : 1);
    for (let i = 0; i < d; i++) {
      ret[i] = a2[offset + i];
    }
  } else {
    const d = shape[0];
    const rest = shape.slice(1);
    const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);
    for (let i = 0; i < d; i++) {
      ret[i] = createNestedArray(offset + i * len, rest, a2, isComplex);
    }
  }
  return ret;
}
function toNestedArray(shape, a2, isComplex = false) {
  if (shape.length === 0) {
    return a2[0];
  }
  const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);
  if (size === 0) {
    return [];
  }
  if (size !== a2.length) {
    throw new Error(`[${shape}] does not match the input size ${a2.length}${isComplex ? " for a complex tensor" : ""}.`);
  }
  return createNestedArray(0, shape, a2, isComplex);
}
function makeOnesTypedArray(size, dtype) {
  const array = makeZerosTypedArray(size, dtype);
  for (let i = 0; i < array.length; i++) {
    array[i] = 1;
  }
  return array;
}
function makeZerosTypedArray(size, dtype) {
  if (dtype == null || dtype === "float32" || dtype === "complex64") {
    return new Float32Array(size);
  } else if (dtype === "int32") {
    return new Int32Array(size);
  } else if (dtype === "bool") {
    return new Uint8Array(size);
  } else {
    throw new Error(`Unknown data type ${dtype}`);
  }
}
function makeZerosNestedTypedArray(shape, dtype) {
  const size = shape.reduce((prev, curr) => prev * curr, 1);
  if (dtype == null || dtype === "float32") {
    return toNestedArray(shape, new Float32Array(size));
  } else if (dtype === "int32") {
    return toNestedArray(shape, new Int32Array(size));
  } else if (dtype === "bool") {
    return toNestedArray(shape, new Uint8Array(size));
  } else {
    throw new Error(`Unknown data type ${dtype}`);
  }
}
function assertNonNegativeIntegerDimensions(shape) {
  shape.forEach((dimSize) => {
    assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got shape [${shape}].`);
  });
}
function locToIndex(locs, rank, strides) {
  if (rank === 0) {
    return 0;
  } else if (rank === 1) {
    return locs[0];
  }
  let index = locs[locs.length - 1];
  for (let i = 0; i < locs.length - 1; ++i) {
    index += strides[i] * locs[i];
  }
  return index;
}
function indexToLoc(index, rank, strides) {
  if (rank === 0) {
    return [];
  } else if (rank === 1) {
    return [index];
  }
  const locs = new Array(rank);
  for (let i = 0; i < locs.length - 1; ++i) {
    locs[i] = Math.floor(index / strides[i]);
    index -= locs[i] * strides[i];
  }
  locs[locs.length - 1] = index;
  return locs;
}
function isPromise(object) {
  return object && object.then && typeof object.then === "function";
}

// node_modules/@tensorflow/tfjs-core/dist/environment.js
var TENSORFLOWJS_FLAGS_PREFIX = "tfjsflags";
var Environment = class {
  constructor(global2) {
    this.global = global2;
    this.flags = {};
    this.flagRegistry = {};
    this.urlFlags = {};
    this.getQueryParams = getQueryParams;
    this.populateURLFlags();
  }
  setPlatform(platformName, platform) {
    if (this.platform != null) {
      if (!(env().getBool("IS_TEST") || env().getBool("PROD"))) {
        console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${platform}.`);
      }
    }
    this.platformName = platformName;
    this.platform = platform;
  }
  registerFlag(flagName, evaluationFn, setHook) {
    this.flagRegistry[flagName] = { evaluationFn, setHook };
    if (this.urlFlags[flagName] != null) {
      const flagValue = this.urlFlags[flagName];
      if (!(env().getBool("IS_TEST") || env().getBool("PROD"))) {
        console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);
      }
      this.set(flagName, flagValue);
    }
  }
  async getAsync(flagName) {
    if (flagName in this.flags) {
      return this.flags[flagName];
    }
    this.flags[flagName] = await this.evaluateFlag(flagName);
    return this.flags[flagName];
  }
  get(flagName) {
    if (flagName in this.flags) {
      return this.flags[flagName];
    }
    const flagValue = this.evaluateFlag(flagName);
    if (isPromise(flagValue)) {
      throw new Error(`Flag ${flagName} cannot be synchronously evaluated. Please use getAsync() instead.`);
    }
    this.flags[flagName] = flagValue;
    return this.flags[flagName];
  }
  getNumber(flagName) {
    return this.get(flagName);
  }
  getBool(flagName) {
    return this.get(flagName);
  }
  getFlags() {
    return this.flags;
  }
  get features() {
    return this.flags;
  }
  set(flagName, value) {
    if (this.flagRegistry[flagName] == null) {
      throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);
    }
    this.flags[flagName] = value;
    if (this.flagRegistry[flagName].setHook != null) {
      this.flagRegistry[flagName].setHook(value);
    }
  }
  evaluateFlag(flagName) {
    if (this.flagRegistry[flagName] == null) {
      throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);
    }
    return this.flagRegistry[flagName].evaluationFn();
  }
  setFlags(flags) {
    this.flags = Object.assign({}, flags);
  }
  reset() {
    this.flags = {};
    this.urlFlags = {};
    this.populateURLFlags();
  }
  populateURLFlags() {
    if (typeof this.global === "undefined" || typeof this.global.location === "undefined" || typeof this.global.location.search === "undefined") {
      return;
    }
    const urlParams = this.getQueryParams(this.global.location.search);
    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {
      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(",");
      keyValues.forEach((keyValue) => {
        const [key, value] = keyValue.split(":");
        this.urlFlags[key] = parseValue(key, value);
      });
    }
  }
};
function getQueryParams(queryString) {
  const params = {};
  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {
    decodeParam(params, t[0], t[1]);
    return t.join("=");
  });
  return params;
}
function decodeParam(params, name, value) {
  params[decodeURIComponent(name)] = decodeURIComponent(value || "");
}
function parseValue(flagName, value) {
  value = value.toLowerCase();
  if (value === "true" || value === "false") {
    return value === "true";
  } else if (`${+value}` === value) {
    return +value;
  }
  throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);
}
function env() {
  return ENV;
}
var ENV = null;
function setEnvironmentGlobal(environment) {
  ENV = environment;
}

// node_modules/@tensorflow/tfjs-core/dist/global_util.js
var globalNameSpace;
function getGlobalNamespace() {
  if (globalNameSpace == null) {
    let ns;
    if (typeof window !== "undefined") {
      ns = window;
    } else if (typeof global !== "undefined") {
      ns = global;
    } else if (typeof process !== "undefined") {
      ns = process;
    } else if (typeof self !== "undefined") {
      ns = self;
    } else {
      throw new Error("Could not find a global object");
    }
    globalNameSpace = ns;
  }
  return globalNameSpace;
}
function getGlobalMap() {
  const ns = getGlobalNamespace();
  if (ns._tfGlobals == null) {
    ns._tfGlobals = /* @__PURE__ */ new Map();
  }
  return ns._tfGlobals;
}
function getGlobal(key, init) {
  const globalMap = getGlobalMap();
  if (globalMap.has(key)) {
    return globalMap.get(key);
  } else {
    const singleton = init();
    globalMap.set(key, singleton);
    return globalMap.get(key);
  }
}

// node_modules/@tensorflow/tfjs-core/dist/kernel_names.js
var Abs = "Abs";
var Add = "Add";
var Atan2 = "Atan2";
var Cast = "Cast";
var Complex = "Complex";
var ComplexAbs = "ComplexAbs";
var Cos = "Cos";
var Elu = "Elu";
var Identity = "Identity";
var Imag = "Imag";
var LeakyRelu = "LeakyRelu";
var Multiply = "Multiply";
var Prelu = "Prelu";
var Real = "Real";
var Relu = "Relu";
var Reshape = "Reshape";
var Relu6 = "Relu6";
var Sin = "Sin";
var Sigmoid = "Sigmoid";
var Sum = "Sum";
var Step = "Step";

// node_modules/@tensorflow/tfjs-core/dist/log.js
function warn(...msg) {
  if (!(env().getBool("IS_TEST") || env().getBool("PROD"))) {
    console.warn(...msg);
  }
}
function log(...msg) {
  if (!(env().getBool("IS_TEST") || env().getBool("PROD"))) {
    console.log(...msg);
  }
}

// node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js
var kernelRegistry = getGlobal("kernelRegistry", () => /* @__PURE__ */ new Map());
var gradRegistry = getGlobal("gradRegistry", () => /* @__PURE__ */ new Map());
function getKernel(kernelName, backendName) {
  const key = makeKey(kernelName, backendName);
  return kernelRegistry.get(key);
}
function getGradient(kernelName) {
  return gradRegistry.get(kernelName);
}
function getKernelsForBackend(backendName) {
  const it = kernelRegistry.entries();
  const result = [];
  while (true) {
    const { done, value } = it.next();
    if (done) {
      break;
    }
    const [key, config] = value;
    const [backend] = key.split("_");
    if (backend === backendName) {
      result.push(config);
    }
  }
  return result;
}
function registerKernel(config) {
  const { kernelName, backendName } = config;
  const key = makeKey(kernelName, backendName);
  if (kernelRegistry.has(key)) {
    warn(`The kernel '${kernelName}' for backend '${backendName}' is already registered`);
  }
  kernelRegistry.set(key, config);
}
function makeKey(kernelName, backendName) {
  return `${backendName}_${kernelName}`;
}

// node_modules/@tensorflow/tfjs-core/dist/util.js
var util_exports = {};
__export(util_exports, {
  arraysEqual: () => arraysEqual,
  assert: () => assert,
  assertNonNegativeIntegerDimensions: () => assertNonNegativeIntegerDimensions,
  assertNonNull: () => assertNonNull,
  assertShapesMatch: () => assertShapesMatch,
  bytesFromStringArray: () => bytesFromStringArray,
  bytesPerElement: () => bytesPerElement,
  checkConversionForErrors: () => checkConversionForErrors,
  clamp: () => clamp,
  computeStrides: () => computeStrides,
  createScalarValue: () => createScalarValue,
  createShuffledIndices: () => createShuffledIndices,
  decodeString: () => decodeString,
  distSquared: () => distSquared,
  encodeString: () => encodeString,
  fetch: () => fetch3,
  fingerPrint64: () => fingerPrint64,
  flatten: () => flatten,
  getArrayFromDType: () => getArrayFromDType,
  getTypedArrayFromDType: () => getTypedArrayFromDType,
  hasEncodingLoss: () => hasEncodingLoss,
  hexToLong: () => hexToLong,
  indexToLoc: () => indexToLoc,
  inferDtype: () => inferDtype,
  inferFromImplicitShape: () => inferFromImplicitShape,
  isBoolean: () => isBoolean,
  isFunction: () => isFunction,
  isInt: () => isInt,
  isNumber: () => isNumber,
  isPromise: () => isPromise,
  isScalarShape: () => isScalarShape,
  isString: () => isString,
  isTypedArray: () => isTypedArray,
  isValidDtype: () => isValidDtype,
  locToIndex: () => locToIndex,
  makeOnesTypedArray: () => makeOnesTypedArray,
  makeZerosNestedTypedArray: () => makeZerosNestedTypedArray,
  makeZerosTypedArray: () => makeZerosTypedArray,
  nearestDivisor: () => nearestDivisor,
  nearestLargerEven: () => nearestLargerEven,
  now: () => now,
  parseAxisParam: () => parseAxisParam,
  randUniform: () => randUniform,
  repeatedTry: () => repeatedTry,
  rightPad: () => rightPad,
  shuffle: () => shuffle,
  shuffleCombo: () => shuffleCombo,
  sizeFromShape: () => sizeFromShape,
  sizeToSquarishShape: () => sizeToSquarishShape,
  squeezeShape: () => squeezeShape,
  sum: () => sum,
  swap: () => swap,
  tanh: () => tanh,
  toNestedArray: () => toNestedArray,
  toTypedArray: () => toTypedArray
});

// node_modules/@tensorflow/tfjs-core/dist/hash_util.js
var LongExports = __toESM(require_long());
var Long = LongExports.default || LongExports;
function hexToLong(hex) {
  return Long.fromString(hex, true, 16);
}
var k0 = hexToLong("c3a5c85c97cb3127");
var k1 = hexToLong("b492b66fbe98f273");
var k2 = hexToLong("9ae16a3b2f90404f");
function shiftMix(val) {
  return val.xor(val.shru(47));
}
function fetch2(s, offset, numBytes) {
  const bytes = s.slice(offset, offset + numBytes);
  return Long.fromBytes(Array.from(bytes), true, true);
}
function fetch64(s, offset) {
  return fetch2(s, offset, 8);
}
function fetch32(s, offset) {
  return fetch2(s, offset, 4);
}
function rotate64(val, shift) {
  return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));
}
function hashLen16(u, v, mul2 = hexToLong("9ddfea08eb382d69")) {
  let a2 = u.xor(v).mul(mul2);
  a2 = a2.xor(a2.shru(47));
  let b2 = v.xor(a2).mul(mul2);
  b2 = b2.xor(b2.shru(47));
  b2 = b2.mul(mul2);
  return b2;
}
function weakHashLen32WithSeeds(w, x, y, z, a2, b2) {
  a2 = a2.add(w);
  b2 = rotate64(b2.add(a2).add(z), 21);
  const c = a2;
  a2 = a2.add(x);
  a2 = a2.add(y);
  b2 = b2.add(rotate64(a2, 44));
  return [a2.add(z), b2.add(c)];
}
function weakHashLen32WithSeedsStr(s, offset, a2, b2) {
  return weakHashLen32WithSeeds(fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16), fetch64(s, offset + 24), a2, b2);
}
function hashLen0to16(s, len = s.length) {
  if (len >= 8) {
    const mul2 = k2.add(len * 2);
    const a2 = fetch64(s, 0).add(k2);
    const b2 = fetch64(s, len - 8);
    const c = rotate64(b2, 37).mul(mul2).add(a2);
    const d = rotate64(a2, 25).add(b2).mul(mul2);
    return hashLen16(c, d, mul2);
  }
  if (len >= 4) {
    const mul2 = k2.add(len * 2);
    const a2 = fetch32(s, 0);
    return hashLen16(a2.shl(3).add(len), fetch32(s, len - 4), mul2);
  }
  if (len > 0) {
    const a2 = s[0];
    const b2 = s[len >> 1];
    const c = s[len - 1];
    const y = a2 + (b2 << 8);
    const z = len + (c << 2);
    return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);
  }
  return k2;
}
function hashLen17to32(s, len = s.length) {
  const mul2 = k2.add(len * 2);
  const a2 = fetch64(s, 0).mul(k1);
  const b2 = fetch64(s, 8);
  const c = fetch64(s, len - 8).mul(mul2);
  const d = fetch64(s, len - 16).mul(k2);
  return hashLen16(rotate64(a2.add(b2), 43).add(rotate64(c, 30)).add(d), a2.add(rotate64(b2.add(k2), 18)).add(c), mul2);
}
function hashLen33to64(s, len = s.length) {
  const mul2 = k2.add(len * 2);
  const a2 = fetch64(s, 0).mul(k2);
  const b2 = fetch64(s, 8);
  const c = fetch64(s, len - 8).mul(mul2);
  const d = fetch64(s, len - 16).mul(k2);
  const y = rotate64(a2.add(b2), 43).add(rotate64(c, 30)).add(d);
  const z = hashLen16(y, a2.add(rotate64(b2.add(k2), 18)).add(c), mul2);
  const e = fetch64(s, 16).mul(mul2);
  const f = fetch64(s, 24);
  const g = y.add(fetch64(s, len - 32)).mul(mul2);
  const h = z.add(fetch64(s, len - 24)).mul(mul2);
  return hashLen16(rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h), e.add(rotate64(f.add(a2), 18)).add(g), mul2);
}
function fingerPrint64(s, len = s.length) {
  const seed = Long.fromNumber(81, true);
  if (len <= 32) {
    if (len <= 16) {
      return hashLen0to16(s, len);
    } else {
      return hashLen17to32(s, len);
    }
  } else if (len <= 64) {
    return hashLen33to64(s, len);
  }
  let x = seed;
  let y = seed.mul(k1).add(113);
  let z = shiftMix(y.mul(k2).add(113)).mul(k2);
  let v = [Long.UZERO, Long.UZERO];
  let w = [Long.UZERO, Long.UZERO];
  x = x.mul(k2).add(fetch64(s, 0));
  let offset = 0;
  const end = (len - 1 >> 6) * 64;
  const last64 = end + (len - 1 & 63) - 63;
  do {
    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);
    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);
    x = x.xor(w[1]);
    y = y.add(v[0]).add(fetch64(s, offset + 40));
    z = rotate64(z.add(w[0]), 33).mul(k1);
    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));
    w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));
    [z, x] = [x, z];
    offset += 64;
  } while (offset !== end);
  const mul2 = k1.add(z.and(255).shl(1));
  offset = last64;
  w[0] = w[0].add(len - 1 & 63);
  v[0] = v[0].add(w[0]);
  w[0] = w[0].add(v[0]);
  x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul2);
  y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul2);
  x = x.xor(w[1].mul(9));
  y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));
  z = rotate64(z.add(w[0]), 33).mul(mul2);
  v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul2), x.add(w[0]));
  w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));
  [z, x] = [x, z];
  return hashLen16(hashLen16(v[0], w[0], mul2).add(shiftMix(y).mul(k0)).add(z), hashLen16(v[1], w[1], mul2).add(x), mul2);
}

// node_modules/@tensorflow/tfjs-core/dist/util.js
function createScalarValue(value, dtype) {
  if (dtype === "string") {
    return encodeString(value);
  }
  return toTypedArray([value], dtype);
}
function noConversionNeeded(a2, dtype) {
  return a2 instanceof Float32Array && dtype === "float32" || a2 instanceof Int32Array && dtype === "int32" || a2 instanceof Uint8Array && dtype === "bool";
}
function toTypedArray(a2, dtype) {
  if (dtype === "string") {
    throw new Error("Cannot convert a string[] to a TypedArray");
  }
  if (Array.isArray(a2)) {
    a2 = flatten(a2);
  }
  if (env().getBool("DEBUG")) {
    checkConversionForErrors(a2, dtype);
  }
  if (noConversionNeeded(a2, dtype)) {
    return a2;
  }
  if (dtype == null || dtype === "float32" || dtype === "complex64") {
    return new Float32Array(a2);
  } else if (dtype === "int32") {
    return new Int32Array(a2);
  } else if (dtype === "bool") {
    const bool = new Uint8Array(a2.length);
    for (let i = 0; i < bool.length; ++i) {
      if (Math.round(a2[i]) !== 0) {
        bool[i] = 1;
      }
    }
    return bool;
  } else {
    throw new Error(`Unknown data type ${dtype}`);
  }
}
function now() {
  return env().platform.now();
}
function fetch3(path, requestInits) {
  return env().platform.fetch(path, requestInits);
}
function encodeString(s, encoding = "utf-8") {
  encoding = encoding || "utf-8";
  return env().platform.encode(s, encoding);
}
function decodeString(bytes, encoding = "utf-8") {
  encoding = encoding || "utf-8";
  return env().platform.decode(bytes, encoding);
}

// node_modules/@tensorflow/tfjs-core/dist/profiler.js
var Profiler = class {
  constructor(backendTimer, logger) {
    this.backendTimer = backendTimer;
    this.logger = logger;
    if (logger == null) {
      this.logger = new Logger();
    }
  }
  profileKernel(kernelName, inputs, f) {
    let outputs;
    const holdResultWrapperFn = () => {
      outputs = f();
    };
    let timer;
    const start = now();
    if (this.backendTimer.timerAvailable()) {
      timer = this.backendTimer.time(holdResultWrapperFn);
    } else {
      holdResultWrapperFn();
      for (const output of outputs) {
        output.dataSync();
      }
      timer = Promise.resolve({ kernelMs: now() - start });
    }
    if (env().getBool("CHECK_COMPUTATION_FOR_ERRORS")) {
      for (let i = 0; i < outputs.length; i++) {
        const output = outputs[i];
        output.data().then((tensorVals) => {
          checkComputationForErrors(tensorVals, output.dtype, kernelName);
        });
      }
    }
    const kernelProfile = {
      kernelName,
      outputs,
      inputs,
      timeMs: timer.then((timing) => timing.kernelMs),
      extraInfo: timer.then((timing) => timing.getExtraProfileInfo != null ? timing.getExtraProfileInfo() : "")
    };
    return kernelProfile;
  }
  logKernelProfile(kernelProfile) {
    const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;
    outputs.forEach((result) => {
      Promise.all([result.data(), timeMs, extraInfo]).then((valueContainer) => {
        this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);
      });
    });
  }
};
function checkComputationForErrors(vals, dtype, kernelName) {
  if (dtype !== "float32") {
    return false;
  }
  for (let i = 0; i < vals.length; i++) {
    const num = vals[i];
    if (isNaN(num) || !isFinite(num)) {
      console.warn(`Found ${num} in the result of '${kernelName}'`);
      return true;
    }
  }
  return false;
}
var Logger = class {
  logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {
    const time = typeof timeMs === "number" ? rightPad(`${timeMs}ms`, 9) : timeMs["error"];
    const paddedName = rightPad(name, 25);
    const rank = result.rank;
    const size = result.size;
    const shape = rightPad(result.shape.toString(), 14);
    let inputShapesDescription = "";
    for (const name2 in inputs) {
      const input = inputs[name2];
      if (input != null) {
        const inputShape = input.shape || result.shape;
        const inputRank = inputShape.length;
        inputShapesDescription += `${name2}: ${inputRank}D ${inputRank > 0 ? inputShape : ""} `;
      }
    }
    console.log(`%c${paddedName}	%c${time}	%c${rank}D ${shape}	%c${size}	%c${inputShapesDescription}	%c${extraInfo}`, "font-weight:bold", "color:red", "color:blue", "color: orange", "color: green", "color: steelblue");
  }
};

// node_modules/@tensorflow/tfjs-core/dist/tape.js
function getFilteredNodesXToY(tape, xs, y) {
  const tensorsFromX = {};
  const nodesFromX = {};
  for (let i = 0; i < xs.length; i++) {
    tensorsFromX[xs[i].id] = true;
  }
  for (let i = 0; i < tape.length; i++) {
    const node = tape[i];
    const nodeInputs = node.inputs;
    for (const inputName in nodeInputs) {
      const input = nodeInputs[inputName];
      let anyInputFromX = false;
      for (let j = 0; j < xs.length; j++) {
        if (tensorsFromX[input.id]) {
          node.outputs.forEach((output) => tensorsFromX[output.id] = true);
          anyInputFromX = true;
          nodesFromX[node.id] = true;
          break;
        }
      }
      if (anyInputFromX) {
        break;
      }
    }
  }
  const tensorsLeadToY = {};
  tensorsLeadToY[y.id] = true;
  const nodesToY = {};
  for (let i = tape.length - 1; i >= 0; i--) {
    const node = tape[i];
    const nodeInputs = node.inputs;
    for (let j = 0; j < node.outputs.length; j++) {
      if (tensorsLeadToY[node.outputs[j].id]) {
        for (const inputName in nodeInputs) {
          tensorsLeadToY[nodeInputs[inputName].id] = true;
          nodesToY[node.id] = true;
        }
        break;
      }
    }
  }
  const filteredTape = [];
  for (let i = 0; i < tape.length; i++) {
    const node = tape[i];
    if (nodesFromX[node.id] && nodesToY[node.id]) {
      const prunedInputs = {};
      for (const inputName in node.inputs) {
        const nodeInput = node.inputs[inputName];
        if (tensorsFromX[nodeInput.id]) {
          prunedInputs[inputName] = nodeInput;
        }
      }
      const prunedNode = Object.assign({}, node);
      prunedNode.inputs = prunedInputs;
      prunedNode.outputs = node.outputs;
      filteredTape.push(prunedNode);
    }
  }
  return filteredTape;
}
function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy2, add2) {
  for (let i = filteredTape.length - 1; i >= 0; i--) {
    const node = filteredTape[i];
    const dys = [];
    node.outputs.forEach((o) => {
      const gradTensor = tensorAccumulatedGradientMap[o.id];
      if (gradTensor != null) {
        dys.push(gradTensor);
      } else {
        dys.push(null);
      }
    });
    if (node.gradient == null) {
      throw new Error(`Cannot compute gradient: gradient function not found for ${node.kernelName}.`);
    }
    const inputGradients = node.gradient(dys);
    for (const inputName in node.inputs) {
      if (!(inputName in inputGradients)) {
        throw new Error(`Cannot backprop through input ${inputName}. Available gradients found: ${Object.keys(inputGradients)}.`);
      }
      const dx = tidy2(() => inputGradients[inputName]());
      if (dx.dtype !== "float32") {
        throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);
      }
      const x = node.inputs[inputName];
      if (!arraysEqual(dx.shape, x.shape)) {
        throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input '${inputName}' has shape '${dx.shape}', which does not match the shape of the input '${x.shape}'`);
      }
      if (tensorAccumulatedGradientMap[x.id] == null) {
        tensorAccumulatedGradientMap[x.id] = dx;
      } else {
        const curGradient = tensorAccumulatedGradientMap[x.id];
        tensorAccumulatedGradientMap[x.id] = add2(curGradient, dx);
        curGradient.dispose();
      }
    }
  }
}

// node_modules/@tensorflow/tfjs-core/dist/tensor_format.js
var FORMAT_LIMIT_NUM_VALS = 20;
var FORMAT_NUM_FIRST_LAST_VALS = 3;
var FORMAT_NUM_SIG_DIGITS = 7;
function tensorToString(vals, shape, dtype, verbose) {
  const strides = computeStrides(shape);
  const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);
  const rank = shape.length;
  const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);
  const lines = ["Tensor"];
  if (verbose) {
    lines.push(`  dtype: ${dtype}`);
    lines.push(`  rank: ${rank}`);
    lines.push(`  shape: [${shape}]`);
    lines.push(`  values:`);
  }
  lines.push(valsLines.map((l) => "    " + l).join("\n"));
  return lines.join("\n");
}
function computeMaxSizePerColumn(vals, shape, dtype, strides) {
  const n = sizeFromShape(shape);
  const numCols = strides[strides.length - 1];
  const padPerCol = new Array(numCols).fill(0);
  const rank = shape.length;
  const valuesOrTuples = dtype === "complex64" ? createComplexTuples(vals) : vals;
  if (rank > 1) {
    for (let row = 0; row < n / numCols; row++) {
      const offset = row * numCols;
      for (let j = 0; j < numCols; j++) {
        padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);
      }
    }
  }
  return padPerCol;
}
function valToString(val, pad, dtype) {
  let valStr;
  if (Array.isArray(val)) {
    valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;
  } else if (isString(val)) {
    valStr = `'${val}'`;
  } else if (dtype === "bool") {
    valStr = boolNumToString(val);
  } else {
    valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();
  }
  return rightPad(valStr, pad);
}
function boolNumToString(v) {
  return v === 0 ? "false" : "true";
}
function subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {
  const storagePerElement = dtype === "complex64" ? 2 : 1;
  const size = shape[0];
  const rank = shape.length;
  if (rank === 0) {
    if (dtype === "complex64") {
      const complexTuple = createComplexTuples(vals);
      return [valToString(complexTuple[0], 0, dtype)];
    }
    if (dtype === "bool") {
      return [boolNumToString(vals[0])];
    }
    return [vals[0].toString()];
  }
  if (rank === 1) {
    if (size > FORMAT_LIMIT_NUM_VALS) {
      const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;
      let firstVals = Array.from(vals.slice(0, firstValsSize));
      let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));
      if (dtype === "complex64") {
        firstVals = createComplexTuples(firstVals);
        lastVals = createComplexTuples(lastVals);
      }
      return [
        "[" + firstVals.map((x, i) => valToString(x, padPerCol[i], dtype)).join(", ") + ", ..., " + lastVals.map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype)).join(", ") + "]"
      ];
    }
    const displayVals = dtype === "complex64" ? createComplexTuples(vals) : Array.from(vals);
    return [
      "[" + displayVals.map((x, i) => valToString(x, padPerCol[i], dtype)).join(", ") + "]"
    ];
  }
  const subshape = shape.slice(1);
  const substrides = strides.slice(1);
  const stride = strides[0] * storagePerElement;
  const lines = [];
  if (size > FORMAT_LIMIT_NUM_VALS) {
    for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {
      const start = i * stride;
      const end = start + stride;
      lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false));
    }
    lines.push("...");
    for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {
      const start = i * stride;
      const end = start + stride;
      lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1));
    }
  } else {
    for (let i = 0; i < size; i++) {
      const start = i * stride;
      const end = start + stride;
      lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1));
    }
  }
  const sep = rank === 2 ? "," : "";
  lines[0] = "[" + lines[0] + sep;
  for (let i = 1; i < lines.length - 1; i++) {
    lines[i] = " " + lines[i] + sep;
  }
  let newLineSep = ",\n";
  for (let i = 2; i < rank; i++) {
    newLineSep += "\n";
  }
  lines[lines.length - 1] = " " + lines[lines.length - 1] + "]" + (isLast ? "" : newLineSep);
  return lines;
}
function createComplexTuples(vals) {
  const complexTuples = [];
  for (let i = 0; i < vals.length; i += 2) {
    complexTuples.push([vals[i], vals[i + 1]]);
  }
  return complexTuples;
}

// node_modules/@tensorflow/tfjs-core/dist/tensor.js
var TensorBuffer = class {
  constructor(shape, dtype, values) {
    this.dtype = dtype;
    this.shape = shape.slice();
    this.size = sizeFromShape(shape);
    if (values != null) {
      const n = values.length;
      assert(n === this.size, () => `Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`);
    }
    if (dtype === "complex64") {
      throw new Error(`complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).`);
    }
    this.values = values || getArrayFromDType(dtype, this.size);
    this.strides = computeStrides(shape);
  }
  set(value, ...locs) {
    if (locs.length === 0) {
      locs = [0];
    }
    assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must match the rank (${this.rank})`);
    const index = this.locToIndex(locs);
    this.values[index] = value;
  }
  get(...locs) {
    if (locs.length === 0) {
      locs = [0];
    }
    let i = 0;
    for (const loc of locs) {
      if (loc < 0 || loc >= this.shape[i]) {
        const msg = `Requested out of range element at ${locs}.   Buffer shape=${this.shape}`;
        throw new Error(msg);
      }
      i++;
    }
    let index = locs[locs.length - 1];
    for (let i2 = 0; i2 < locs.length - 1; ++i2) {
      index += this.strides[i2] * locs[i2];
    }
    return this.values[index];
  }
  locToIndex(locs) {
    if (this.rank === 0) {
      return 0;
    } else if (this.rank === 1) {
      return locs[0];
    }
    let index = locs[locs.length - 1];
    for (let i = 0; i < locs.length - 1; ++i) {
      index += this.strides[i] * locs[i];
    }
    return index;
  }
  indexToLoc(index) {
    if (this.rank === 0) {
      return [];
    } else if (this.rank === 1) {
      return [index];
    }
    const locs = new Array(this.shape.length);
    for (let i = 0; i < locs.length - 1; ++i) {
      locs[i] = Math.floor(index / this.strides[i]);
      index -= locs[i] * this.strides[i];
    }
    locs[locs.length - 1] = index;
    return locs;
  }
  get rank() {
    return this.shape.length;
  }
  toTensor() {
    return trackerFn().makeTensor(this.values, this.shape, this.dtype);
  }
};
var trackerFn = null;
var opHandler = null;
var deprecationWarningFn = null;
function setTensorTracker(fn) {
  trackerFn = fn;
}
function setOpHandler(handler) {
  opHandler = handler;
}
function setDeprecationWarningFn(fn) {
  deprecationWarningFn = fn;
}
var Tensor = class {
  constructor(shape, dtype, dataId, id) {
    this.kept = false;
    this.isDisposedInternal = false;
    this.shape = shape.slice();
    this.dtype = dtype || "float32";
    this.size = sizeFromShape(shape);
    this.strides = computeStrides(shape);
    this.dataId = dataId;
    this.id = id;
    this.rankType = this.rank < 5 ? this.rank.toString() : "higher";
  }
  get rank() {
    return this.shape.length;
  }
  async buffer() {
    const vals = await this.data();
    return opHandler.buffer(this.shape, this.dtype, vals);
  }
  bufferSync() {
    return opHandler.buffer(this.shape, this.dtype, this.dataSync());
  }
  async array() {
    const vals = await this.data();
    return toNestedArray(this.shape, vals, this.dtype === "complex64");
  }
  arraySync() {
    return toNestedArray(this.shape, this.dataSync(), this.dtype === "complex64");
  }
  async data() {
    this.throwIfDisposed();
    const data = trackerFn().read(this.dataId);
    if (this.dtype === "string") {
      const bytes = await data;
      try {
        return bytes.map((b2) => decodeString(b2));
      } catch (_a) {
        throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().");
      }
    }
    return data;
  }
  dataToGPU(options) {
    this.throwIfDisposed();
    return trackerFn().readToGPU(this.dataId, options);
  }
  dataSync() {
    this.throwIfDisposed();
    const data = trackerFn().readSync(this.dataId);
    if (this.dtype === "string") {
      try {
        return data.map((b2) => decodeString(b2));
      } catch (_a) {
        throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().");
      }
    }
    return data;
  }
  async bytes() {
    this.throwIfDisposed();
    const data = await trackerFn().read(this.dataId);
    if (this.dtype === "string") {
      return data;
    } else {
      return new Uint8Array(data.buffer);
    }
  }
  dispose() {
    if (this.isDisposed) {
      return;
    }
    trackerFn().disposeTensor(this);
    this.isDisposedInternal = true;
  }
  get isDisposed() {
    return this.isDisposedInternal;
  }
  throwIfDisposed() {
    if (this.isDisposed) {
      throw new Error(`Tensor is disposed.`);
    }
  }
  print(verbose = false) {
    return opHandler.print(this, verbose);
  }
  clone() {
    this.throwIfDisposed();
    return opHandler.clone(this);
  }
  toString(verbose = false) {
    const vals = this.dataSync();
    return tensorToString(vals, this.shape, this.dtype, verbose);
  }
  cast(dtype) {
    this.throwIfDisposed();
    return opHandler.cast(this, dtype);
  }
  variable(trainable = true, name, dtype) {
    this.throwIfDisposed();
    return trackerFn().makeVariable(this, trainable, name, dtype);
  }
};
Object.defineProperty(Tensor, Symbol.hasInstance, {
  value: (instance) => {
    return !!instance && instance.data != null && instance.dataSync != null && instance.throwIfDisposed != null;
  }
});
function getGlobalTensorClass() {
  return getGlobal("Tensor", () => {
    return Tensor;
  });
}
getGlobalTensorClass();
var Variable = class extends Tensor {
  constructor(initialValue, trainable, name, tensorId) {
    super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);
    this.trainable = trainable;
    this.name = name;
  }
  assign(newValue) {
    if (newValue.dtype !== this.dtype) {
      throw new Error(`dtype of the new value (${newValue.dtype}) and previous value (${this.dtype}) must match`);
    }
    if (!arraysEqual(newValue.shape, this.shape)) {
      throw new Error(`shape of the new value (${newValue.shape}) and previous value (${this.shape}) must match`);
    }
    trackerFn().disposeTensor(this);
    this.dataId = newValue.dataId;
    trackerFn().incRef(this, null);
  }
  dispose() {
    trackerFn().disposeVariable(this);
    this.isDisposedInternal = true;
  }
};
Object.defineProperty(Variable, Symbol.hasInstance, {
  value: (instance) => {
    return instance instanceof Tensor && instance.assign != null && instance.assign instanceof Function;
  }
});

// node_modules/@tensorflow/tfjs-core/dist/types.js
var Rank;
(function(Rank2) {
  Rank2["R0"] = "R0";
  Rank2["R1"] = "R1";
  Rank2["R2"] = "R2";
  Rank2["R3"] = "R3";
  Rank2["R4"] = "R4";
  Rank2["R5"] = "R5";
  Rank2["R6"] = "R6";
})(Rank || (Rank = {}));
var UpcastInt32AndMap;
(function(UpcastInt32AndMap2) {
  UpcastInt32AndMap2["float32"] = "float32";
  UpcastInt32AndMap2["int32"] = "int32";
  UpcastInt32AndMap2["bool"] = "int32";
  UpcastInt32AndMap2["complex64"] = "complex64";
})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));
var UpcastBoolAndMap;
(function(UpcastBoolAndMap2) {
  UpcastBoolAndMap2["float32"] = "float32";
  UpcastBoolAndMap2["int32"] = "int32";
  UpcastBoolAndMap2["bool"] = "bool";
  UpcastBoolAndMap2["complex64"] = "complex64";
})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));
var UpcastFloat32AndMap;
(function(UpcastFloat32AndMap2) {
  UpcastFloat32AndMap2["float32"] = "float32";
  UpcastFloat32AndMap2["int32"] = "float32";
  UpcastFloat32AndMap2["bool"] = "float32";
  UpcastFloat32AndMap2["complex64"] = "complex64";
})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));
var UpcastComplex64AndMap;
(function(UpcastComplex64AndMap2) {
  UpcastComplex64AndMap2["float32"] = "complex64";
  UpcastComplex64AndMap2["int32"] = "complex64";
  UpcastComplex64AndMap2["bool"] = "complex64";
  UpcastComplex64AndMap2["complex64"] = "complex64";
})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));
var upcastTypeMap = {
  "float32": UpcastFloat32AndMap,
  "int32": UpcastInt32AndMap,
  "bool": UpcastBoolAndMap,
  "complex64": UpcastComplex64AndMap
};
function upcastType(typeA, typeB) {
  if (typeA === "string" || typeB === "string") {
    if (typeA === "string" && typeB === "string") {
      return "string";
    }
    throw new Error(`Can not upcast ${typeA} with ${typeB}`);
  }
  return upcastTypeMap[typeA][typeB];
}

// node_modules/@tensorflow/tfjs-core/dist/tensor_util.js
function makeTypesMatch(a2, b2) {
  if (a2.dtype === b2.dtype) {
    return [a2, b2];
  }
  const dtype = upcastType(a2.dtype, b2.dtype);
  return [a2.cast(dtype), b2.cast(dtype)];
}
function getTensorsInContainer(result) {
  const list = [];
  const seen = /* @__PURE__ */ new Set();
  walkTensorContainer(result, list, seen);
  return list;
}
function walkTensorContainer(container, list, seen) {
  if (container == null) {
    return;
  }
  if (container instanceof Tensor) {
    list.push(container);
    return;
  }
  if (!isIterable(container)) {
    return;
  }
  const iterable = container;
  for (const k in iterable) {
    const val = iterable[k];
    if (!seen.has(val)) {
      seen.add(val);
      walkTensorContainer(val, list, seen);
    }
  }
}
function isIterable(obj) {
  return Array.isArray(obj) || typeof obj === "object";
}

// node_modules/@tensorflow/tfjs-core/dist/engine.js
function isRegisteredKernelInvocation(kernelInvocation) {
  return kernelInvocation.kernelName != null;
}
var EngineState = class {
  constructor() {
    this.registeredVariables = {};
    this.nextTapeNodeId = 0;
    this.numBytes = 0;
    this.numTensors = 0;
    this.numStringTensors = 0;
    this.numDataBuffers = 0;
    this.gradientDepth = 0;
    this.kernelDepth = 0;
    this.scopeStack = [];
    this.numDataMovesStack = [];
    this.nextScopeId = 0;
    this.tensorInfo = /* @__PURE__ */ new WeakMap();
    this.profiling = false;
    this.activeProfile = {
      newBytes: 0,
      newTensors: 0,
      peakBytes: 0,
      kernels: [],
      result: null,
      get kernelNames() {
        return Array.from(new Set(this.kernels.map((k) => k.name)));
      }
    };
  }
  dispose() {
    for (const variableName in this.registeredVariables) {
      this.registeredVariables[variableName].dispose();
    }
  }
};
var Engine = class {
  constructor(ENV3) {
    this.ENV = ENV3;
    this.registry = {};
    this.registryFactory = {};
    this.pendingBackendInitId = 0;
    this.state = new EngineState();
  }
  async ready() {
    if (this.pendingBackendInit != null) {
      return this.pendingBackendInit.then(() => {
      });
    }
    if (this.backendInstance != null) {
      return;
    }
    const sortedBackends = this.getSortedBackends();
    for (let i = 0; i < sortedBackends.length; i++) {
      const backendName = sortedBackends[i];
      const success = await this.initializeBackend(backendName).success;
      if (success) {
        await this.setBackend(backendName);
        return;
      }
    }
    throw new Error(`Could not initialize any backends, all backend initializations failed.`);
  }
  get backend() {
    if (this.pendingBackendInit != null) {
      throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);
    }
    if (this.backendInstance == null) {
      const { name, asyncInit } = this.initializeBackendsAndReturnBest();
      if (asyncInit) {
        throw new Error(`The highest priority backend '${name}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);
      }
      this.setBackend(name);
    }
    return this.backendInstance;
  }
  backendNames() {
    return Object.keys(this.registryFactory);
  }
  findBackend(backendName) {
    if (!(backendName in this.registry)) {
      if (backendName in this.registryFactory) {
        const { asyncInit } = this.initializeBackend(backendName);
        if (asyncInit) {
          return null;
        }
      } else {
        return null;
      }
    }
    return this.registry[backendName];
  }
  findBackendFactory(backendName) {
    if (!(backendName in this.registryFactory)) {
      return null;
    }
    return this.registryFactory[backendName].factory;
  }
  registerBackend(backendName, factory, priority = 1) {
    if (backendName in this.registryFactory) {
      warn(`${backendName} backend was already registered. Reusing existing backend factory.`);
      return false;
    }
    this.registryFactory[backendName] = { factory, priority };
    return true;
  }
  async setBackend(backendName) {
    if (this.registryFactory[backendName] == null) {
      throw new Error(`Backend name '${backendName}' not found in registry`);
    }
    this.backendName = backendName;
    if (this.registry[backendName] == null) {
      this.backendInstance = null;
      const { success, asyncInit } = this.initializeBackend(backendName);
      const result = asyncInit ? await success : success;
      if (!result) {
        return false;
      }
    }
    this.backendInstance = this.registry[backendName];
    this.setupRegisteredKernels();
    this.profiler = new Profiler(this.backendInstance);
    return true;
  }
  setupRegisteredKernels() {
    const kernels = getKernelsForBackend(this.backendName);
    kernels.forEach((kernel) => {
      if (kernel.setupFunc != null) {
        kernel.setupFunc(this.backendInstance);
      }
    });
  }
  disposeRegisteredKernels(backendName) {
    const kernels = getKernelsForBackend(backendName);
    kernels.forEach((kernel) => {
      if (kernel.disposeFunc != null) {
        kernel.disposeFunc(this.registry[backendName]);
      }
    });
  }
  initializeBackend(backendName) {
    const registryFactoryEntry = this.registryFactory[backendName];
    if (registryFactoryEntry == null) {
      throw new Error(`Cannot initialize backend ${backendName}, no registration found.`);
    }
    try {
      const backend = registryFactoryEntry.factory();
      if (backend && !(backend instanceof KernelBackend) && typeof backend.then === "function") {
        const promiseId = ++this.pendingBackendInitId;
        const success = backend.then((backendInstance) => {
          if (promiseId < this.pendingBackendInitId) {
            return false;
          }
          this.registry[backendName] = backendInstance;
          this.pendingBackendInit = null;
          return true;
        }).catch((err) => {
          if (promiseId < this.pendingBackendInitId) {
            return false;
          }
          this.pendingBackendInit = null;
          warn(`Initialization of backend ${backendName} failed`);
          warn(err.stack || err.message);
          return false;
        });
        this.pendingBackendInit = success;
        return { success, asyncInit: true };
      } else {
        this.registry[backendName] = backend;
        return { success: true, asyncInit: false };
      }
    } catch (err) {
      warn(`Initialization of backend ${backendName} failed`);
      warn(err.stack || err.message);
      return { success: false, asyncInit: false };
    }
  }
  removeBackend(backendName) {
    if (!(backendName in this.registryFactory)) {
      throw new Error(`${backendName} backend not found in registry`);
    }
    if (this.backendName === backendName && this.pendingBackendInit != null) {
      this.pendingBackendInitId++;
    }
    if (backendName in this.registry) {
      this.disposeRegisteredKernels(backendName);
      this.registry[backendName].dispose();
      delete this.registry[backendName];
    }
    delete this.registryFactory[backendName];
    if (this.backendName === backendName) {
      this.pendingBackendInit = null;
      this.backendName = null;
      this.backendInstance = null;
    }
  }
  getSortedBackends() {
    if (Object.keys(this.registryFactory).length === 0) {
      throw new Error("No backend found in registry.");
    }
    return Object.keys(this.registryFactory).sort((a2, b2) => {
      return this.registryFactory[b2].priority - this.registryFactory[a2].priority;
    });
  }
  initializeBackendsAndReturnBest() {
    const sortedBackends = this.getSortedBackends();
    for (let i = 0; i < sortedBackends.length; i++) {
      const backendName = sortedBackends[i];
      const { success, asyncInit } = this.initializeBackend(backendName);
      if (asyncInit || success) {
        return { name: backendName, asyncInit };
      }
    }
    throw new Error(`Could not initialize any backends, all backend initializations failed.`);
  }
  moveData(backend, dataId) {
    const info = this.state.tensorInfo.get(dataId);
    const srcBackend = info.backend;
    const values = this.readSync(dataId);
    const refCount = srcBackend.refCount(dataId);
    srcBackend.disposeData(dataId, true);
    info.backend = backend;
    backend.move(dataId, values, info.shape, info.dtype, refCount);
    if (this.shouldCheckForMemLeaks()) {
      this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;
    }
  }
  tidy(nameOrFn, fn) {
    let name = null;
    if (fn == null) {
      if (typeof nameOrFn !== "function") {
        throw new Error("Please provide a function to tidy()");
      }
      fn = nameOrFn;
    } else {
      if (typeof nameOrFn !== "string" && !(nameOrFn instanceof String)) {
        throw new Error("When calling with two arguments, the first argument to tidy() must be a string");
      }
      if (typeof fn !== "function") {
        throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");
      }
      name = nameOrFn;
    }
    let result;
    return this.scopedRun(() => this.startScope(name), () => this.endScope(result), () => {
      result = fn();
      if (result instanceof Promise) {
        console.error("Cannot return a Promise inside of tidy.");
      }
      return result;
    });
  }
  scopedRun(start, end, f) {
    start();
    try {
      const res = f();
      end();
      return res;
    } catch (ex) {
      end();
      throw ex;
    }
  }
  nextTensorId() {
    return Engine.nextTensorId++;
  }
  nextVariableId() {
    return Engine.nextVariableId++;
  }
  clone(x) {
    const y = ENGINE.runKernel(Identity, { x });
    const inputs = { x };
    const grad = (dy) => ({
      x: () => {
        const dtype = "float32";
        const gradInputs = { x: dy };
        const attrs = { dtype };
        return ENGINE.runKernel(Cast, gradInputs, attrs);
      }
    });
    const saved = [];
    this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});
    return y;
  }
  runKernel(kernelName, inputs, attrs) {
    if (this.backendName == null) {
      this.backend;
    }
    const hasKernel = getKernel(kernelName, this.backendName) != null;
    if (!hasKernel) {
      throw new Error(`Kernel '${kernelName}' not registered for backend '${this.backendName}'`);
    }
    return this.runKernelFunc({ kernelName, inputs, attrs });
  }
  shouldCheckForMemLeaks() {
    return this.ENV.getBool("IS_TEST");
  }
  checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {
    const numDataIdsAfter = this.backend.numDataIds();
    let numOutputDataIds = 0;
    outInfos.forEach((info) => {
      numOutputDataIds += info.dtype === "complex64" ? 3 : 1;
    });
    const numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];
    const dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;
    if (dataIdsLeaked > 0) {
      throw new Error(`Backend '${this.backendName}' has an internal memory leak (${dataIdsLeaked} data ids) after running '${kernelName}'`);
    }
  }
  runKernelFunc(kernelParams) {
    let outputs;
    let saved = [];
    const isTapeOn = this.isTapeOn();
    const startingBytecount = this.state.numBytes;
    const startingNumTensors = this.state.numTensors;
    if (this.shouldCheckForMemLeaks()) {
      this.state.numDataMovesStack.push(0);
    }
    let kernelFunc;
    if (this.backendName == null) {
      this.backend;
    }
    let out;
    const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ? kernelParams.kernelName : this.state.activeScope != null ? this.state.activeScope.name : "";
    if (isRegisteredKernelInvocation(kernelParams)) {
      const { kernelName, inputs: inputs2, attrs: attrs2 } = kernelParams;
      if (this.backendName == null) {
        this.backend;
      }
      const kernel = getKernel(kernelName, this.backendName);
      assert(kernel != null, () => `Cannot find registered kernel '${kernelName}' for backend '${this.backendName}'`);
      kernelFunc = () => {
        const numDataIdsBefore = this.backend.numDataIds();
        out = kernel.kernelFunc({ inputs: inputs2, attrs: attrs2, backend: this.backend });
        const outInfos = Array.isArray(out) ? out : [out];
        if (this.shouldCheckForMemLeaks()) {
          this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);
        }
        const outTensors = outInfos.map((outInfo) => {
          if (outInfo.rank != null) {
            return outInfo;
          }
          const { dataId, shape, dtype } = outInfo;
          return this.makeTensorFromDataId(dataId, shape, dtype);
        });
        if (isTapeOn) {
          const tensorsToSave = this.getTensorsForGradient(kernelName, inputs2, outTensors);
          saved = this.saveTensorsForBackwardMode(tensorsToSave);
        }
        return outTensors;
      };
    } else {
      const { forwardFunc } = kernelParams;
      const saveFunc = (tensors) => {
        if (!isTapeOn) {
          return;
        }
        saved = tensors.map((tensor2) => this.keep(this.clone(tensor2)));
      };
      kernelFunc = () => {
        const numDataIdsBefore = this.backend.numDataIds();
        out = this.tidy(() => forwardFunc(this.backend, saveFunc));
        const outs = Array.isArray(out) ? out : [out];
        if (this.shouldCheckForMemLeaks()) {
          this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);
        }
        return outs;
      };
    }
    const { inputs, attrs } = kernelParams;
    const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ? null : kernelParams.backwardsFunc;
    let kernelProfile;
    this.scopedRun(() => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {
      if (!this.ENV.getBool("DEBUG") && !this.state.profiling) {
        outputs = kernelFunc();
      } else {
        kernelProfile = this.profiler.profileKernel(kernelOrScopeName, inputs, () => kernelFunc());
        if (this.ENV.getBool("DEBUG")) {
          this.profiler.logKernelProfile(kernelProfile);
        }
        outputs = kernelProfile.outputs;
      }
    });
    if (isTapeOn) {
      this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);
    }
    if (this.state.profiling) {
      this.state.activeProfile.kernels.push({
        name: kernelOrScopeName,
        bytesAdded: this.state.numBytes - startingBytecount,
        totalBytesSnapshot: this.state.numBytes,
        tensorsAdded: this.state.numTensors - startingNumTensors,
        totalTensorsSnapshot: this.state.numTensors,
        inputShapes: Object.keys(inputs).map((key) => inputs[key] != null ? inputs[key].shape : null),
        outputShapes: outputs.map((item) => item.shape),
        kernelTimeMs: kernelProfile.timeMs,
        extraInfo: kernelProfile.extraInfo
      });
    }
    return Array.isArray(out) ? outputs : outputs[0];
  }
  saveTensorsForBackwardMode(tensors) {
    const saved = tensors.map((tensor2) => this.keep(this.clone(tensor2)));
    return saved;
  }
  getTensorsForGradient(kernelName, inputs, outputs) {
    const gradConfig = getGradient(kernelName);
    if (gradConfig != null) {
      const inputsToSave = gradConfig.inputsToSave || [];
      const outputsToSave = gradConfig.outputsToSave || [];
      let inputTensorsToSave;
      if (gradConfig.saveAllInputs) {
        assert(Array.isArray(inputs), () => "saveAllInputs is true, expected inputs to be an array.");
        inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);
      } else {
        inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);
      }
      const outputTensorsToSave = outputs.filter((_, i) => outputsToSave[i]);
      return inputTensorsToSave.concat(outputTensorsToSave);
    }
    return [];
  }
  makeTensor(values, shape, dtype, backend) {
    if (values == null) {
      throw new Error("Values passed to engine.makeTensor() are null");
    }
    dtype = dtype || "float32";
    backend = backend || this.backend;
    let backendVals = values;
    if (dtype === "string" && isString(values[0])) {
      backendVals = values.map((d) => encodeString(d));
    }
    const dataId = backend.write(backendVals, shape, dtype);
    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());
    this.trackTensor(t, backend);
    if (dtype === "string") {
      const info = this.state.tensorInfo.get(dataId);
      const newBytes = bytesFromStringArray(backendVals);
      this.state.numBytes += newBytes - info.bytes;
      info.bytes = newBytes;
    }
    return t;
  }
  makeTensorFromDataId(dataId, shape, dtype, backend) {
    dtype = dtype || "float32";
    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());
    this.trackTensor(t, backend);
    return t;
  }
  makeVariable(initialValue, trainable = true, name, dtype) {
    name = name || this.nextVariableId().toString();
    if (dtype != null && dtype !== initialValue.dtype) {
      initialValue = initialValue.cast(dtype);
    }
    const v = new Variable(initialValue, trainable, name, this.nextTensorId());
    if (this.state.registeredVariables[v.name] != null) {
      throw new Error(`Variable with name ${v.name} was already registered`);
    }
    this.state.registeredVariables[v.name] = v;
    this.incRef(v, this.backend);
    return v;
  }
  trackTensor(a2, backend) {
    this.state.numTensors++;
    if (a2.dtype === "string") {
      this.state.numStringTensors++;
    }
    let bytes = 0;
    if (a2.dtype !== "complex64" && a2.dtype !== "string") {
      bytes = a2.size * bytesPerElement(a2.dtype);
    }
    this.state.numBytes += bytes;
    if (!this.state.tensorInfo.has(a2.dataId)) {
      this.state.numDataBuffers++;
      this.state.tensorInfo.set(a2.dataId, {
        backend: backend || this.backend,
        dtype: a2.dtype,
        shape: a2.shape,
        bytes
      });
    }
    if (!(a2 instanceof Variable)) {
      this.track(a2);
    }
  }
  incRef(a2, backend) {
    this.trackTensor(a2, backend);
    this.backend.incRef(a2.dataId);
  }
  removeDataId(dataId, backend) {
    if (this.state.tensorInfo.has(dataId) && this.state.tensorInfo.get(dataId).backend === backend) {
      this.state.tensorInfo.delete(dataId);
      this.state.numDataBuffers--;
    }
  }
  disposeTensor(a2) {
    if (!this.state.tensorInfo.has(a2.dataId)) {
      return;
    }
    const info = this.state.tensorInfo.get(a2.dataId);
    this.state.numTensors--;
    if (a2.dtype === "string") {
      this.state.numStringTensors--;
      this.state.numBytes -= info.bytes;
    }
    if (a2.dtype !== "complex64" && a2.dtype !== "string") {
      const bytes = a2.size * bytesPerElement(a2.dtype);
      this.state.numBytes -= bytes;
    }
    if (info.backend.disposeData(a2.dataId)) {
      this.removeDataId(a2.dataId, info.backend);
    }
  }
  disposeVariables() {
    for (const varName in this.state.registeredVariables) {
      const v = this.state.registeredVariables[varName];
      this.disposeVariable(v);
    }
  }
  disposeVariable(v) {
    this.disposeTensor(v);
    if (this.state.registeredVariables[v.name] != null) {
      delete this.state.registeredVariables[v.name];
    }
  }
  memory() {
    const info = this.backend.memory();
    info.numTensors = this.state.numTensors;
    info.numDataBuffers = this.state.numDataBuffers;
    info.numBytes = this.state.numBytes;
    if (this.state.numStringTensors > 0) {
      info.unreliable = true;
      if (info.reasons == null) {
        info.reasons = [];
      }
      info.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)");
    }
    return info;
  }
  async profile(query) {
    this.state.profiling = true;
    const startBytes = this.state.numBytes;
    const startNumTensors = this.state.numTensors;
    this.state.activeProfile.kernels = [];
    this.state.activeProfile.result = await query();
    this.state.profiling = false;
    this.state.activeProfile.peakBytes = Math.max(...this.state.activeProfile.kernels.map((d) => d.totalBytesSnapshot));
    this.state.activeProfile.newBytes = this.state.numBytes - startBytes;
    this.state.activeProfile.newTensors = this.state.numTensors - startNumTensors;
    for (const kernel of this.state.activeProfile.kernels) {
      kernel.kernelTimeMs = await kernel.kernelTimeMs;
      kernel.extraInfo = await kernel.extraInfo;
    }
    return this.state.activeProfile;
  }
  isTapeOn() {
    return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;
  }
  addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {
    const tapeNode = { id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved };
    const gradConfig = getGradient(kernelName);
    if (gradConfig != null) {
      gradientsFunc = gradConfig.gradFunc;
    }
    if (gradientsFunc != null) {
      tapeNode.gradient = (dys) => {
        dys = dys.map((dy, i) => {
          if (dy == null) {
            const output = outputs[i];
            const vals = makeZerosTypedArray(output.size, output.dtype);
            return this.makeTensor(vals, output.shape, output.dtype);
          }
          return dy;
        });
        return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);
      };
    }
    this.state.activeTape.push(tapeNode);
  }
  keep(result) {
    result.kept = true;
    return result;
  }
  startTape() {
    if (this.state.gradientDepth === 0) {
      this.state.activeTape = [];
    }
    this.state.gradientDepth++;
  }
  endTape() {
    this.state.gradientDepth--;
  }
  startScope(name) {
    const scopeInfo = {
      track: [],
      name: "unnamed scope",
      id: this.state.nextScopeId++
    };
    if (name) {
      scopeInfo.name = name;
    }
    this.state.scopeStack.push(scopeInfo);
    this.state.activeScope = scopeInfo;
  }
  endScope(result) {
    const tensorsToTrackInParent = getTensorsInContainer(result);
    const tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map((t) => t.id));
    for (let i = 0; i < this.state.activeScope.track.length; i++) {
      const tensor2 = this.state.activeScope.track[i];
      if (!tensor2.kept && !tensorsToTrackInParentSet.has(tensor2.id)) {
        tensor2.dispose();
      }
    }
    const oldScope = this.state.scopeStack.pop();
    this.state.activeScope = this.state.scopeStack.length === 0 ? null : this.state.scopeStack[this.state.scopeStack.length - 1];
    tensorsToTrackInParent.forEach((tensor2) => {
      if (!tensor2.kept && tensor2.scopeId === oldScope.id) {
        this.track(tensor2);
      }
    });
  }
  gradients(f, xs, dy, allowNoGradients = false) {
    assert(xs.length > 0, () => "gradients() received an empty list of xs.");
    if (dy != null && dy.dtype !== "float32") {
      throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);
    }
    const y = this.scopedRun(() => this.startTape(), () => this.endTape(), () => this.tidy("forward", f));
    assert(y instanceof Tensor, () => "The result y returned by f() must be a tensor.");
    const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);
    if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {
      throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");
    }
    return this.tidy("backward", () => {
      const accumulatedGradientMap = {};
      accumulatedGradientMap[y.id] = dy == null ? ones(y.shape) : dy;
      backpropagateGradients(accumulatedGradientMap, filteredTape, (f2) => this.tidy(f2), add);
      const grads = xs.map((x) => accumulatedGradientMap[x.id]);
      if (this.state.gradientDepth === 0) {
        this.state.activeTape.forEach((node) => {
          for (const tensor2 of node.saved) {
            tensor2.dispose();
          }
        });
        this.state.activeTape = null;
      }
      return { value: y, grads };
    });
  }
  customGrad(f) {
    assert(isFunction(f), () => "The f passed in customGrad(f) must be a function.");
    return (...inputs) => {
      assert(inputs.every((t) => t instanceof Tensor), () => "The args passed in customGrad(f)(x1, x2,...) must all be tensors");
      let res;
      const inputMap = {};
      inputs.forEach((input, i) => {
        inputMap[i] = input;
      });
      const forwardFunc = (_, save) => {
        res = f(...[...inputs, save]);
        assert(res.value instanceof Tensor, () => "The function f passed in customGrad(f) must return an object where `obj.value` is a tensor");
        assert(isFunction(res.gradFunc), () => "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.");
        return res.value;
      };
      const backwardsFunc = (dy, saved) => {
        const gradRes = res.gradFunc(dy, saved);
        const grads = Array.isArray(gradRes) ? gradRes : [gradRes];
        assert(grads.length === inputs.length, () => "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).");
        assert(grads.every((t) => t instanceof Tensor), () => "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");
        const gradMap = {};
        grads.forEach((grad, i) => {
          gradMap[i] = () => grad;
        });
        return gradMap;
      };
      return this.runKernelFunc({
        forwardFunc,
        backwardsFunc,
        inputs: inputMap
      });
    };
  }
  readSync(dataId) {
    const info = this.state.tensorInfo.get(dataId);
    return info.backend.readSync(dataId);
  }
  read(dataId) {
    const info = this.state.tensorInfo.get(dataId);
    return info.backend.read(dataId);
  }
  readToGPU(dataId, options) {
    const info = this.state.tensorInfo.get(dataId);
    return info.backend.readToGPU(dataId, options);
  }
  async time(query) {
    const start = now();
    const timingInfo = await this.backend.time(query);
    timingInfo.wallMs = now() - start;
    return timingInfo;
  }
  track(result) {
    if (this.state.activeScope != null) {
      result.scopeId = this.state.activeScope.id;
      this.state.activeScope.track.push(result);
    }
    return result;
  }
  get registeredVariables() {
    return this.state.registeredVariables;
  }
  reset() {
    this.pendingBackendInitId++;
    this.state.dispose();
    this.ENV.reset();
    this.state = new EngineState();
    for (const backendName in this.registry) {
      this.disposeRegisteredKernels(backendName);
      this.registry[backendName].dispose();
      delete this.registry[backendName];
    }
    this.backendName = null;
    this.backendInstance = null;
    this.pendingBackendInit = null;
  }
};
Engine.nextTensorId = 0;
Engine.nextVariableId = 0;
function ones(shape) {
  const values = makeOnesTypedArray(sizeFromShape(shape), "float32");
  return ENGINE.makeTensor(values, shape, "float32");
}
function getOrMakeEngine() {
  const ns = getGlobalNamespace();
  if (ns._tfengine == null) {
    const environment = new Environment(ns);
    ns._tfengine = new Engine(environment);
  }
  setEnvironmentGlobal(ns._tfengine.ENV);
  setTensorTracker(() => ns._tfengine);
  return ns._tfengine;
}
var ENGINE = getOrMakeEngine();
function add(a2, b2) {
  const inputs = { a: a2, b: b2 };
  return ENGINE.runKernel(Add, inputs);
}

// node_modules/@tensorflow/tfjs-core/dist/device_util.js
function isBrowser() {
  return typeof window !== "undefined" && window.document != null || typeof WorkerGlobalScope !== "undefined";
}

// node_modules/@tensorflow/tfjs-core/dist/flags.js
var ENV2 = env();
ENV2.registerFlag("DEBUG", () => false, (debugValue) => {
  if (debugValue) {
    console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.");
  }
});
ENV2.registerFlag("IS_BROWSER", () => isBrowser());
ENV2.registerFlag("IS_NODE", () => typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined");
ENV2.registerFlag("IS_CHROME", () => typeof navigator !== "undefined" && navigator != null && navigator.userAgent != null && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor));
ENV2.registerFlag("PROD", () => false);
ENV2.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY", () => ENV2.getBool("DEBUG"));
ENV2.registerFlag("DEPRECATION_WARNINGS_ENABLED", () => true);
ENV2.registerFlag("IS_TEST", () => false);
ENV2.registerFlag("CHECK_COMPUTATION_FOR_ERRORS", () => true);
ENV2.registerFlag("WRAP_TO_IMAGEBITMAP", () => false);

// node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js
function inferShape(val, dtype) {
  let firstElem = val;
  if (isTypedArray(val)) {
    return dtype === "string" ? [] : [val.length];
  }
  if (!Array.isArray(val)) {
    return [];
  }
  const shape = [];
  while (Array.isArray(firstElem) || isTypedArray(firstElem) && dtype !== "string") {
    shape.push(firstElem.length);
    firstElem = firstElem[0];
  }
  if (Array.isArray(val) && env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")) {
    deepAssertShapeConsistency(val, shape, []);
  }
  return shape;
}
function deepAssertShapeConsistency(val, shape, indices) {
  indices = indices || [];
  if (!Array.isArray(val) && !isTypedArray(val)) {
    assert(shape.length === 0, () => `Element arr[${indices.join("][")}] is a primitive, but should be an array/TypedArray of ${shape[0]} elements`);
    return;
  }
  assert(shape.length > 0, () => `Element arr[${indices.join("][")}] should be a primitive, but is an array of ${val.length} elements`);
  assert(val.length === shape[0], () => `Element arr[${indices.join("][")}] should have ${shape[0]} elements, but has ${val.length} elements`);
  const subShape = shape.slice(1);
  for (let i = 0; i < val.length; ++i) {
    deepAssertShapeConsistency(val[i], subShape, indices.concat(i));
  }
}
function assertDtype(expectedDtype, actualDType, argName, functionName) {
  if (expectedDtype === "string_or_numeric") {
    return;
  }
  if (expectedDtype == null) {
    throw new Error(`Expected dtype cannot be null.`);
  }
  if (expectedDtype !== "numeric" && expectedDtype !== actualDType || expectedDtype === "numeric" && actualDType === "string") {
    throw new Error(`Argument '${argName}' passed to '${functionName}' must be ${expectedDtype} tensor, but got ${actualDType} tensor`);
  }
}
function convertToTensor(x, argName, functionName, parseAsDtype = "numeric") {
  if (x instanceof Tensor) {
    assertDtype(parseAsDtype, x.dtype, argName, functionName);
    return x;
  }
  let inferredDtype = inferDtype(x);
  if (inferredDtype !== "string" && ["bool", "int32", "float32"].indexOf(parseAsDtype) >= 0) {
    inferredDtype = parseAsDtype;
  }
  assertDtype(parseAsDtype, inferredDtype, argName, functionName);
  if (x == null || !isTypedArray(x) && !Array.isArray(x) && typeof x !== "number" && typeof x !== "boolean" && typeof x !== "string") {
    const type = x == null ? "null" : x.constructor.name;
    throw new Error(`Argument '${argName}' passed to '${functionName}' must be a Tensor or TensorLike, but got '${type}'`);
  }
  const inferredShape = inferShape(x, inferredDtype);
  if (!isTypedArray(x) && !Array.isArray(x)) {
    x = [x];
  }
  const skipTypedArray = true;
  const values = inferredDtype !== "string" ? toTypedArray(x, inferredDtype) : flatten(x, [], skipTypedArray);
  return ENGINE.makeTensor(values, inferredShape, inferredDtype);
}

// node_modules/@tensorflow/tfjs-core/dist/ops/operation.js
var OP_SCOPE_SUFFIX = "__op";
function op(f) {
  const keys = Object.keys(f);
  if (keys.length !== 1) {
    throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${keys.length} keys.`);
  }
  let opName = keys[0];
  const fn = f[opName];
  if (opName.endsWith("_")) {
    opName = opName.substring(0, opName.length - 1);
  }
  opName = opName + OP_SCOPE_SUFFIX;
  const f2 = (...args) => {
    ENGINE.startScope(opName);
    try {
      const result = fn(...args);
      if (isPromise(result)) {
        console.error("Cannot return a Promise inside of tidy.");
      }
      ENGINE.endScope(result);
      return result;
    } catch (ex) {
      ENGINE.endScope(null);
      throw ex;
    }
  };
  Object.defineProperty(f2, "name", { value: opName, configurable: true });
  return f2;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/complex.js
function complex_(real3, imag3) {
  const $real = convertToTensor(real3, "real", "complex");
  const $imag = convertToTensor(imag3, "imag", "complex");
  assertShapesMatch($real.shape, $imag.shape, `real and imag shapes, ${$real.shape} and ${$imag.shape}, must match in call to tf.complex().`);
  const inputs = { real: $real, imag: $imag };
  return ENGINE.runKernel(Complex, inputs);
}
var complex = op({ complex_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js
function makeTensor(values, shape, inferredShape, dtype) {
  if (dtype == null) {
    dtype = inferDtype(values);
  }
  if (dtype === "complex64") {
    throw new Error(`Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).`);
  }
  if (!isTypedArray(values) && !Array.isArray(values) && typeof values !== "number" && typeof values !== "boolean" && typeof values !== "string") {
    throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");
  }
  if (shape != null) {
    assertNonNegativeIntegerDimensions(shape);
    const providedSize = sizeFromShape(shape);
    const inferredSize = sizeFromShape(inferredShape);
    assert(providedSize === inferredSize, () => `Based on the provided shape, [${shape}], the tensor should have ${providedSize} values but has ${inferredSize}`);
    for (let i = 0; i < inferredShape.length; ++i) {
      const inferred = inferredShape[i];
      const flatDimsDontMatch = i === inferredShape.length - 1 ? inferred !== sizeFromShape(shape.slice(i)) : true;
      assert(inferredShape[i] === shape[i] || !flatDimsDontMatch, () => `Error creating a new Tensor. Inferred shape (${inferredShape}) does not match the provided shape (${shape}). `);
    }
  }
  if (!isTypedArray(values) && !Array.isArray(values)) {
    values = [values];
  }
  shape = shape || inferredShape;
  values = dtype !== "string" ? toTypedArray(values, dtype) : flatten(values, [], true);
  return ENGINE.makeTensor(values, shape, dtype);
}

// node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js
function tensor(values, shape, dtype) {
  const inferredShape = inferShape(values, dtype);
  return makeTensor(values, shape, inferredShape, dtype);
}

// node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js
var useNodeBuffer = typeof Buffer !== "undefined" && (typeof Blob === "undefined" || typeof atob === "undefined" || typeof btoa === "undefined");
function stringByteLength(str) {
  if (useNodeBuffer) {
    return Buffer.byteLength(str);
  }
  return new Blob([str]).size;
}
function arrayBufferToBase64String(buffer2) {
  if (useNodeBuffer) {
    return Buffer.from(buffer2).toString("base64");
  }
  const buf = new Uint8Array(buffer2);
  let s = "";
  for (let i = 0, l = buf.length; i < l; i++) {
    s += String.fromCharCode(buf[i]);
  }
  return btoa(s);
}
function base64StringToArrayBuffer(str) {
  if (useNodeBuffer) {
    const buf = Buffer.from(str, "base64");
    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
  }
  const s = atob(str);
  const buffer2 = new Uint8Array(s.length);
  for (let i = 0; i < s.length; ++i) {
    buffer2.set([s.charCodeAt(i)], i);
  }
  return buffer2.buffer;
}
function concatenateArrayBuffers(buffers) {
  if (buffers.length === 1) {
    return buffers[0];
  }
  let totalByteLength = 0;
  buffers.forEach((buffer2) => {
    totalByteLength += buffer2.byteLength;
  });
  const temp = new Uint8Array(totalByteLength);
  let offset = 0;
  buffers.forEach((buffer2) => {
    temp.set(new Uint8Array(buffer2), offset);
    offset += buffer2.byteLength;
  });
  return temp.buffer;
}
function getModelJSONForModelArtifacts(artifacts, manifest) {
  const result = {
    modelTopology: artifacts.modelTopology,
    format: artifacts.format,
    generatedBy: artifacts.generatedBy,
    convertedBy: artifacts.convertedBy,
    weightsManifest: manifest
  };
  if (artifacts.signature != null) {
    result.signature = artifacts.signature;
  }
  if (artifacts.userDefinedMetadata != null) {
    result.userDefinedMetadata = artifacts.userDefinedMetadata;
  }
  if (artifacts.modelInitializer != null) {
    result.modelInitializer = artifacts.modelInitializer;
  }
  if (artifacts.trainingConfig != null) {
    result.trainingConfig = artifacts.trainingConfig;
  }
  return result;
}
async function getModelArtifactsForJSON(modelJSON, loadWeights2) {
  const modelArtifacts = {
    modelTopology: modelJSON.modelTopology,
    format: modelJSON.format,
    generatedBy: modelJSON.generatedBy,
    convertedBy: modelJSON.convertedBy
  };
  if (modelJSON.trainingConfig != null) {
    modelArtifacts.trainingConfig = modelJSON.trainingConfig;
  }
  if (modelJSON.weightsManifest != null) {
    const [weightSpecs, weightData] = await loadWeights2(modelJSON.weightsManifest);
    modelArtifacts.weightSpecs = weightSpecs;
    modelArtifacts.weightData = weightData;
  }
  if (modelJSON.signature != null) {
    modelArtifacts.signature = modelJSON.signature;
  }
  if (modelJSON.userDefinedMetadata != null) {
    modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;
  }
  if (modelJSON.modelInitializer != null) {
    modelArtifacts.modelInitializer = modelJSON.modelInitializer;
  }
  return modelArtifacts;
}
function getModelArtifactsInfoForJSON(modelArtifacts) {
  if (modelArtifacts.modelTopology instanceof ArrayBuffer) {
    throw new Error("Expected JSON model topology, received ArrayBuffer.");
  }
  return {
    dateSaved: new Date(),
    modelTopologyType: "JSON",
    modelTopologyBytes: modelArtifacts.modelTopology == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),
    weightSpecsBytes: modelArtifacts.weightSpecs == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),
    weightDataBytes: modelArtifacts.weightData == null ? 0 : modelArtifacts.weightData.byteLength
  };
}

// node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js
var IORouterRegistry = class {
  constructor() {
    this.saveRouters = [];
    this.loadRouters = [];
  }
  static getInstance() {
    if (IORouterRegistry.instance == null) {
      IORouterRegistry.instance = new IORouterRegistry();
    }
    return IORouterRegistry.instance;
  }
  static registerSaveRouter(saveRouter) {
    IORouterRegistry.getInstance().saveRouters.push(saveRouter);
  }
  static registerLoadRouter(loadRouter) {
    IORouterRegistry.getInstance().loadRouters.push(loadRouter);
  }
  static getSaveHandlers(url) {
    return IORouterRegistry.getHandlers(url, "save");
  }
  static getLoadHandlers(url, loadOptions) {
    return IORouterRegistry.getHandlers(url, "load", loadOptions);
  }
  static getHandlers(url, handlerType, loadOptions) {
    const validHandlers = [];
    const routers = handlerType === "load" ? IORouterRegistry.getInstance().loadRouters : IORouterRegistry.getInstance().saveRouters;
    routers.forEach((router) => {
      const handler = router(url, loadOptions);
      if (handler !== null) {
        validHandlers.push(handler);
      }
    });
    return validHandlers;
  }
};

// node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js
var DATABASE_NAME = "tensorflowjs";
var DATABASE_VERSION = 1;
var MODEL_STORE_NAME = "models_store";
var INFO_STORE_NAME = "model_info_store";
function getIndexedDBFactory() {
  if (!env().getBool("IS_BROWSER")) {
    throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");
  }
  const theWindow = typeof window === "undefined" ? self : window;
  const factory = theWindow.indexedDB || theWindow.mozIndexedDB || theWindow.webkitIndexedDB || theWindow.msIndexedDB || theWindow.shimIndexedDB;
  if (factory == null) {
    throw new Error("The current browser does not appear to support IndexedDB.");
  }
  return factory;
}
function setUpDatabase(openRequest) {
  const db = openRequest.result;
  db.createObjectStore(MODEL_STORE_NAME, { keyPath: "modelPath" });
  db.createObjectStore(INFO_STORE_NAME, { keyPath: "modelPath" });
}
var BrowserIndexedDB = class {
  constructor(modelPath) {
    this.indexedDB = getIndexedDBFactory();
    if (modelPath == null || !modelPath) {
      throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");
    }
    this.modelPath = modelPath;
  }
  async save(modelArtifacts) {
    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {
      throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");
    }
    return this.databaseAction(this.modelPath, modelArtifacts);
  }
  async load() {
    return this.databaseAction(this.modelPath);
  }
  databaseAction(modelPath, modelArtifacts) {
    return new Promise((resolve, reject) => {
      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);
      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);
      openRequest.onsuccess = () => {
        const db = openRequest.result;
        if (modelArtifacts == null) {
          const modelTx = db.transaction(MODEL_STORE_NAME, "readonly");
          const modelStore = modelTx.objectStore(MODEL_STORE_NAME);
          const getRequest = modelStore.get(this.modelPath);
          getRequest.onsuccess = () => {
            if (getRequest.result == null) {
              db.close();
              return reject(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));
            } else {
              resolve(getRequest.result.modelArtifacts);
            }
          };
          getRequest.onerror = (error) => {
            db.close();
            return reject(getRequest.error);
          };
          modelTx.oncomplete = () => db.close();
        } else {
          const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);
          const infoTx = db.transaction(INFO_STORE_NAME, "readwrite");
          let infoStore = infoTx.objectStore(INFO_STORE_NAME);
          const putInfoRequest = infoStore.put({ modelPath: this.modelPath, modelArtifactsInfo });
          let modelTx;
          putInfoRequest.onsuccess = () => {
            modelTx = db.transaction(MODEL_STORE_NAME, "readwrite");
            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);
            const putModelRequest = modelStore.put({
              modelPath: this.modelPath,
              modelArtifacts,
              modelArtifactsInfo
            });
            putModelRequest.onsuccess = () => resolve({ modelArtifactsInfo });
            putModelRequest.onerror = (error) => {
              infoStore = infoTx.objectStore(INFO_STORE_NAME);
              const deleteInfoRequest = infoStore.delete(this.modelPath);
              deleteInfoRequest.onsuccess = () => {
                db.close();
                return reject(putModelRequest.error);
              };
              deleteInfoRequest.onerror = (error2) => {
                db.close();
                return reject(putModelRequest.error);
              };
            };
          };
          putInfoRequest.onerror = (error) => {
            db.close();
            return reject(putInfoRequest.error);
          };
          infoTx.oncomplete = () => {
            if (modelTx == null) {
              db.close();
            } else {
              modelTx.oncomplete = () => db.close();
            }
          };
        }
      };
      openRequest.onerror = (error) => reject(openRequest.error);
    });
  }
};
BrowserIndexedDB.URL_SCHEME = "indexeddb://";
var indexedDBRouter = (url) => {
  if (!env().getBool("IS_BROWSER")) {
    return null;
  } else {
    if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {
      return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));
    } else {
      return null;
    }
  }
};
IORouterRegistry.registerSaveRouter(indexedDBRouter);
IORouterRegistry.registerLoadRouter(indexedDBRouter);
function browserIndexedDB(modelPath) {
  return new BrowserIndexedDB(modelPath);
}
function maybeStripScheme(key) {
  return key.startsWith(BrowserIndexedDB.URL_SCHEME) ? key.slice(BrowserIndexedDB.URL_SCHEME.length) : key;
}
var BrowserIndexedDBManager = class {
  constructor() {
    this.indexedDB = getIndexedDBFactory();
  }
  async listModels() {
    return new Promise((resolve, reject) => {
      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);
      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);
      openRequest.onsuccess = () => {
        const db = openRequest.result;
        const tx = db.transaction(INFO_STORE_NAME, "readonly");
        const store = tx.objectStore(INFO_STORE_NAME);
        const getAllInfoRequest = store.getAll();
        getAllInfoRequest.onsuccess = () => {
          const out = {};
          for (const item of getAllInfoRequest.result) {
            out[item.modelPath] = item.modelArtifactsInfo;
          }
          resolve(out);
        };
        getAllInfoRequest.onerror = (error) => {
          db.close();
          return reject(getAllInfoRequest.error);
        };
        tx.oncomplete = () => db.close();
      };
      openRequest.onerror = (error) => reject(openRequest.error);
    });
  }
  async removeModel(path) {
    path = maybeStripScheme(path);
    return new Promise((resolve, reject) => {
      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);
      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);
      openRequest.onsuccess = () => {
        const db = openRequest.result;
        const infoTx = db.transaction(INFO_STORE_NAME, "readwrite");
        const infoStore = infoTx.objectStore(INFO_STORE_NAME);
        const getInfoRequest = infoStore.get(path);
        let modelTx;
        getInfoRequest.onsuccess = () => {
          if (getInfoRequest.result == null) {
            db.close();
            return reject(new Error(`Cannot find model with path '${path}' in IndexedDB.`));
          } else {
            const deleteInfoRequest = infoStore.delete(path);
            const deleteModelData = () => {
              modelTx = db.transaction(MODEL_STORE_NAME, "readwrite");
              const modelStore = modelTx.objectStore(MODEL_STORE_NAME);
              const deleteModelRequest = modelStore.delete(path);
              deleteModelRequest.onsuccess = () => resolve(getInfoRequest.result.modelArtifactsInfo);
              deleteModelRequest.onerror = (error) => reject(getInfoRequest.error);
            };
            deleteInfoRequest.onsuccess = deleteModelData;
            deleteInfoRequest.onerror = (error) => {
              deleteModelData();
              db.close();
              return reject(getInfoRequest.error);
            };
          }
        };
        getInfoRequest.onerror = (error) => {
          db.close();
          return reject(getInfoRequest.error);
        };
        infoTx.oncomplete = () => {
          if (modelTx == null) {
            db.close();
          } else {
            modelTx.oncomplete = () => db.close();
          }
        };
      };
      openRequest.onerror = (error) => reject(openRequest.error);
    });
  }
};

// node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js
var PATH_SEPARATOR = "/";
var PATH_PREFIX = "tensorflowjs_models";
var INFO_SUFFIX = "info";
var MODEL_TOPOLOGY_SUFFIX = "model_topology";
var WEIGHT_SPECS_SUFFIX = "weight_specs";
var WEIGHT_DATA_SUFFIX = "weight_data";
var MODEL_METADATA_SUFFIX = "model_metadata";
function getModelKeys(path) {
  return {
    info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),
    topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),
    weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),
    weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),
    modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)
  };
}
function removeItems(keys) {
  for (const key of Object.values(keys)) {
    window.localStorage.removeItem(key);
  }
}
function getModelPathFromKey(key) {
  const items = key.split(PATH_SEPARATOR);
  if (items.length < 3) {
    throw new Error(`Invalid key format: ${key}`);
  }
  return items.slice(1, items.length - 1).join(PATH_SEPARATOR);
}
function maybeStripScheme2(key) {
  return key.startsWith(BrowserLocalStorage.URL_SCHEME) ? key.slice(BrowserLocalStorage.URL_SCHEME.length) : key;
}
var BrowserLocalStorage = class {
  constructor(modelPath) {
    if (!env().getBool("IS_BROWSER") || typeof window === "undefined" || typeof window.localStorage === "undefined") {
      throw new Error("The current environment does not support local storage.");
    }
    this.LS = window.localStorage;
    if (modelPath == null || !modelPath) {
      throw new Error("For local storage, modelPath must not be null, undefined or empty.");
    }
    this.modelPath = modelPath;
    this.keys = getModelKeys(this.modelPath);
  }
  async save(modelArtifacts) {
    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {
      throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");
    } else {
      const topology = JSON.stringify(modelArtifacts.modelTopology);
      const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);
      const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);
      try {
        this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));
        this.LS.setItem(this.keys.topology, topology);
        this.LS.setItem(this.keys.weightSpecs, weightSpecs);
        this.LS.setItem(this.keys.weightData, arrayBufferToBase64String(modelArtifacts.weightData));
        const metadata = {
          format: modelArtifacts.format,
          generatedBy: modelArtifacts.generatedBy,
          convertedBy: modelArtifacts.convertedBy,
          signature: modelArtifacts.signature != null ? modelArtifacts.signature : void 0,
          userDefinedMetadata: modelArtifacts.userDefinedMetadata != null ? modelArtifacts.userDefinedMetadata : void 0,
          modelInitializer: modelArtifacts.modelInitializer != null ? modelArtifacts.modelInitializer : void 0,
          trainingConfig: modelArtifacts.trainingConfig != null ? modelArtifacts.trainingConfig : void 0
        };
        this.LS.setItem(this.keys.modelMetadata, JSON.stringify(metadata));
        return { modelArtifactsInfo };
      } catch (err) {
        removeItems(this.keys);
        throw new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);
      }
    }
  }
  async load() {
    const info = JSON.parse(this.LS.getItem(this.keys.info));
    if (info == null) {
      throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);
    }
    if (info.modelTopologyType !== "JSON") {
      throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");
    }
    const out = {};
    const topology = JSON.parse(this.LS.getItem(this.keys.topology));
    if (topology == null) {
      throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);
    }
    out.modelTopology = topology;
    const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));
    if (weightSpecs == null) {
      throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);
    }
    out.weightSpecs = weightSpecs;
    const metadataString = this.LS.getItem(this.keys.modelMetadata);
    if (metadataString != null) {
      const metadata = JSON.parse(metadataString);
      out.format = metadata.format;
      out.generatedBy = metadata.generatedBy;
      out.convertedBy = metadata.convertedBy;
      if (metadata.signature != null) {
        out.signature = metadata.signature;
      }
      if (metadata.userDefinedMetadata != null) {
        out.userDefinedMetadata = metadata.userDefinedMetadata;
      }
      if (metadata.modelInitializer != null) {
        out.modelInitializer = metadata.modelInitializer;
      }
      if (metadata.trainingConfig != null) {
        out.trainingConfig = metadata.trainingConfig;
      }
    }
    const weightDataBase64 = this.LS.getItem(this.keys.weightData);
    if (weightDataBase64 == null) {
      throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);
    }
    out.weightData = base64StringToArrayBuffer(weightDataBase64);
    return out;
  }
};
BrowserLocalStorage.URL_SCHEME = "localstorage://";
var localStorageRouter = (url) => {
  if (!env().getBool("IS_BROWSER")) {
    return null;
  } else {
    if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {
      return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));
    } else {
      return null;
    }
  }
};
IORouterRegistry.registerSaveRouter(localStorageRouter);
IORouterRegistry.registerLoadRouter(localStorageRouter);
function browserLocalStorage(modelPath) {
  return new BrowserLocalStorage(modelPath);
}
var BrowserLocalStorageManager = class {
  constructor() {
    assert(env().getBool("IS_BROWSER"), () => "Current environment is not a web browser");
    assert(typeof window === "undefined" || typeof window.localStorage !== "undefined", () => "Current browser does not appear to support localStorage");
    this.LS = window.localStorage;
  }
  async listModels() {
    const out = {};
    const prefix = PATH_PREFIX + PATH_SEPARATOR;
    const suffix = PATH_SEPARATOR + INFO_SUFFIX;
    for (let i = 0; i < this.LS.length; ++i) {
      const key = this.LS.key(i);
      if (key.startsWith(prefix) && key.endsWith(suffix)) {
        const modelPath = getModelPathFromKey(key);
        out[modelPath] = JSON.parse(this.LS.getItem(key));
      }
    }
    return out;
  }
  async removeModel(path) {
    path = maybeStripScheme2(path);
    const keys = getModelKeys(path);
    if (this.LS.getItem(keys.info) == null) {
      throw new Error(`Cannot find model at path '${path}'`);
    }
    const info = JSON.parse(this.LS.getItem(keys.info));
    removeItems(keys);
    return info;
  }
};

// node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js
var DEFAULT_FILE_NAME_PREFIX = "model";
var DEFAULT_JSON_EXTENSION_NAME = ".json";
var DEFAULT_WEIGHT_DATA_EXTENSION_NAME = ".weights.bin";
function defer(f) {
  return new Promise((resolve) => setTimeout(resolve)).then(f);
}
var BrowserDownloads = class {
  constructor(fileNamePrefix) {
    if (!env().getBool("IS_BROWSER")) {
      throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");
    }
    if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {
      fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);
    }
    if (fileNamePrefix == null || fileNamePrefix.length === 0) {
      fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;
    }
    this.modelJsonFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;
    this.weightDataFileName = fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;
  }
  async save(modelArtifacts) {
    if (typeof document === "undefined") {
      throw new Error("Browser downloads are not supported in this environment since `document` is not present");
    }
    const weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: "application/octet-stream" }));
    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {
      throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");
    } else {
      const weightsManifest = [{
        paths: ["./" + this.weightDataFileName],
        weights: modelArtifacts.weightSpecs
      }];
      const modelJSON = getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);
      const modelJsonURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelJSON)], { type: "application/json" }));
      const jsonAnchor = this.modelJsonAnchor == null ? document.createElement("a") : this.modelJsonAnchor;
      jsonAnchor.download = this.modelJsonFileName;
      jsonAnchor.href = modelJsonURL;
      await defer(() => jsonAnchor.dispatchEvent(new MouseEvent("click")));
      if (modelArtifacts.weightData != null) {
        const weightDataAnchor = this.weightDataAnchor == null ? document.createElement("a") : this.weightDataAnchor;
        weightDataAnchor.download = this.weightDataFileName;
        weightDataAnchor.href = weightsURL;
        await defer(() => weightDataAnchor.dispatchEvent(new MouseEvent("click")));
      }
      return { modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts) };
    }
  }
};
BrowserDownloads.URL_SCHEME = "downloads://";
var browserDownloadsRouter = (url) => {
  if (!env().getBool("IS_BROWSER")) {
    return null;
  } else {
    if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {
      return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));
    } else {
      return null;
    }
  }
};
IORouterRegistry.registerSaveRouter(browserDownloadsRouter);
function browserDownloads(fileNamePrefix = "model") {
  return new BrowserDownloads(fileNamePrefix);
}

// node_modules/@tensorflow/tfjs-core/dist/io/progress.js
function monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {
  checkPromises(promises);
  startFraction = startFraction == null ? 0 : startFraction;
  endFraction = endFraction == null ? 1 : endFraction;
  checkFraction(startFraction, endFraction);
  let resolvedPromise = 0;
  const registerMonitor = (promise) => {
    promise.then((value) => {
      const fraction = startFraction + ++resolvedPromise / promises.length * (endFraction - startFraction);
      onProgress(fraction);
      return value;
    });
    return promise;
  };
  function checkPromises(promises2) {
    assert(promises2 != null && Array.isArray(promises2) && promises2.length > 0, () => "promises must be a none empty array");
  }
  function checkFraction(startFraction2, endFraction2) {
    assert(startFraction2 >= 0 && startFraction2 <= 1, () => `Progress fraction must be in range [0, 1], but got startFraction ${startFraction2}`);
    assert(endFraction2 >= 0 && endFraction2 <= 1, () => `Progress fraction must be in range [0, 1], but got endFraction ${endFraction2}`);
    assert(endFraction2 >= startFraction2, () => `startFraction must be no more than endFraction, but got startFraction ${startFraction2} and endFraction ${endFraction2}`);
  }
  return Promise.all(promises.map(registerMonitor));
}

// node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js
async function loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {
  if (loadOptions == null) {
    loadOptions = {};
  }
  const fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch : loadOptions.fetchFunc;
  const requests = fetchURLs.map((fetchURL) => fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true }));
  const fetchStartFraction = 0;
  const fetchEndFraction = 0.5;
  const responses = loadOptions.onProgress == null ? await Promise.all(requests) : await monitorPromisesProgress(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);
  const bufferPromises = responses.map((response) => response.arrayBuffer());
  const bufferStartFraction = 0.5;
  const bufferEndFraction = 1;
  const buffers = loadOptions.onProgress == null ? await Promise.all(bufferPromises) : await monitorPromisesProgress(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);
  return buffers;
}

// node_modules/@tensorflow/tfjs-core/dist/io/http.js
var OCTET_STREAM_MIME_TYPE = "application/octet-stream";
var JSON_TYPE = "application/json";
var HTTPRequest = class {
  constructor(path, loadOptions) {
    this.DEFAULT_METHOD = "POST";
    if (loadOptions == null) {
      loadOptions = {};
    }
    this.weightPathPrefix = loadOptions.weightPathPrefix;
    this.onProgress = loadOptions.onProgress;
    this.weightUrlConverter = loadOptions.weightUrlConverter;
    if (loadOptions.fetchFunc != null) {
      assert(typeof loadOptions.fetchFunc === "function", () => "Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)");
      this.fetch = loadOptions.fetchFunc;
    } else {
      this.fetch = env().platform.fetch;
    }
    assert(path != null && path.length > 0, () => "URL path for http must not be null, undefined or empty.");
    if (Array.isArray(path)) {
      assert(path.length === 2, () => `URL paths for http must have a length of 2, (actual length is ${path.length}).`);
    }
    this.path = path;
    if (loadOptions.requestInit != null && loadOptions.requestInit.body != null) {
      throw new Error("requestInit is expected to have no pre-existing body, but has one.");
    }
    this.requestInit = loadOptions.requestInit || {};
  }
  async save(modelArtifacts) {
    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {
      throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");
    }
    const init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);
    init.body = new FormData();
    const weightsManifest = [{
      paths: ["./model.weights.bin"],
      weights: modelArtifacts.weightSpecs
    }];
    const modelTopologyAndWeightManifest = getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);
    init.body.append("model.json", new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: JSON_TYPE }), "model.json");
    if (modelArtifacts.weightData != null) {
      init.body.append("model.weights.bin", new Blob([modelArtifacts.weightData], { type: OCTET_STREAM_MIME_TYPE }), "model.weights.bin");
    }
    const response = await this.fetch(this.path, init);
    if (response.ok) {
      return {
        modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),
        responses: [response]
      };
    } else {
      throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${response.status}.`);
    }
  }
  async load() {
    const modelConfigRequest = await this.fetch(this.path, this.requestInit);
    if (!modelConfigRequest.ok) {
      throw new Error(`Request to ${this.path} failed with status code ${modelConfigRequest.status}. Please verify this URL points to the model JSON of the model to load.`);
    }
    let modelJSON;
    try {
      modelJSON = await modelConfigRequest.json();
    } catch (e) {
      let message = `Failed to parse model JSON of response from ${this.path}.`;
      if (this.path.endsWith(".pb")) {
        message += " Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.";
      } else {
        message += " Please make sure the server is serving valid JSON for this request.";
      }
      throw new Error(message);
    }
    const modelTopology = modelJSON.modelTopology;
    const weightsManifest = modelJSON.weightsManifest;
    if (modelTopology == null && weightsManifest == null) {
      throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);
    }
    return getModelArtifactsForJSON(modelJSON, (weightsManifest2) => this.loadWeights(weightsManifest2));
  }
  async loadWeights(weightsManifest) {
    const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;
    const [prefix, suffix] = parseUrl(weightPath);
    const pathPrefix = this.weightPathPrefix || prefix;
    const weightSpecs = [];
    for (const entry of weightsManifest) {
      weightSpecs.push(...entry.weights);
    }
    const fetchURLs = [];
    const urlPromises = [];
    for (const weightsGroup of weightsManifest) {
      for (const path of weightsGroup.paths) {
        if (this.weightUrlConverter != null) {
          urlPromises.push(this.weightUrlConverter(path));
        } else {
          fetchURLs.push(pathPrefix + path + suffix);
        }
      }
    }
    if (this.weightUrlConverter) {
      fetchURLs.push(...await Promise.all(urlPromises));
    }
    const buffers = await loadWeightsAsArrayBuffer(fetchURLs, {
      requestInit: this.requestInit,
      fetchFunc: this.fetch,
      onProgress: this.onProgress
    });
    return [weightSpecs, concatenateArrayBuffers(buffers)];
  }
};
HTTPRequest.URL_SCHEME_REGEX = /^https?:\/\//;
function parseUrl(url) {
  const lastSlash = url.lastIndexOf("/");
  const lastSearchParam = url.lastIndexOf("?");
  const prefix = url.substring(0, lastSlash);
  const suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : "";
  return [prefix + "/", suffix];
}
function isHTTPScheme(url) {
  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;
}
var httpRouter = (url, loadOptions) => {
  if (typeof fetch === "undefined" && (loadOptions == null || loadOptions.fetchFunc == null)) {
    return null;
  } else {
    let isHTTP = true;
    if (Array.isArray(url)) {
      isHTTP = url.every((urlItem) => isHTTPScheme(urlItem));
    } else {
      isHTTP = isHTTPScheme(url);
    }
    if (isHTTP) {
      return http(url, loadOptions);
    }
  }
  return null;
};
IORouterRegistry.registerSaveRouter(httpRouter);
IORouterRegistry.registerLoadRouter(httpRouter);
function http(path, loadOptions) {
  return new HTTPRequest(path, loadOptions);
}

// node_modules/@tensorflow/tfjs-core/dist/io/model_management.js
var URL_SCHEME_SUFFIX = "://";
var ModelStoreManagerRegistry = class {
  constructor() {
    this.managers = {};
  }
  static getInstance() {
    if (ModelStoreManagerRegistry.instance == null) {
      ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();
    }
    return ModelStoreManagerRegistry.instance;
  }
  static registerManager(scheme, manager) {
    assert(scheme != null, () => "scheme must not be undefined or null.");
    if (scheme.endsWith(URL_SCHEME_SUFFIX)) {
      scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));
    }
    assert(scheme.length > 0, () => "scheme must not be an empty string.");
    const registry = ModelStoreManagerRegistry.getInstance();
    assert(registry.managers[scheme] == null, () => `A model store manager is already registered for scheme '${scheme}'.`);
    registry.managers[scheme] = manager;
  }
  static getManager(scheme) {
    const manager = this.getInstance().managers[scheme];
    if (manager == null) {
      throw new Error(`Cannot find model manager for scheme '${scheme}'`);
    }
    return manager;
  }
  static getSchemes() {
    return Object.keys(this.getInstance().managers);
  }
};

// node_modules/@tensorflow/tfjs-core/dist/ops/cast.js
function cast_(x, dtype) {
  const $x = convertToTensor(x, "x", "cast");
  if (!isValidDtype(dtype)) {
    throw new Error(`Failed to cast to unknown dtype ${dtype}`);
  }
  if (dtype === "string" && $x.dtype !== "string" || dtype !== "string" && $x.dtype === "string") {
    throw new Error("Only strings can be casted to strings");
  }
  const inputs = { x: $x };
  const attrs = { dtype };
  return ENGINE.runKernel(Cast, inputs, attrs);
}
var cast = op({ cast_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js
function getBroadcastDims(inShape, outShape) {
  const inRank = inShape.length;
  const dims = [];
  for (let i = 0; i < inRank; i++) {
    const dim = inRank - 1 - i;
    const a2 = inShape[dim] || 1;
    const b2 = outShape[outShape.length - 1 - i] || 1;
    if (b2 > 1 && a2 === 1) {
      dims.unshift(dim);
    }
  }
  return dims;
}
function getReductionAxes(inShape, outShape) {
  const result = [];
  for (let i = 0; i < outShape.length; i++) {
    const inDim = inShape[inShape.length - i - 1];
    const outAxis = outShape.length - i - 1;
    const outDim = outShape[outAxis];
    if (inDim == null || inDim === 1 && outDim > 1) {
      result.unshift(outAxis);
    }
  }
  return result;
}
function assertAndGetBroadcastShape(shapeA, shapeB) {
  const result = [];
  const l = Math.max(shapeA.length, shapeB.length);
  for (let i = 0; i < l; i++) {
    let a2 = shapeA[shapeA.length - i - 1];
    if (a2 == null) {
      a2 = 1;
    }
    let b2 = shapeB[shapeB.length - i - 1];
    if (b2 == null) {
      b2 = 1;
    }
    if (a2 === 1) {
      result.unshift(b2);
    } else if (b2 === 1) {
      result.unshift(a2);
    } else if (a2 !== b2) {
      const errMsg = `Operands could not be broadcast together with shapes ${shapeA} and ${shapeB}.`;
      throw Error(errMsg);
    } else {
      result.unshift(a2);
    }
  }
  return result;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js
function prepareAndValidate(tensor2, indices) {
  const tensorRank = tensor2.shape.length;
  const indicesRank = indices.shape.length;
  if (tensorRank < 1) {
    throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${tensorRank}.`);
  }
  if (indicesRank < 1) {
    throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${indicesRank}.`);
  }
  if (indices.dtype !== "int32") {
    throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${indices.dtype}.`);
  }
  if (indices.shape[indicesRank - 1] > tensorRank) {
    throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${indices.shape[indicesRank - 1]} vs. ${tensorRank}`);
  }
  if (sizeFromShape(tensor2.shape) === 0) {
    throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${tensor2.shape}.`);
  }
  const indicesShape = indices.shape;
  const sliceRank = indicesShape[indicesShape.length - 1];
  let nResult = 1;
  for (let i = 0; i < indicesShape.length - 1; ++i) {
    nResult *= indicesShape[i];
  }
  const inputShape = tensor2.shape;
  const resultShape = indicesShape.slice();
  resultShape.pop();
  let sliceSize = 1;
  for (let i = sliceRank; i < tensorRank; ++i) {
    sliceSize *= inputShape[i];
    resultShape.push(inputShape[i]);
  }
  const strides = [
    ...computeStrides(tensor2.shape).map((stride) => stride / sliceSize),
    1
  ].slice(0, sliceRank);
  return [resultShape, nResult, sliceSize, strides];
}

// node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js
function validateUpdateShape(shape, indices, updates) {
  const sliceDim = indices.rank > 1 ? indices.shape[indices.rank - 1] : 1;
  const batchDim = indices.rank > 1 ? indices.rank - 1 : 1;
  const shapeError = `Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${updates.shape}, indices.shape: ${indices.shape}, shape: ${shape}, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;
  if (updates.rank < batchDim) {
    throw new Error(shapeError + ` update.rank < ${batchDim}. `);
  }
  if (shape.length < sliceDim + (updates.rank - batchDim)) {
    throw new Error(shapeError + ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);
  }
  if (updates.rank !== batchDim + shape.length - sliceDim) {
    throw new Error(shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);
  }
  for (let d = 0; d < batchDim; ++d) {
    if (updates.shape[d] !== indices.shape[d]) {
      throw new Error(shapeError + ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${indices.shape[d]}).`);
    }
  }
  for (let d = 0; d < updates.rank - batchDim; ++d) {
    if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {
      throw new Error(shapeError + ` updates.shape[${d + batchDim}] (${updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${shape[d + batchDim]})`);
    }
  }
}
function validateInput(updates, indices, shape) {
  if (indices.rank < 1) {
    throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${indices.rank}.`);
  }
  if (updates.rank < 1) {
    throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${updates.rank}.`);
  }
  if (indices.dtype !== "int32") {
    throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${indices.dtype}`);
  }
  if (shape.length < 1) {
    throw new Error(`Output rank must be greater or equal to 1, but got shape: ${shape}`);
  }
  if (shape.length === 0) {
    if (indices.size === 0) {
      throw new Error(`Indices specified for empty output. indices shape: ${indices.shape}`);
    }
    if (updates.size === 0) {
      throw new Error(`Updates specified for empty output. updates shape: ${updates.shape}`);
    }
  }
  validateUpdateShape(shape, indices, updates);
}
function calculateShapes(updates, indices, shape) {
  const indicesRank = indices.shape.length;
  const sliceRank = indicesRank > 1 ? indices.shape[indicesRank - 1] : 1;
  const totalNd = shape.length;
  let sliceSize = 1;
  for (let i = sliceRank; i < totalNd; ++i) {
    sliceSize *= shape[i];
  }
  const safeSliceDim = sliceRank < 1 ? 1 : sliceRank;
  const numUpdates = sizeFromShape(indices.shape) / safeSliceDim;
  const strides = [...computeStrides(shape.slice(0, sliceRank)), 1];
  const outputSize = sizeFromShape(shape);
  return { sliceRank, numUpdates, sliceSize, strides, outputSize };
}

// node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js
var slice_util_exports = {};
__export(slice_util_exports, {
  assertParamsValid: () => assertParamsValid,
  computeFlatOffset: () => computeFlatOffset,
  computeOutShape: () => computeOutShape,
  getNormalizedAxes: () => getNormalizedAxes,
  isSliceContinous: () => isSliceContinous,
  maskToAxes: () => maskToAxes,
  parseSliceParams: () => parseSliceParams,
  sliceInfo: () => sliceInfo,
  startForAxis: () => startForAxis,
  startIndicesWithElidedDims: () => startIndicesWithElidedDims,
  stopForAxis: () => stopForAxis,
  stopIndicesWithElidedDims: () => stopIndicesWithElidedDims,
  stridesForAxis: () => stridesForAxis,
  stridesWithElidedDims: () => stridesWithElidedDims
});
var NEW_AXIS = -2;
var SHRINK_AXIS = -1;
function assertParamsValid(input, begin, size) {
  const inputRank = input.shape.length;
  assert(inputRank === begin.length, () => `Error in slice${inputRank}D: Length of begin ${begin} must match the rank of the array (${inputRank}).`);
  assert(inputRank === size.length, () => `Error in slice${inputRank}D: Length of size ${size} must match the rank of the array (${inputRank}).`);
  for (let i = 0; i < inputRank; ++i) {
    assert(begin[i] + size[i] <= input.shape[i], () => `Error in slice${inputRank}D: begin[${i}] + size[${i}] (${begin[i] + size[i]}) would overflow input.shape[${i}] (${input.shape[i]})`);
  }
}
function maskToAxes(mask) {
  const axes = [];
  let axis = 0;
  while (mask > 0) {
    if (mask & 1) {
      axes.push(axis);
    }
    mask /= 2;
    axis++;
  }
  return axes;
}
function computeOutShape(begin, end, strides) {
  const size = [];
  for (let axis = 0; axis < begin.length; axis++) {
    size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);
  }
  return size;
}
function stridesWithElidedDims(strides, ellipsisInsertionIndex, numElidedAxes, inputShape) {
  const newStrides = [...strides];
  for (let i = newStrides.length; i < inputShape.length; i++) {
    newStrides.push(1);
  }
  for (let i = 0; i < numElidedAxes; i++) {
    if (i === 0) {
      newStrides[ellipsisInsertionIndex] = 1;
    } else {
      newStrides.splice(ellipsisInsertionIndex, 0, 1);
      newStrides.pop();
    }
  }
  return newStrides;
}
function unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, normalizedAxis) {
  if (normalizedAxis <= ellipsisInsertionIndex) {
    return normalizedAxis;
  }
  return normalizedAxis - (numElidedAxes - 1);
}
function getElidedAxes(numElidedAxes, ellipsisInsertionIndex) {
  const elidedAxes = [];
  for (let i = 0; i < numElidedAxes; i++) {
    elidedAxes.push(ellipsisInsertionIndex + i);
  }
  return elidedAxes;
}
function getNormalizedAxes(inputShape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask) {
  const inputRank = inputShape.length;
  let normalizedBegin = new Array(inputRank), normalizedEnd = new Array(inputRank), normalizedStrides = new Array(inputRank);
  if (ellipsisAxes.length && numInterpolatedAxes > 0) {
    const fullIndex = ellipsisAxes[0];
    const numElidedAxes = numInterpolatedAxes + 1;
    normalizedBegin = startIndicesWithElidedDims(beginMask, fullIndex, numElidedAxes, begin, inputShape);
    normalizedEnd = stopIndicesWithElidedDims(endMask, fullIndex, numElidedAxes, end, inputShape);
    normalizedStrides = stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);
  } else {
    for (let axis = 0; axis < inputRank; axis++) {
      normalizedBegin[axis] = startForAxis(beginMask, begin, strides, inputShape, axis, ellipsisMask);
      normalizedEnd[axis] = stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);
      normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);
    }
  }
  return {
    begin: normalizedBegin,
    end: normalizedEnd,
    strides: normalizedStrides
  };
}
function startIndicesWithElidedDims(beginMask, ellipsisInsertionIndex, numElidedAxes, originalBegin, inputShape) {
  const newIndices = [...inputShape];
  const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);
  for (let axis = 0; axis < newIndices.length; axis++) {
    if (elidedAxes.indexOf(axis) > -1) {
      newIndices[axis] = 0;
    } else {
      const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);
      let originalValue = originalBegin[originalAxis];
      if (beginMask & 1 << originalAxis) {
        originalValue = 0;
      }
      newIndices[axis] = originalValue;
    }
  }
  return newIndices;
}
function stopIndicesWithElidedDims(endMask, ellipsisInsertionIndex, numElidedAxes, originalEnd, inputShape) {
  const newIndices = [...inputShape];
  const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);
  for (let axis = 0; axis < newIndices.length; axis++) {
    if (elidedAxes.indexOf(axis) > -1) {
      newIndices[axis] = Number.MAX_SAFE_INTEGER;
    } else {
      const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);
      let originalValue = originalEnd[originalAxis];
      if (endMask & 1 << originalAxis) {
        originalValue = Number.MAX_SAFE_INTEGER;
      }
      newIndices[axis] = originalValue;
    }
  }
  for (let i = 0; i < newIndices.length; i++) {
    const axisSize = inputShape[i];
    if (newIndices[i] < 0) {
      newIndices[i] += axisSize;
    }
    newIndices[i] = clamp(0, newIndices[i], inputShape[i]);
  }
  return newIndices;
}
function stridesForAxis(strides, axis, ellipsisMask) {
  let stride = strides[axis];
  if (ellipsisMask & 1 << axis || stride == null) {
    stride = 1;
  }
  return stride;
}
function startForAxis(beginMask, startIndices, strides, inputShape, axis, ellipsisMask) {
  let start = startIndices[axis];
  const stride = strides[axis] || 1;
  if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {
    if (stride > 0) {
      start = Number.MIN_SAFE_INTEGER;
    } else {
      start = Number.MAX_SAFE_INTEGER;
    }
  }
  const axisSize = inputShape[axis];
  if (start < 0) {
    start += axisSize;
  }
  start = clamp(0, start, axisSize - 1);
  return start;
}
function stopForAxis(endMask, stopIndices, strides, inputShape, axis, ellipsisMask) {
  let stop = stopIndices[axis];
  const stride = strides[axis] || 1;
  if (endMask & 1 << axis || ellipsisMask & 1 << axis || stop == null) {
    if (stride > 0) {
      stop = Number.MAX_SAFE_INTEGER;
    } else {
      stop = Number.MIN_SAFE_INTEGER;
    }
  }
  const axisSize = inputShape[axis];
  if (stop < 0) {
    stop += axisSize;
  }
  if (stride > 0) {
    stop = clamp(0, stop, axisSize);
  } else {
    stop = clamp(-1, stop, axisSize - 1);
  }
  return stop;
}
function isSliceContinous(shape, begin, size) {
  let firstNonOneAxis = size.length;
  for (let i = 0; i < size.length; i++) {
    if (size[i] > 1) {
      firstNonOneAxis = i;
      break;
    }
  }
  for (let i = firstNonOneAxis + 1; i < size.length; i++) {
    if (begin[i] > 0 || size[i] !== shape[i]) {
      return false;
    }
  }
  return true;
}
function computeFlatOffset(begin, strides) {
  let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;
  for (let i = 0; i < begin.length - 1; i++) {
    flatOffset += begin[i] * strides[i];
  }
  return flatOffset;
}
function parseSliceParams(x, begin, size) {
  let begin_;
  const xRank = x.shape.length;
  if (typeof begin === "number") {
    begin_ = [begin, ...new Array(xRank - 1).fill(0)];
  } else if (begin.length < xRank) {
    begin_ = begin.concat(new Array(xRank - begin.length).fill(0));
  } else {
    begin_ = begin.slice();
  }
  begin_.forEach((d) => {
    assert(d !== -1, () => "slice() does not support negative begin indexing.");
  });
  let size_;
  if (size == null) {
    size_ = new Array(xRank).fill(-1);
  } else if (typeof size === "number") {
    size_ = [size, ...new Array(xRank - 1).fill(-1)];
  } else if (size.length < xRank) {
    size_ = size.concat(new Array(xRank - size.length).fill(-1));
  } else {
    size_ = size;
  }
  size_ = size_.map((d, i) => {
    if (d >= 0) {
      return d;
    } else {
      assert(d === -1, () => `Negative size values should be exactly -1 but got ${d} for the slice() size at index ${i}.`);
      return x.shape[i] - begin_[i];
    }
  });
  return [begin_, size_];
}
function sliceInfo(xShape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {
  let stridesNonNull;
  if (strides == null) {
    stridesNonNull = new Array(begin.length);
    stridesNonNull.fill(1);
  } else {
    stridesNonNull = strides;
  }
  if (ellipsisMask != null && (ellipsisMask & ellipsisMask - 1) !== 0) {
    throw new Error("Multiple ellipses in slice is not allowed.");
  }
  let ellipsisSeen = false;
  const sparseSpec = {
    dims: stridesNonNull.length,
    numAddAxisAfterEllipsis: 0,
    begin: begin.slice(),
    end: end.slice(),
    strides: stridesNonNull.slice(),
    beginMask,
    endMask,
    ellipsisMask,
    newAxisMask,
    shrinkAxisMask
  };
  for (let i = 0; i < sparseSpec.dims; i++) {
    if (ellipsisSeen && (1 << i & newAxisMask) !== 0) {
      sparseSpec.numAddAxisAfterEllipsis++;
    }
    if (1 << i & ellipsisMask) {
      ellipsisSeen = true;
    }
  }
  if (!ellipsisSeen) {
    sparseSpec.ellipsisMask |= 1 << sparseSpec.dims;
    sparseSpec.dims++;
  }
  const denseSpec = {
    dims: xShape.length,
    beginMask: 0,
    endMask: 0,
    beginValid: false,
    endValid: false
  };
  buildDenseSpec(sparseSpec, denseSpec);
  let isIdentity = true;
  let sliceDim0 = true;
  let isSimpleSlice = true;
  const processingShape = [];
  const finalShape = [];
  for (let i = 0; i < xShape.length; ++i) {
    if (denseSpec.strides[i] === 0) {
      throw Error(`strides[${i}] must be non-zero`);
    }
    const shrinkI = !!(denseSpec.shrinkAxisMask & 1 << i);
    const dimI = xShape[i];
    if (dimI === -1) {
      processingShape.push(shrinkI ? 1 : -1);
      continue;
    }
    const masks = [denseSpec.beginMask & 1 << i, denseSpec.endMask & 1 << i];
    const validRange = [
      denseSpec.strides[i] > 0 ? 0 : -1,
      denseSpec.strides[i] > 0 ? dimI : dimI - 1
    ];
    if (shrinkI && denseSpec.strides[i] <= 0) {
      throw Error("only stride 1 allowed on non-range indexing.");
    }
    isSimpleSlice = isSimpleSlice && denseSpec.strides[i] === 1;
    const beginAndEndMasked = !!(denseSpec.beginMask & 1 << i && denseSpec.endMask & 1 << i);
    if (denseSpec.beginValid && denseSpec.endValid) {
      if (shrinkI) {
        const xFwd = denseSpec.begin[i] < 0 ? dimI + denseSpec.begin[i] : denseSpec.begin[i];
        denseSpec.begin[i] = xFwd;
        denseSpec.end[i] = denseSpec.begin[i] + 1;
        if (xFwd < 0 || xFwd >= dimI) {
          throw Error(`slice index ${denseSpec.begin[i]} of dimension ${i} out of bounds.`);
        }
      } else {
        denseSpec.begin[i] = canonical(denseSpec.begin[i], 0, denseSpec.strides[i], dimI, masks, validRange);
        denseSpec.end[i] = canonical(denseSpec.end[i], 1, denseSpec.strides[i], dimI, masks, validRange);
      }
      const takeAllInDimension = denseSpec.strides[i] === 1 && denseSpec.begin[i] === 0 && denseSpec.end[i] === dimI;
      isIdentity = isIdentity && takeAllInDimension;
      sliceDim0 = sliceDim0 && (i === 0 && denseSpec.strides[i] === 1 || takeAllInDimension);
    } else {
      isIdentity = isIdentity && (denseSpec.strides[i] === 1 && beginAndEndMasked);
      sliceDim0 = sliceDim0 && (i === 0 && denseSpec.strides[i] === 1 || beginAndEndMasked);
    }
    let intervalLength;
    let knownInterval = false;
    if (denseSpec.beginValid && denseSpec.endValid) {
      intervalLength = denseSpec.end[i] - denseSpec.begin[i];
      knownInterval = true;
    } else if (shrinkI) {
      intervalLength = 1;
      knownInterval = true;
    } else if (beginAndEndMasked) {
      if (dimI >= 0) {
        if (denseSpec.strides[i] < 0) {
          intervalLength = -dimI;
        } else {
          intervalLength = dimI;
        }
        knownInterval = true;
      }
    }
    if (knownInterval) {
      let sizeI;
      if (intervalLength === 0 || intervalLength < 0 !== denseSpec.strides[i] < 0) {
        sizeI = 0;
      } else {
        sizeI = Math.trunc(intervalLength / denseSpec.strides[i]) + (intervalLength % denseSpec.strides[i] !== 0 ? 1 : 0);
      }
      processingShape.push(sizeI);
    } else {
      processingShape.push(-1);
    }
  }
  for (let denseDim = 0; denseDim < denseSpec.finalShapeGatherIndices.length; ++denseDim) {
    const gatherIndex = denseSpec.finalShapeGatherIndices[denseDim];
    if (gatherIndex >= 0) {
      finalShape.push(processingShape[gatherIndex]);
    } else if (gatherIndex === NEW_AXIS) {
      finalShape.push(1);
    }
  }
  const finalShapeSparse = finalShape.filter((dim, i) => denseSpec.finalShapeGatherIndices[i] !== NEW_AXIS);
  return {
    finalShapeSparse,
    finalShape,
    isIdentity,
    sliceDim0,
    isSimpleSlice,
    begin: denseSpec.begin,
    end: denseSpec.end,
    strides: denseSpec.strides
  };
}
function buildDenseSpec(sparse, dense) {
  dense.beginMask = 0;
  dense.endMask = 0;
  dense.shrinkAxisMask = 0;
  let fullIndex = 0;
  dense.beginValid = sparse.begin != null;
  dense.endValid = sparse.end != null;
  dense.begin = new Array(dense.dims);
  dense.end = new Array(dense.dims);
  dense.strides = new Array(dense.dims);
  dense.finalShapeGatherIndices = [];
  dense.finalShapeGatherIndicesSparse = [];
  dense.inputShapeGatherIndicesSparse = new Array(dense.dims);
  for (let i = 0; i < sparse.dims; i++) {
    if (1 << i & sparse.ellipsisMask) {
      const nextIndex = Math.min(dense.dims - (sparse.dims - i) + 1 + sparse.numAddAxisAfterEllipsis, dense.dims);
      for (; fullIndex < nextIndex; fullIndex++) {
        dense.begin[fullIndex] = 0;
        dense.end[fullIndex] = 0;
        dense.strides[fullIndex] = 1;
        dense.beginMask |= 1 << fullIndex;
        dense.endMask |= 1 << fullIndex;
        dense.finalShapeGatherIndices.push(fullIndex);
        dense.finalShapeGatherIndicesSparse.push(-1);
        dense.inputShapeGatherIndicesSparse[fullIndex] = i;
      }
    } else if (1 << i & sparse.newAxisMask) {
      dense.finalShapeGatherIndices.push(NEW_AXIS);
      dense.finalShapeGatherIndicesSparse.push(-1);
    } else {
      if (fullIndex === dense.begin.length) {
        throw Error(`Index out of range using input dim ${fullIndex}; input has only ${dense.dims} dims, ${dense.begin.length}.`);
      }
      if (sparse.begin != null) {
        dense.begin[fullIndex] = sparse.begin[i];
      }
      if (sparse.end != null) {
        dense.end[fullIndex] = sparse.end[i];
      }
      dense.strides[fullIndex] = sparse.strides[i];
      if (sparse.beginMask & 1 << i) {
        dense.beginMask |= 1 << fullIndex;
      }
      if (sparse.endMask & 1 << i) {
        dense.endMask |= 1 << fullIndex;
      }
      if (sparse.shrinkAxisMask & 1 << i) {
        dense.finalShapeGatherIndices.push(SHRINK_AXIS);
        dense.finalShapeGatherIndicesSparse.push(-1);
        dense.shrinkAxisMask |= 1 << fullIndex;
      } else {
        dense.finalShapeGatherIndices.push(fullIndex);
        dense.finalShapeGatherIndicesSparse.push(i);
      }
      dense.inputShapeGatherIndicesSparse[fullIndex] = i;
      fullIndex++;
    }
  }
}
function canonical(x, c, strideI, dimI, masks, validRange) {
  if (masks[c]) {
    return strideI > 0 ? validRange[c] : validRange[c + 1 & 1];
  } else {
    const xFwd = x < 0 ? dimI + x : x;
    return xFwd < validRange[0] ? validRange[0] : xFwd > validRange[1] ? validRange[1] : xFwd;
  }
}

// node_modules/@tensorflow/tfjs-core/dist/globals.js
function deprecationWarn(msg) {
  if (env().getBool("DEPRECATION_WARNINGS_ENABLED")) {
    console.warn(msg + " You can disable deprecation warnings with tf.disableDeprecationWarnings().");
  }
}
setDeprecationWarningFn(deprecationWarn);
function engine() {
  return ENGINE;
}
function tidy(nameOrFn, fn) {
  return ENGINE.tidy(nameOrFn, fn);
}
function setBackend(backendName) {
  return ENGINE.setBackend(backendName);
}
function ready() {
  return ENGINE.ready();
}
function registerBackend(name, factory, priority = 1) {
  return ENGINE.registerBackend(name, factory, priority);
}

// node_modules/@tensorflow/tfjs-core/dist/ops/mul.js
function mul_(a2, b2) {
  let $a = convertToTensor(a2, "a", "mul");
  let $b = convertToTensor(b2, "b", "mul");
  [$a, $b] = makeTypesMatch($a, $b);
  const inputs = { a: $a, b: $b };
  return ENGINE.runKernel(Multiply, inputs);
}
var mul = op({ mul_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/abs.js
function abs_(x) {
  const $x = convertToTensor(x, "x", "abs");
  if ($x.dtype === "complex64") {
    const inputs = { x: $x };
    return ENGINE.runKernel(ComplexAbs, inputs);
  } else {
    const inputs = { x: $x };
    return ENGINE.runKernel(Abs, inputs);
  }
}
var abs = op({ abs_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js
function atan2_(a2, b2) {
  let $a = convertToTensor(a2, "a", "atan2");
  let $b = convertToTensor(b2, "b", "atan2");
  [$a, $b] = makeTypesMatch($a, $b);
  const inputs = { a: $a, b: $b };
  return ENGINE.runKernel(Atan2, inputs);
}
var atan2 = op({ atan2_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js
function computeDilation2DInfo(inputShape, filterShape, strides, pad, dataFormat = "NHWC", dilations) {
  const inputChannels = inputShape[3];
  const $filterShape = [...filterShape, inputChannels];
  const $dataFormat = convertConv2DDataFormat(dataFormat);
  return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null, null, $dataFormat);
}
function computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = "channelsLast") {
  const [filterHeight, filterWidth] = parseTupleParam(filterSize);
  let filterShape;
  if (dataFormat === "channelsLast") {
    filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];
  } else if (dataFormat === "channelsFirst") {
    filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];
  } else {
    throw new Error(`Unknown dataFormat ${dataFormat}`);
  }
  return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);
}
function computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = "NDHWC") {
  const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);
  let filterShape;
  let $dataFormat;
  if (dataFormat === "NDHWC") {
    $dataFormat = "channelsLast";
    filterShape = [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];
  } else if (dataFormat === "NCDHW") {
    $dataFormat = "channelsFirst";
    filterShape = [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];
  } else {
    throw new Error(`Unknown dataFormat ${dataFormat}`);
  }
  return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);
}
function computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise = false, dataFormat = "channelsLast") {
  let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];
  if (dataFormat === "channelsLast") {
    [batchSize, inHeight, inWidth, inChannels] = inShape;
  } else if (dataFormat === "channelsFirst") {
    [batchSize, inChannels, inHeight, inWidth] = inShape;
  } else {
    throw new Error(`Unknown dataFormat ${dataFormat}`);
  }
  const [filterHeight, filterWidth, , filterChannels] = filterShape;
  const [strideHeight, strideWidth] = parseTupleParam(strides);
  const [dilationHeight, dilationWidth] = parseTupleParam(dilations);
  const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);
  const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);
  const { padInfo, outHeight, outWidth } = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat);
  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;
  let outShape;
  if (dataFormat === "channelsFirst") {
    outShape = [batchSize, outChannels, outHeight, outWidth];
  } else if (dataFormat === "channelsLast") {
    outShape = [batchSize, outHeight, outWidth, outChannels];
  }
  return {
    batchSize,
    dataFormat,
    inHeight,
    inWidth,
    inChannels,
    outHeight,
    outWidth,
    outChannels,
    padInfo,
    strideHeight,
    strideWidth,
    filterHeight,
    filterWidth,
    effectiveFilterHeight,
    effectiveFilterWidth,
    dilationHeight,
    dilationWidth,
    inShape,
    outShape,
    filterShape
  };
}
function computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise = false, dataFormat = "channelsLast", roundingMode) {
  let [batchSize, inDepth, inHeight, inWidth, inChannels] = [-1, -1, -1, -1, -1];
  if (dataFormat === "channelsLast") {
    [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;
  } else if (dataFormat === "channelsFirst") {
    [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;
  } else {
    throw new Error(`Unknown dataFormat ${dataFormat}`);
  }
  const [filterDepth, filterHeight, filterWidth, , filterChannels] = filterShape;
  const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);
  const [dilationDepth, dilationHeight, dilationWidth] = parse3TupleParam(dilations);
  const effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);
  const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);
  const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);
  const { padInfo, outDepth, outHeight, outWidth } = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode);
  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;
  let outShape;
  if (dataFormat === "channelsFirst") {
    outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];
  } else if (dataFormat === "channelsLast") {
    outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];
  }
  return {
    batchSize,
    dataFormat,
    inDepth,
    inHeight,
    inWidth,
    inChannels,
    outDepth,
    outHeight,
    outWidth,
    outChannels,
    padInfo,
    strideDepth,
    strideHeight,
    strideWidth,
    filterDepth,
    filterHeight,
    filterWidth,
    effectiveFilterDepth,
    effectiveFilterHeight,
    effectiveFilterWidth,
    dilationDepth,
    dilationHeight,
    dilationWidth,
    inShape,
    outShape,
    filterShape
  };
}
function computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {
  if (zeroPad == null) {
    zeroPad = computeDefaultPad(inShape, fieldSize, stride);
  }
  const inputRows = inShape[0];
  const inputCols = inShape[1];
  const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);
  const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);
  return [outputRows, outputCols];
}
function computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {
  if (zeroPad == null) {
    zeroPad = computeDefaultPad(inShape, fieldSize, stride);
  }
  const inputDepth = inShape[0];
  const inputRows = inShape[1];
  const inputCols = inShape[2];
  const outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);
  const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);
  const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);
  return [outputDepths, outputRows, outputCols, outChannels];
}
function computeDefaultPad(inputShape, fieldSize, stride, dilation = 1) {
  const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);
  return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);
}
function parseTupleParam(param) {
  if (typeof param === "number") {
    return [param, param, param];
  }
  if (param.length === 2) {
    return [param[0], param[1], 1];
  }
  return param;
}
function parse3TupleParam(param) {
  return typeof param === "number" ? [param, param, param] : param;
}
function getEffectiveFilterSize(filterSize, dilation) {
  if (dilation <= 1) {
    return filterSize;
  }
  return filterSize + (filterSize - 1) * (dilation - 1);
}
function getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {
  let padInfo;
  let outHeight;
  let outWidth;
  if (typeof pad === "number") {
    const padType = pad === 0 ? "VALID" : "NUMBER";
    padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };
    const outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);
    outHeight = outShape[0];
    outWidth = outShape[1];
  } else if (pad === "same") {
    outHeight = Math.ceil(inHeight / strideHeight);
    outWidth = Math.ceil(inWidth / strideWidth);
    const padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);
    const padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);
    const top = Math.floor(padAlongHeight / 2);
    const bottom = padAlongHeight - top;
    const left = Math.floor(padAlongWidth / 2);
    const right = padAlongWidth - left;
    padInfo = { top, bottom, left, right, type: "SAME" };
  } else if (pad === "valid") {
    padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: "VALID" };
    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);
    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);
  } else if (typeof pad === "object") {
    const top = dataFormat === "channelsLast" ? pad[1][0] : pad[2][0];
    const bottom = dataFormat === "channelsLast" ? pad[1][1] : pad[2][1];
    const left = dataFormat === "channelsLast" ? pad[2][0] : pad[3][0];
    const right = dataFormat === "channelsLast" ? pad[2][1] : pad[3][1];
    const padType = top === 0 && bottom === 0 && left === 0 && right === 0 ? "VALID" : "EXPLICIT";
    padInfo = { top, bottom, left, right, type: padType };
    outHeight = round((inHeight - filterHeight + top + bottom) / strideHeight + 1, roundingMode);
    outWidth = round((inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);
  } else {
    throw Error(`Unknown padding parameter: ${pad}`);
  }
  return { padInfo, outHeight, outWidth };
}
function get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {
  let padInfo;
  let outDepth;
  let outHeight;
  let outWidth;
  if (typeof pad === "number") {
    const padType = pad === 0 ? "VALID" : "NUMBER";
    padInfo = {
      top: pad,
      bottom: pad,
      left: pad,
      right: pad,
      front: pad,
      back: pad,
      type: padType
    };
    const outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);
    outDepth = outShape[0];
    outHeight = outShape[1];
    outWidth = outShape[2];
  } else if (pad === "same") {
    outDepth = Math.ceil(inDepth / strideDepth);
    outHeight = Math.ceil(inHeight / strideHeight);
    outWidth = Math.ceil(inWidth / strideWidth);
    const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;
    const padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;
    const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;
    const front = Math.floor(padAlongDepth / 2);
    const back = padAlongDepth - front;
    const top = Math.floor(padAlongHeight / 2);
    const bottom = padAlongHeight - top;
    const left = Math.floor(padAlongWidth / 2);
    const right = padAlongWidth - left;
    padInfo = { top, bottom, left, right, front, back, type: "SAME" };
  } else if (pad === "valid") {
    padInfo = {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      front: 0,
      back: 0,
      type: "VALID"
    };
    outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);
    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);
    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);
  } else {
    throw Error(`Unknown padding parameter: ${pad}`);
  }
  return { padInfo, outDepth, outHeight, outWidth };
}
function round(value, roundingMode) {
  if (!roundingMode) {
    return Math.trunc(value);
  }
  switch (roundingMode) {
    case "round":
      return Math.round(value);
    case "ceil":
      return Math.ceil(value);
    case "floor":
      return Math.floor(value);
    default:
      throw new Error(`Unknown roundingMode ${roundingMode}`);
  }
}
function tupleValuesAreOne(param) {
  const [dimA, dimB, dimC] = parseTupleParam(param);
  return dimA === 1 && dimB === 1 && dimC === 1;
}
function eitherStridesOrDilationsAreOne(strides, dilations) {
  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);
}
function convertConv2DDataFormat(dataFormat) {
  if (dataFormat === "NHWC") {
    return "channelsLast";
  } else if (dataFormat === "NCHW") {
    return "channelsFirst";
  } else {
    throw new Error(`Unknown dataFormat ${dataFormat}`);
  }
}
function checkPadOnDimRoundingMode(opDesc, pad, dimRoundingMode) {
  if (dimRoundingMode != null) {
    if (typeof pad === "string") {
      throw Error(`Error in ${opDesc}: pad must be an integer when using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);
    } else if (typeof pad === "number") {
      assert(isInt(pad), () => `Error in ${opDesc}: pad must be an integer when using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);
    } else if (typeof pad === "object") {
      pad.forEach((p) => {
        p.forEach((v) => {
          assert(isInt(v), () => `Error in ${opDesc}: pad must be an integer when using dimRoundingMode ${dimRoundingMode} but got pad ${v}.`);
        });
      });
    } else {
      throw Error(`Error in ${opDesc}: Unknown padding parameter: ${pad}`);
    }
  }
}

// node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js
function reshape_(x, shape) {
  const $x = convertToTensor(x, "x", "reshape", "string_or_numeric");
  const inputs = { x: $x };
  const attrs = { shape };
  return ENGINE.runKernel(Reshape, inputs, attrs);
}
var reshape = op({ reshape_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/clone.js
function clone_(x) {
  const $x = convertToTensor(x, "x", "clone", "string_or_numeric");
  const inputs = { x: $x };
  return ENGINE.runKernel(Identity, inputs);
}
var clone = op({ clone_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js
function sigmoid_(x) {
  const $x = convertToTensor(x, "x", "sigmoid", "float32");
  const inputs = { x: $x };
  return ENGINE.runKernel(Sigmoid, inputs);
}
var sigmoid = op({ sigmoid_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js
function buffer(shape, dtype = "float32", values) {
  dtype = dtype || "float32";
  assertNonNegativeIntegerDimensions(shape);
  return new TensorBuffer(shape, dtype, values);
}

// node_modules/@tensorflow/tfjs-core/dist/ops/cos.js
function cos_(x) {
  const $x = convertToTensor(x, "x", "cos", "float32");
  const inputs = { x: $x };
  return ENGINE.runKernel(Cos, inputs);
}
var cos = op({ cos_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/elu.js
function elu_(x) {
  const $x = convertToTensor(x, "x", "elu", "float32");
  const inputs = { x: $x };
  return ENGINE.runKernel(Elu, inputs);
}
var elu = op({ elu_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/imag.js
function imag_(input) {
  const $input = convertToTensor(input, "input", "imag");
  const inputs = { input: $input };
  return ENGINE.runKernel(Imag, inputs);
}
var imag = op({ imag_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js
function leakyRelu_(x, alpha = 0.2) {
  const $x = convertToTensor(x, "x", "leakyRelu");
  const inputs = { x: $x };
  const attrs = { alpha };
  return ENGINE.runKernel(LeakyRelu, inputs, attrs);
}
var leakyRelu = op({ leakyRelu_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/sum.js
function sum_(x, axis = null, keepDims = false) {
  let $x = convertToTensor(x, "x", "sum");
  if ($x.dtype === "bool") {
    $x = cast($x, "int32");
  }
  const inputs = { x: $x };
  const attrs = { axis, keepDims };
  return ENGINE.runKernel(Sum, inputs, attrs);
}
var sum2 = op({ sum_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js
function axesAreInnerMostDims(axes, rank) {
  for (let i = 0; i < axes.length; ++i) {
    if (axes[axes.length - i - 1] !== rank - 1 - i) {
      return false;
    }
  }
  return true;
}
function combineLocations(outputLoc, reduceLoc, axes) {
  const rank = outputLoc.length + reduceLoc.length;
  const loc = [];
  let outIdx = 0;
  let reduceIdx = 0;
  for (let dim = 0; dim < rank; dim++) {
    if (axes.indexOf(dim) === -1) {
      loc.push(outputLoc[outIdx++]);
    } else {
      loc.push(reduceLoc[reduceIdx++]);
    }
  }
  return loc;
}
function computeOutAndReduceShapes(aShape, axes) {
  const outShape = [];
  const rank = aShape.length;
  for (let dim = 0; dim < rank; dim++) {
    if (axes.indexOf(dim) === -1) {
      outShape.push(aShape[dim]);
    }
  }
  const reduceShape = axes.map((dim) => aShape[dim]);
  return [outShape, reduceShape];
}
function expandShapeToKeepDim(shape, axes) {
  const reduceSubShape = axes.map((x) => 1);
  return combineLocations(shape, reduceSubShape, axes);
}
function assertAxesAreInnerMostDims(msg, axes, rank) {
  assert(axesAreInnerMostDims(axes, rank), () => `${msg} supports only inner-most axes for now. Got axes ${axes} and rank-${rank} input.`);
}
function getAxesPermutation(axes, rank) {
  if (axesAreInnerMostDims(axes, rank)) {
    return null;
  }
  const result = [];
  for (let i = 0; i < rank; ++i) {
    if (axes.indexOf(i) === -1) {
      result.push(i);
    }
  }
  axes.forEach((axis) => result.push(axis));
  return result;
}
function getUndoAxesPermutation(axes) {
  return axes.map((axis, i) => [i, axis]).sort((a2, b2) => a2[1] - b2[1]).map((x) => x[0]);
}
function getInnerMostAxes(numAxes, rank) {
  const res = [];
  for (let i = rank - numAxes; i < rank; ++i) {
    res.push(i);
  }
  return res;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js
function zeros(shape, dtype = "float32") {
  if (dtype === "complex64") {
    const real3 = zeros(shape, "float32");
    const imag3 = zeros(shape, "float32");
    return complex(real3, imag3);
  }
  const values = makeZerosTypedArray(sizeFromShape(shape), dtype);
  return ENGINE.makeTensor(values, shape, dtype);
}

// node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js
function prelu_(x, alpha) {
  const $x = convertToTensor(x, "x", "prelu");
  const $alpha = convertToTensor(alpha, "alpha", "prelu");
  const inputs = { x: $x, alpha: $alpha };
  return ENGINE.runKernel(Prelu, inputs);
}
var prelu = op({ prelu_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/print.js
function print(x, verbose = false) {
  console.log(x.toString(verbose));
}

// node_modules/@tensorflow/tfjs-core/dist/ops/real.js
function real_(input) {
  const $input = convertToTensor(input, "input", "real");
  const inputs = { input: $input };
  return ENGINE.runKernel(Real, inputs);
}
var real = op({ real_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/relu.js
function relu_(x) {
  const $x = convertToTensor(x, "x", "relu");
  const inputs = { x: $x };
  return ENGINE.runKernel(Relu, inputs);
}
var relu = op({ relu_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js
function relu6_(x) {
  const $x = convertToTensor(x, "x", "relu6");
  const inputs = { x: $x };
  return ENGINE.runKernel(Relu6, inputs);
}
var relu6 = op({ relu6_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/sin.js
function sin_(x) {
  const $x = convertToTensor(x, "x", "sin", "float32");
  const inputs = { x: $x };
  return ENGINE.runKernel(Sin, inputs);
}
var sin = op({ sin_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js
function squeeze_(x, axis) {
  const $x = convertToTensor(x, "x", "squeeze");
  return reshape($x, squeezeShape($x.shape, axis).newShape);
}
var squeeze = op({ squeeze_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/step.js
function step_(x, alpha = 0) {
  const $x = convertToTensor(x, "x", "step");
  const inputs = { x: $x };
  const attrs = { alpha };
  return ENGINE.runKernel(Step, inputs, attrs);
}
var step = op({ step_ });

// node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js
function tensor1d(values, dtype) {
  assertNonNull(values);
  const inferredShape = inferShape(values, dtype);
  if (inferredShape.length !== 1) {
    throw new Error("tensor1d() requires values to be a flat/TypedArray");
  }
  const shape = null;
  return makeTensor(values, shape, inferredShape, dtype);
}

// node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js
function whereImpl(condShape, condVals) {
  const indices = [];
  for (let i = 0; i < condVals.length; i++) {
    if (condVals[i]) {
      indices.push(i);
    }
  }
  const inBuffer = buffer(condShape, "int32");
  const out = buffer([indices.length, condShape.length], "int32");
  for (let i = 0; i < indices.length; i++) {
    const loc = inBuffer.indexToLoc(indices[i]);
    const offset = i * condShape.length;
    out.values.set(loc, offset);
  }
  return out.toTensor();
}

// node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js
function getFusedDyActivation(dy, y, activation) {
  if (activation == null || activation === "linear") {
    return dy;
  }
  if (activation === "relu") {
    return mul(dy, step(y));
  }
  throw new Error(`Cannot compute gradient for fused activation ${activation}.`);
}
function getFusedBiasGradient(bias, dyActivation) {
  let res = dyActivation;
  const reduceAxes = getReductionAxes(bias.shape, dyActivation.shape);
  if (reduceAxes.length > 0) {
    res = sum2(res, reduceAxes);
  }
  return reshape(res, bias.shape);
}
function applyActivation(x, activation, preluActivationWeights, leakyreluAlpha) {
  if (activation === "linear") {
    return x;
  } else if (activation === "relu") {
    return relu(x);
  } else if (activation === "elu") {
    return elu(x);
  } else if (activation === "relu6") {
    return relu6(x);
  } else if (activation === "prelu") {
    return prelu(x, preluActivationWeights);
  } else if (activation === "leakyrelu") {
    return leakyRelu(x, leakyreluAlpha);
  } else if (activation === "sigmoid") {
    return sigmoid(x);
  }
  throw new Error(`Unknown fused activation ${activation}.`);
}
var shouldFuse = (gradientDepth, activation) => {
  const gradientMode = gradientDepth > 0;
  return !gradientMode || activation === "linear";
};

// node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js
function binaryInsert(arr, element, comparator) {
  const index = binarySearch(arr, element, comparator);
  const insertionPoint = index < 0 ? -(index + 1) : index;
  arr.splice(insertionPoint, 0, element);
}
function binarySearch(arr, target, comparator) {
  return binarySearch_(arr, target, comparator || defaultComparator);
}
function defaultComparator(a2, b2) {
  return a2 > b2 ? 1 : a2 < b2 ? -1 : 0;
}
function binarySearch_(arr, target, comparator) {
  let left = 0;
  let right = arr.length;
  let middle = 0;
  let found = false;
  while (left < right) {
    middle = left + (right - left >>> 1);
    const compareResult = comparator(target, arr[middle]);
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : -left - 1;
}

// node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js
function nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {
  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0);
}
function nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {
  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0, false, padToMaxOutputSize, true);
}
function nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {
  return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true);
}
function nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, returnScoresTensor = false, padToMaxOutputSize = false, returnValidOutputs = false) {
  const candidates = [];
  for (let i = 0; i < scores.length; i++) {
    if (scores[i] > scoreThreshold) {
      candidates.push({ score: scores[i], boxIndex: i, suppressBeginIndex: 0 });
    }
  }
  candidates.sort(ascendingComparator);
  const scale = softNmsSigma > 0 ? -0.5 / softNmsSigma : 0;
  const selectedIndices = [];
  const selectedScores = [];
  while (selectedIndices.length < maxOutputSize && candidates.length > 0) {
    const candidate = candidates.pop();
    const { score: originalScore, boxIndex, suppressBeginIndex } = candidate;
    if (originalScore < scoreThreshold) {
      break;
    }
    let ignoreCandidate = false;
    for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {
      const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);
      if (iou >= iouThreshold) {
        ignoreCandidate = true;
        break;
      }
      candidate.score = candidate.score * suppressWeight(iouThreshold, scale, iou);
      if (candidate.score <= scoreThreshold) {
        break;
      }
    }
    candidate.suppressBeginIndex = selectedIndices.length;
    if (!ignoreCandidate) {
      if (candidate.score === originalScore) {
        selectedIndices.push(boxIndex);
        selectedScores.push(candidate.score);
      } else if (candidate.score > scoreThreshold) {
        binaryInsert(candidates, candidate, ascendingComparator);
      }
    }
  }
  const validOutputs = selectedIndices.length;
  const elemsToPad = maxOutputSize - validOutputs;
  if (padToMaxOutputSize && elemsToPad > 0) {
    selectedIndices.push(...new Array(elemsToPad).fill(0));
    selectedScores.push(...new Array(elemsToPad).fill(0));
  }
  const result = { selectedIndices };
  if (returnScoresTensor) {
    result["selectedScores"] = selectedScores;
  }
  if (returnValidOutputs) {
    result["validOutputs"] = validOutputs;
  }
  return result;
}
function intersectionOverUnion(boxes, i, j) {
  const iCoord = boxes.subarray(i * 4, i * 4 + 4);
  const jCoord = boxes.subarray(j * 4, j * 4 + 4);
  const yminI = Math.min(iCoord[0], iCoord[2]);
  const xminI = Math.min(iCoord[1], iCoord[3]);
  const ymaxI = Math.max(iCoord[0], iCoord[2]);
  const xmaxI = Math.max(iCoord[1], iCoord[3]);
  const yminJ = Math.min(jCoord[0], jCoord[2]);
  const xminJ = Math.min(jCoord[1], jCoord[3]);
  const ymaxJ = Math.max(jCoord[0], jCoord[2]);
  const xmaxJ = Math.max(jCoord[1], jCoord[3]);
  const areaI = (ymaxI - yminI) * (xmaxI - xminI);
  const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);
  if (areaI <= 0 || areaJ <= 0) {
    return 0;
  }
  const intersectionYmin = Math.max(yminI, yminJ);
  const intersectionXmin = Math.max(xminI, xminJ);
  const intersectionYmax = Math.min(ymaxI, ymaxJ);
  const intersectionXmax = Math.min(xmaxI, xmaxJ);
  const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0) * Math.max(intersectionXmax - intersectionXmin, 0);
  return intersectionArea / (areaI + areaJ - intersectionArea);
}
function suppressWeight(iouThreshold, scale, iou) {
  const weight = Math.exp(scale * iou * iou);
  return iou <= iouThreshold ? weight : 0;
}
function ascendingComparator(c1, c2) {
  return c1.score - c2.score || c1.score === c2.score && c2.boxIndex - c1.boxIndex;
}

// node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js
var backend_util_exports = {};
__export(backend_util_exports, {
  ERF_A1: () => ERF_A1,
  ERF_A2: () => ERF_A2,
  ERF_A3: () => ERF_A3,
  ERF_A4: () => ERF_A4,
  ERF_A5: () => ERF_A5,
  ERF_P: () => ERF_P,
  PARALLELIZE_THRESHOLD: () => PARALLELIZE_THRESHOLD,
  SELU_SCALE: () => SELU_SCALE,
  SELU_SCALEALPHA: () => SELU_SCALEALPHA,
  applyActivation: () => applyActivation,
  assertAndGetBroadcastShape: () => assertAndGetBroadcastShape,
  assertAxesAreInnerMostDims: () => assertAxesAreInnerMostDims,
  assertParamsConsistent: () => assertParamsConsistent,
  assignToTypedArray: () => assignToTypedArray,
  axesAreInnerMostDims: () => axesAreInnerMostDims,
  calculateShapes: () => calculateShapes,
  checkEinsumDimSizes: () => checkEinsumDimSizes,
  checkPadOnDimRoundingMode: () => checkPadOnDimRoundingMode,
  combineLocations: () => combineLocations,
  complexWithEvenIndex: () => complexWithEvenIndex,
  complexWithOddIndex: () => complexWithOddIndex,
  computeConv2DInfo: () => computeConv2DInfo,
  computeConv3DInfo: () => computeConv3DInfo,
  computeDefaultPad: () => computeDefaultPad,
  computeDilation2DInfo: () => computeDilation2DInfo,
  computeOptimalWindowSize: () => computeOptimalWindowSize,
  computeOutAndReduceShapes: () => computeOutAndReduceShapes,
  computeOutShape: () => computeOutShape2,
  computePool2DInfo: () => computePool2DInfo,
  computePool3DInfo: () => computePool3DInfo,
  convertConv2DDataFormat: () => convertConv2DDataFormat,
  decodeEinsumEquation: () => decodeEinsumEquation,
  eitherStridesOrDilationsAreOne: () => eitherStridesOrDilationsAreOne,
  expandShapeToKeepDim: () => expandShapeToKeepDim,
  exponent: () => exponent,
  exponents: () => exponents,
  fromStringArrayToUint8: () => fromStringArrayToUint8,
  fromUint8ToStringArray: () => fromUint8ToStringArray,
  getAxesPermutation: () => getAxesPermutation,
  getBroadcastDims: () => getBroadcastDims,
  getComplexWithIndex: () => getComplexWithIndex,
  getEinsumComputePath: () => getEinsumComputePath,
  getEinsumPermutation: () => getEinsumPermutation,
  getFusedBiasGradient: () => getFusedBiasGradient,
  getFusedDyActivation: () => getFusedDyActivation,
  getImageCenter: () => getImageCenter,
  getInnerMostAxes: () => getInnerMostAxes,
  getPermuted: () => getPermuted,
  getReductionAxes: () => getReductionAxes,
  getReshaped: () => getReshaped,
  getReshapedPermuted: () => getReshapedPermuted,
  getSliceBeginCoords: () => getSliceBeginCoords,
  getSliceSize: () => getSliceSize,
  getSparseFillEmptyRowsIndicesDenseShapeMismatch: () => getSparseFillEmptyRowsIndicesDenseShapeMismatch,
  getSparseFillEmptyRowsNegativeIndexErrorMessage: () => getSparseFillEmptyRowsNegativeIndexErrorMessage,
  getSparseFillEmptyRowsOutOfRangeIndexErrorMessage: () => getSparseFillEmptyRowsOutOfRangeIndexErrorMessage,
  getSparseReshapeEmptyTensorZeroOutputDimErrorMessage: () => getSparseReshapeEmptyTensorZeroOutputDimErrorMessage,
  getSparseReshapeInputOutputMismatchErrorMessage: () => getSparseReshapeInputOutputMismatchErrorMessage,
  getSparseReshapeInputOutputMultipleErrorMessage: () => getSparseReshapeInputOutputMultipleErrorMessage,
  getSparseReshapeMultipleNegativeOneOutputDimErrorMessage: () => getSparseReshapeMultipleNegativeOneOutputDimErrorMessage,
  getSparseReshapeNegativeOutputDimErrorMessage: () => getSparseReshapeNegativeOutputDimErrorMessage,
  getSparseSegmentReductionIndicesOutOfRangeErrorMessage: () => getSparseSegmentReductionIndicesOutOfRangeErrorMessage,
  getSparseSegmentReductionNegativeSegmentIdsErrorMessage: () => getSparseSegmentReductionNegativeSegmentIdsErrorMessage,
  getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage: () => getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage,
  getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage: () => getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage,
  getUndoAxesPermutation: () => getUndoAxesPermutation,
  isIdentityPermutation: () => isIdentityPermutation,
  log: () => log,
  mergeRealAndImagArrays: () => mergeRealAndImagArrays,
  prepareAndValidate: () => prepareAndValidate,
  prepareSplitSize: () => prepareSplitSize,
  segment_util: () => segment_util_exports,
  shouldFuse: () => shouldFuse,
  slice_util: () => slice_util_exports,
  splitRealAndImagArrays: () => splitRealAndImagArrays,
  tupleValuesAreOne: () => tupleValuesAreOne,
  upcastType: () => upcastType,
  validateInput: () => validateInput,
  validateUpdateShape: () => validateUpdateShape,
  warn: () => warn
});

// node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js
function assertParamsConsistent(shapes, axis) {
  const rank = shapes[0].length;
  shapes.forEach((shape, i) => {
    assert(shape.length === rank, () => `Error in concat${rank}D: rank of tensors[${i}] must be the same as the rank of the rest (${rank})`);
  });
  assert(axis >= 0 && axis < rank, () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);
  const firstShape = shapes[0];
  shapes.forEach((shape, i) => {
    for (let r = 0; r < rank; r++) {
      assert(r === axis || shape[r] === firstShape[r], () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) does not match the shape of the rest (${firstShape}) along the non-concatenated axis ${i}.`);
    }
  });
}
function computeOutShape2(shapes, axis) {
  const outputShape = shapes[0].slice();
  for (let i = 1; i < shapes.length; i++) {
    outputShape[axis] += shapes[i][axis];
  }
  return outputShape;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js
var PARALLELIZE_THRESHOLD = 30;
function computeOptimalWindowSize(inSize) {
  if (inSize <= PARALLELIZE_THRESHOLD) {
    return inSize;
  }
  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));
}

// node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js
function getImageCenter(center, imageHeight, imageWidth) {
  const centerX = imageWidth * (typeof center === "number" ? center : center[0]);
  const centerY = imageHeight * (typeof center === "number" ? center : center[1]);
  return [centerX, centerY];
}

// node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js
function getReshaped(inputShape, blockShape, prod, batchToSpace = true) {
  let reshaped = [];
  if (batchToSpace) {
    reshaped = reshaped.concat(blockShape.slice(0));
    reshaped.push(inputShape[0] / prod);
    reshaped = reshaped.concat(inputShape.slice(1));
  } else {
    reshaped = reshaped.concat(inputShape[0]);
    const spatialLength = blockShape.length;
    for (let i = 0; i < spatialLength; ++i) {
      reshaped = reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);
    }
    reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));
  }
  return reshaped;
}
function getPermuted(reshapedRank, blockShapeRank, batchToSpace = true) {
  const permuted = [];
  if (batchToSpace) {
    permuted.push(blockShapeRank);
    for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {
      if (i <= 2 * blockShapeRank) {
        permuted.push(i);
        permuted.push(i - (blockShapeRank + 1));
      } else {
        permuted.push(i);
      }
    }
  } else {
    const permutedBeforeBatch = [];
    const permutedAfterBatch = [];
    for (let i = 1; i < reshapedRank; ++i) {
      if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {
        permutedAfterBatch.push(i);
      } else {
        permutedBeforeBatch.push(i);
      }
    }
    permuted.push(...permutedBeforeBatch);
    permuted.push(0);
    permuted.push(...permutedAfterBatch);
  }
  return permuted;
}
function getReshapedPermuted(inputShape, blockShape, prod, batchToSpace = true) {
  const reshapedPermuted = [];
  if (batchToSpace) {
    reshapedPermuted.push(inputShape[0] / prod);
  } else {
    reshapedPermuted.push(inputShape[0] * prod);
  }
  for (let i = 1; i < inputShape.length; ++i) {
    if (i <= blockShape.length) {
      if (batchToSpace) {
        reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);
      } else {
        reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);
      }
    } else {
      reshapedPermuted.push(inputShape[i]);
    }
  }
  return reshapedPermuted;
}
function getSliceBeginCoords(crops, blockShape) {
  const sliceBeginCoords = [0];
  for (let i = 0; i < blockShape; ++i) {
    sliceBeginCoords.push(crops[i][0]);
  }
  return sliceBeginCoords;
}
function getSliceSize(uncroppedShape, crops, blockShape) {
  const sliceSize = uncroppedShape.slice(0, 1);
  for (let i = 0; i < blockShape; ++i) {
    sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);
  }
  return sliceSize;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js
var SELU_SCALEALPHA = 1.7580993408473768;
var SELU_SCALE = 1.0507009873554805;

// node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js
var ERF_P = 0.3275911;
var ERF_A1 = 0.254829592;
var ERF_A2 = -0.284496736;
var ERF_A3 = 1.421413741;
var ERF_A4 = -1.453152027;
var ERF_A5 = 1.061405429;

// node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js
function mergeRealAndImagArrays(real3, imag3) {
  if (real3.length !== imag3.length) {
    throw new Error(`Cannot merge real and imag arrays of different lengths. real:${real3.length}, imag: ${imag3.length}.`);
  }
  const result = new Float32Array(real3.length * 2);
  for (let i = 0; i < result.length; i += 2) {
    result[i] = real3[i / 2];
    result[i + 1] = imag3[i / 2];
  }
  return result;
}
function splitRealAndImagArrays(complex3) {
  const real3 = new Float32Array(complex3.length / 2);
  const imag3 = new Float32Array(complex3.length / 2);
  for (let i = 0; i < complex3.length; i += 2) {
    real3[i / 2] = complex3[i];
    imag3[i / 2] = complex3[i + 1];
  }
  return { real: real3, imag: imag3 };
}
function complexWithEvenIndex(complex3) {
  const len = Math.ceil(complex3.length / 4);
  const real3 = new Float32Array(len);
  const imag3 = new Float32Array(len);
  for (let i = 0; i < complex3.length; i += 4) {
    real3[Math.floor(i / 4)] = complex3[i];
    imag3[Math.floor(i / 4)] = complex3[i + 1];
  }
  return { real: real3, imag: imag3 };
}
function complexWithOddIndex(complex3) {
  const len = Math.floor(complex3.length / 4);
  const real3 = new Float32Array(len);
  const imag3 = new Float32Array(len);
  for (let i = 2; i < complex3.length; i += 4) {
    real3[Math.floor(i / 4)] = complex3[i];
    imag3[Math.floor(i / 4)] = complex3[i + 1];
  }
  return { real: real3, imag: imag3 };
}
function getComplexWithIndex(complex3, index) {
  const real3 = complex3[index * 2];
  const imag3 = complex3[index * 2 + 1];
  return { real: real3, imag: imag3 };
}
function assignToTypedArray(data, real3, imag3, index) {
  data[index * 2] = real3;
  data[index * 2 + 1] = imag3;
}
function exponents(n, inverse) {
  const real3 = new Float32Array(n / 2);
  const imag3 = new Float32Array(n / 2);
  for (let i = 0; i < Math.ceil(n / 2); i++) {
    const x = (inverse ? 2 : -2) * Math.PI * (i / n);
    real3[i] = Math.cos(x);
    imag3[i] = Math.sin(x);
  }
  return { real: real3, imag: imag3 };
}
function exponent(k, n, inverse) {
  const x = (inverse ? 2 : -2) * Math.PI * (k / n);
  const real3 = Math.cos(x);
  const imag3 = Math.sin(x);
  return { real: real3, imag: imag3 };
}

// node_modules/@tensorflow/tfjs-core/dist/backends/einsum_util.js
var ARROW = "->";
var ARROW_REGEX = /->/g;
var COMMA = ",";
var ELLIPSIS = "...";
function decodeEinsumEquation(equation, numTensors) {
  equation = equation.replace(/\s/g, "");
  const numArrows = (equation.length - equation.replace(ARROW_REGEX, "").length) / ARROW.length;
  if (numArrows < 1) {
    throw new Error("Equations without an arrow are not supported.");
  } else if (numArrows > 1) {
    throw new Error(`Equation must contain exactly one arrow ("${ARROW}").`);
  }
  const [inputString, outputString] = equation.split(ARROW);
  assert(inputString.indexOf(ELLIPSIS) === -1, () => `The ellipsis notation ("${ELLIPSIS}") is not supported yet.`);
  const inputTerms = inputString.split(COMMA);
  const numInputs = inputTerms.length;
  if (numTensors !== numInputs) {
    throw new Error(`Expected ${numInputs} input tensors, received ${numTensors}`);
  }
  if (numInputs > 2) {
    throw new Error("Support for more than 2 input tensors is not implemented yet.");
  }
  const allDims = [];
  for (let i = 0; i < outputString.length; ++i) {
    const dimName = outputString[i];
    if (!inputTerms.some((inputTerm) => inputTerm.indexOf(dimName) !== -1)) {
      throw new Error(`Output subscripts contain the label ${dimName} not present in the input subscripts.`);
    }
    if (allDims.indexOf(dimName) === -1) {
      allDims.push(dimName);
    }
  }
  for (let i = 0; i < inputString.length; ++i) {
    const dimName = inputString[i];
    if (allDims.indexOf(dimName) === -1 && dimName !== COMMA) {
      allDims.push(dimName);
    }
  }
  const idDims = new Array(inputTerms.length);
  for (let i = 0; i < numInputs; ++i) {
    if (new Set(inputTerms[i].split("")).size !== inputTerms[i].length) {
      throw new Error(`Found duplicate axes in input component ${inputTerms[i]}. Support for duplicate axes in input is not implemented yet.`);
    }
    idDims[i] = [];
    for (let j = 0; j < inputTerms[i].length; ++j) {
      idDims[i].push(allDims.indexOf(inputTerms[i][j]));
    }
  }
  const numDims = allDims.length;
  const numOutDims = outputString.length;
  const summedDims = [];
  for (let i = numOutDims; i < numDims; ++i) {
    summedDims.push(i);
  }
  return { allDims, summedDims, idDims };
}
function getEinsumPermutation(nDims, idDims) {
  let permutationIndices = new Array(nDims);
  permutationIndices.fill(-1);
  for (let i = 0; i < idDims.length; ++i) {
    permutationIndices[idDims[i]] = i;
  }
  const expandDims = [];
  for (let i = 0; i < nDims; ++i) {
    if (permutationIndices[i] === -1) {
      expandDims.push(i);
    }
  }
  permutationIndices = permutationIndices.filter((d) => d !== -1);
  return { permutationIndices, expandDims };
}
function checkEinsumDimSizes(nDims, idDims, tensors) {
  const dimSizes = new Array(nDims);
  for (let i = 0; i < tensors.length; ++i) {
    const shape = tensors[i].shape;
    for (let j = 0; j < idDims[i].length; ++j) {
      if (dimSizes[idDims[i][j]] === void 0) {
        dimSizes[idDims[i][j]] = shape[j];
      } else {
        assert(dimSizes[idDims[i][j]] === shape[j], () => `Expected dimension ${dimSizes[idDims[i][j]]} at axis ${j} of input shaped ${JSON.stringify(shape)}, but got dimension ${shape[j]}`);
      }
    }
  }
}
function getEinsumComputePath(summedDims, idDims) {
  const path = summedDims;
  const steps = [];
  let nSteps = 0;
  if (summedDims.length === 0) {
    path.push(-1);
  }
  nSteps = summedDims.length + 1;
  for (let i = 0; i < nSteps; ++i) {
    steps.push([]);
  }
  const computedTermIndices = [];
  for (let i = 0; i < path.length; ++i) {
    const summedDim = path[i];
    const termIndices = findTermsWithDim(idDims, summedDim);
    for (const termIndex of termIndices) {
      if (computedTermIndices.indexOf(termIndex) === -1) {
        steps[i].push(termIndex);
        computedTermIndices.push(termIndex);
      }
    }
  }
  return { path, steps };
}
function isIdentityPermutation(perm) {
  return perm.every((dim, index) => dim === index);
}
function findTermsWithDim(idDims, dim) {
  const termIndices = [];
  for (let i = 0; i < idDims.length; ++i) {
    if (idDims[i].length === 0 || idDims[i].indexOf(dim) !== -1 || dim === -1) {
      termIndices.push(i);
    }
  }
  return termIndices;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js
function prepareSplitSize(x, numOrSizeSplits, axis = 0) {
  let splitSizes = [];
  if (typeof numOrSizeSplits === "number") {
    assert(x.shape[axis] % numOrSizeSplits === 0, () => "Number of splits must evenly divide the axis.");
    splitSizes = new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);
  } else {
    const numOfNegs = numOrSizeSplits.reduce((count, value) => {
      if (value === -1) {
        count += 1;
      }
      return count;
    }, 0);
    assert(numOfNegs <= 1, () => "There should be only one negative value in split array.");
    const negIndex = numOrSizeSplits.indexOf(-1);
    if (negIndex !== -1) {
      const total = numOrSizeSplits.reduce((a2, b2) => b2 > 0 ? a2 + b2 : a2);
      numOrSizeSplits[negIndex] = x.shape[axis] - total;
    }
    assert(x.shape[axis] === numOrSizeSplits.reduce((a2, b2) => a2 + b2), () => "The sum of sizes must match the size of the axis dimension.");
    splitSizes = numOrSizeSplits;
  }
  return splitSizes;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_fill_empty_rows_util.js
function getSparseFillEmptyRowsIndicesDenseShapeMismatch(indicesLength) {
  return `Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${indicesLength}`;
}
function getSparseFillEmptyRowsNegativeIndexErrorMessage(index, value) {
  return `indices(${index}, 0) is invalid: ${value} < 0`;
}
function getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(index, value, limit) {
  return `indices(${index}, 0) is invalid: ${value} >= ${limit}`;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_reshape_util.js
function getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(dim1, dim2) {
  return `only one output dimension may be -1, not both ${dim1} and ${dim2}`;
}
function getSparseReshapeNegativeOutputDimErrorMessage(dim, value) {
  return `size ${dim} must be non-negative, not ${value}`;
}
function getSparseReshapeEmptyTensorZeroOutputDimErrorMessage() {
  return "reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";
}
function getSparseReshapeInputOutputMultipleErrorMessage(inputShape, outputShape) {
  const inputSize = sizeFromShape(inputShape);
  const outputSize = sizeFromShape(outputShape);
  return `Input to reshape is a SparseTensor with ${inputSize}
  dense values, but the requested shape requires a multiple of ${outputSize}. inputShape=${inputShape} outputShape= ${outputShape}`;
}
function getSparseReshapeInputOutputMismatchErrorMessage(inputShape, outputShape) {
  const inputSize = sizeFromShape(inputShape);
  const outputSize = sizeFromShape(outputShape);
  return `Input to reshape is a tensor with ${inputSize} dense values, but the requested shape has ${outputSize}. inputShape=${inputShape} outputShape=${outputShape}`;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/sparse/sparse_segment_reduction_util.js
function getSparseSegmentReductionNegativeSegmentIdsErrorMessage() {
  return `segment ids must be >= 0`;
}
function getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage() {
  return `segment ids are not increasing`;
}
function getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(segmentId, outputRows) {
  return `Segment id ${segmentId} out of range [0, ${outputRows}), possibly because segmentIds input is not sorted.`;
}
function getSparseSegmentReductionIndicesOutOfRangeErrorMessage(index, indexValue, inputRows) {
  return `Bad: indices[${index}] == ${indexValue} out of range [0, ${inputRows})`;
}

// node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js
var segment_util_exports = {};
__export(segment_util_exports, {
  collectGatherOpShapeInfo: () => collectGatherOpShapeInfo,
  computeOutShape: () => computeOutShape3,
  segOpComputeOptimalWindowSize: () => segOpComputeOptimalWindowSize
});
function segOpComputeOptimalWindowSize(inSize, numSegments) {
  let done = false;
  let res;
  if (inSize <= PARALLELIZE_THRESHOLD) {
    res = inSize;
    done = true;
  } else {
    res = nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));
  }
  while (!done) {
    if (res > numSegments || res === inSize) {
      done = true;
    } else {
      res = nearestDivisor(inSize, res + 1);
    }
  }
  return res;
}
function computeOutShape3(aShape, axis, numSegments) {
  const outShape = [];
  const rank = aShape.length;
  for (let dim = 0; dim < rank; dim++) {
    if (dim !== axis) {
      outShape.push(aShape[dim]);
    } else {
      outShape.push(numSegments);
    }
  }
  return outShape;
}
function collectGatherOpShapeInfo(x, indices, axis, batchDims) {
  const indicesRank = indices.shape.length;
  const xRank = x.shape.length;
  if (batchDims !== 0) {
    if (batchDims < -indicesRank || batchDims > indicesRank) {
      throw new Error(`Expect batchDims in the range of [-${indicesRank}, ${indicesRank}], but got ${batchDims}`);
    }
  }
  if (batchDims < 0) {
    batchDims += indicesRank;
  }
  if (batchDims > xRank) {
    throw new Error(`batchDims (${batchDims}) must be less than rank(x) (
    ${xRank}).`);
  }
  if (axis < batchDims) {
    throw new Error(`batchDims (${batchDims}) must be less than or equal to axis (${axis}).`);
  }
  for (let i = 0; i < batchDims; ++i) {
    if (x.shape[i] !== indices.shape[i]) {
      throw new Error(`x.shape[${i}]: ${x.shape[i]} should be equal to indices.shape[${i}]: ${indices.shape[i]}.`);
    }
  }
  const dimSize = x.shape[axis];
  const outputShape = [];
  let batchSize = 1;
  let outerSize = 1;
  let sliceSize = 1;
  for (let i = 0; i < batchDims; ++i) {
    outputShape.push(x.shape[i]);
    batchSize *= x.shape[i];
  }
  for (let i = batchDims; i < axis; i++) {
    outputShape.push(x.shape[i]);
    outerSize *= x.shape[i];
  }
  for (let i = batchDims; i < indicesRank; i++) {
    outputShape.push(indices.shape[i]);
  }
  for (let i = axis + 1; i < xRank; i++) {
    outputShape.push(x.shape[i]);
    sliceSize *= x.shape[i];
  }
  return { batchSize, sliceSize, outerSize, dimSize, outputShape };
}

// node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js
function fromUint8ToStringArray(vals) {
  try {
    return vals.map((val) => decodeString(val));
  } catch (err) {
    throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);
  }
}
function fromStringArrayToUint8(strings) {
  return strings.map((s) => encodeString(s));
}

// node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js
var kernel_impls_exports = {};
__export(kernel_impls_exports, {
  nonMaxSuppressionV3Impl: () => nonMaxSuppressionV3Impl,
  nonMaxSuppressionV4Impl: () => nonMaxSuppressionV4Impl,
  nonMaxSuppressionV5Impl: () => nonMaxSuppressionV5Impl,
  whereImpl: () => whereImpl
});

// node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js
var PlatformBrowser = class {
  fetch(path, init) {
    return fetch(path, init);
  }
  now() {
    return performance.now();
  }
  encode(text, encoding) {
    if (encoding !== "utf-8" && encoding !== "utf8") {
      throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);
    }
    if (this.textEncoder == null) {
      this.textEncoder = new TextEncoder();
    }
    return this.textEncoder.encode(text);
  }
  decode(bytes, encoding) {
    return new TextDecoder(encoding).decode(bytes);
  }
};
if (env().get("IS_BROWSER")) {
  env().setPlatform("browser", new PlatformBrowser());
  try {
    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());
  } catch (err) {
  }
  try {
    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());
  } catch (err) {
  }
}

// node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js
var getNodeFetch = {
  importFetch: () => require_browser()
};
var systemFetch;
var PlatformNode = class {
  constructor() {
    this.util = require_util();
    this.textEncoder = new this.util.TextEncoder();
  }
  fetch(path, requestInits) {
    if (env().global.fetch != null) {
      return env().global.fetch(path, requestInits);
    }
    if (systemFetch == null) {
      systemFetch = getNodeFetch.importFetch();
    }
    return systemFetch(path, requestInits);
  }
  now() {
    const time = process.hrtime();
    return time[0] * 1e3 + time[1] / 1e6;
  }
  encode(text, encoding) {
    if (encoding !== "utf-8" && encoding !== "utf8") {
      throw new Error(`Node built-in encoder only supports utf-8, but got ${encoding}`);
    }
    return this.textEncoder.encode(text);
  }
  decode(bytes, encoding) {
    if (bytes.length === 0) {
      return "";
    }
    return new this.util.TextDecoder(encoding).decode(bytes);
  }
};
if (env().get("IS_NODE")) {
  env().setPlatform("node", new PlatformNode());
}

// node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js
getOrMakeEngine();
var opHandler2 = {
  buffer,
  cast,
  clone,
  print
};
setOpHandler(opHandler2);

// node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js
function assertNotComplex(tensor2, opName) {
  if (!Array.isArray(tensor2)) {
    tensor2 = [tensor2];
  }
  tensor2.forEach((t) => {
    if (t != null) {
      util_exports.assert(t.dtype !== "complex64", () => `${opName} does not support complex64 tensors in the CPU backend.`);
    }
  });
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/backend_cpu.js
var whereImpl2 = kernel_impls_exports.whereImpl;
var MathBackendCPU = class extends KernelBackend {
  constructor() {
    super();
    this.blockSize = 48;
    this.firstUse = true;
    this.data = new DataStorage(this, engine());
  }
  nextDataId() {
    return MathBackendCPU.nextDataId++;
  }
  write(values, shape, dtype) {
    if (this.firstUse) {
      this.firstUse = false;
      if (env().get("IS_NODE")) {
        backend_util_exports.warn("\n============================\nHi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================");
      }
    }
    const dataId = { id: this.nextDataId() };
    this.data.set(dataId, { values, dtype, refCount: 1 });
    return dataId;
  }
  makeTensorInfo(shape, dtype, values) {
    let outId;
    if (dtype === "string" && values != null && values.length > 0 && util_exports.isString(values[0])) {
      const encodedValues = values.map((d) => util_exports.encodeString(d));
      outId = this.write(encodedValues, shape, dtype);
    } else {
      outId = this.write(values, shape, dtype);
    }
    return { dataId: outId, shape, dtype };
  }
  refCount(dataId) {
    if (this.data.has(dataId)) {
      const tensorData = this.data.get(dataId);
      return tensorData.refCount;
    }
    return 0;
  }
  incRef(dataId) {
    const tensorData = this.data.get(dataId);
    tensorData.refCount++;
  }
  decRef(dataId) {
    if (this.data.has(dataId)) {
      const tensorData = this.data.get(dataId);
      tensorData.refCount--;
    }
  }
  move(dataId, values, shape, dtype, refCount) {
    this.data.set(dataId, { values, dtype, refCount });
  }
  numDataIds() {
    return this.data.numDataIds();
  }
  async read(dataId) {
    return this.readSync(dataId);
  }
  readSync(dataId) {
    const { dtype, complexTensorInfos } = this.data.get(dataId);
    if (dtype === "complex64") {
      const realValues = this.readSync(complexTensorInfos.real.dataId);
      const imagValues = this.readSync(complexTensorInfos.imag.dataId);
      return backend_util_exports.mergeRealAndImagArrays(realValues, imagValues);
    }
    return this.data.get(dataId).values;
  }
  bufferSync(t) {
    const data = this.readSync(t.dataId);
    let decodedData = data;
    if (t.dtype === "string") {
      try {
        decodedData = data.map((d) => util_exports.decodeString(d));
      } catch (_a) {
        throw new Error("Failed to decode encoded string bytes into utf-8");
      }
    }
    return buffer(t.shape, t.dtype, decodedData);
  }
  makeOutput(values, shape, dtype) {
    const dataId = this.write(values, shape, dtype);
    return engine().makeTensorFromDataId(dataId, shape, dtype, this);
  }
  disposeData(dataId, force = false) {
    if (this.data.has(dataId)) {
      this.data.get(dataId).refCount--;
      if (!force && this.data.get(dataId).refCount > 0) {
        return false;
      }
      const { complexTensorInfos } = this.data.get(dataId);
      if (complexTensorInfos != null) {
        this.disposeData(complexTensorInfos.real.dataId, true);
        this.disposeData(complexTensorInfos.imag.dataId, true);
      }
      this.data.delete(dataId);
    }
    return true;
  }
  disposeIntermediateTensorInfo(tensorInfo) {
    this.disposeData(tensorInfo.dataId);
  }
  async time(f) {
    const start = util_exports.now();
    f();
    const kernelMs = util_exports.now() - start;
    return { kernelMs };
  }
  memory() {
    return {
      unreliable: true,
      reasons: ["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]
    };
  }
  where(condition) {
    assertNotComplex([condition], "where");
    const condVals = this.readSync(condition.dataId);
    return whereImpl2(condition.shape, condVals);
  }
  dispose() {
  }
  floatPrecision() {
    return 32;
  }
  epsilon() {
    return super.epsilon();
  }
};
MathBackendCPU.nextDataId = 0;

// node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js
function createSimpleBinaryKernelImpl(op2) {
  return (aShape, bShape, aVals, bVals, dtype) => {
    const newShape = backend_util_exports.assertAndGetBroadcastShape(aShape, bShape);
    const resultRank = newShape.length;
    const resultStrides = util_exports.computeStrides(newShape);
    const resultSize = util_exports.sizeFromShape(newShape);
    const result = util_exports.getTypedArrayFromDType(dtype, resultSize);
    const aRank = aShape.length;
    const bRank = bShape.length;
    const aStrides = util_exports.computeStrides(aShape);
    const bStrides = util_exports.computeStrides(bShape);
    const aBroadcastDims = backend_util_exports.getBroadcastDims(aShape, newShape);
    const bBroadcastDims = backend_util_exports.getBroadcastDims(bShape, newShape);
    if (aBroadcastDims.length + bBroadcastDims.length === 0) {
      for (let i = 0; i < result.length; ++i) {
        result[i] = op2(aVals[i % aVals.length], bVals[i % bVals.length]);
      }
    } else {
      for (let i = 0; i < result.length; ++i) {
        const loc = util_exports.indexToLoc(i, resultRank, resultStrides);
        const aLoc = loc.slice(-aRank);
        aBroadcastDims.forEach((d) => aLoc[d] = 0);
        const aIndex = util_exports.locToIndex(aLoc, aRank, aStrides);
        const bLoc = loc.slice(-bRank);
        bBroadcastDims.forEach((d) => bLoc[d] = 0);
        const bIndex = util_exports.locToIndex(bLoc, bRank, bStrides);
        result[i] = op2(aVals[aIndex], bVals[bIndex]);
      }
    }
    return [result, newShape];
  };
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js
function complex2(args) {
  const { inputs, backend } = args;
  const { real: real3, imag: imag3 } = inputs;
  const realVals = backend.data.get(real3.dataId).values;
  const imagVals = backend.data.get(imag3.dataId).values;
  const complexInfo = backend.makeTensorInfo(real3.shape, "complex64");
  const complex3 = backend.data.get(complexInfo.dataId);
  complex3.complexTensorInfos = {
    real: backend.makeTensorInfo(real3.shape, "float32", realVals),
    imag: backend.makeTensorInfo(imag3.shape, "float32", imagVals)
  };
  return complexInfo;
}
var complexConfig = {
  kernelName: Complex,
  backendName: "cpu",
  kernelFunc: complex2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js
function zeros2(backend, shape, dtype = "float32") {
  if (dtype === "complex64") {
    const real3 = zeros2(backend, shape, "float32");
    const imag3 = zeros2(backend, shape, "float32");
    return complex2({ inputs: { real: real3, imag: imag3 }, backend });
  }
  const values = util_exports.makeZerosTypedArray(util_exports.sizeFromShape(shape), dtype);
  return backend.makeTensorInfo(shape, dtype, values);
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js
function identity(args) {
  const { inputs, backend } = args;
  const { x } = inputs;
  backend.incRef(x.dataId);
  return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js
function real2(args) {
  const { inputs, backend } = args;
  const { input } = inputs;
  const real3 = backend.data.get(input.dataId).complexTensorInfos.real;
  const realVal = backend.data.get(real3.dataId).values;
  return backend.makeTensorInfo(real3.shape, real3.dtype, realVal);
}
var realConfig = {
  kernelName: Real,
  backendName: "cpu",
  kernelFunc: real2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js
function cast2(args) {
  const { inputs, backend, attrs } = args;
  const { x } = inputs;
  const { dtype } = attrs;
  if (dtype === "complex64") {
    if (x.dtype === "complex64") {
      return identity({ inputs: { x }, backend });
    }
    const zerosTensorInfo = zeros2(backend, x.shape, x.dtype);
    const floatX = cast2({ inputs: { x }, backend, attrs: { dtype: "float32" } });
    const result = complex2({ inputs: { real: floatX, imag: zerosTensorInfo }, backend });
    backend.disposeIntermediateTensorInfo(zerosTensorInfo);
    backend.disposeIntermediateTensorInfo(floatX);
    return result;
  }
  if (x.dtype === "complex64") {
    const realPart = real2({ inputs: { input: x }, backend });
    const result = cast2({ inputs: { x: realPart }, backend, attrs: { dtype } });
    backend.disposeIntermediateTensorInfo(realPart);
    return result;
  }
  if (!util_exports.hasEncodingLoss(x.dtype, dtype)) {
    const result = identity({ inputs: { x }, backend });
    return { dataId: result.dataId, shape: result.shape, dtype };
  }
  if (dtype === "int32") {
    const values = backend.data.get(x.dataId).values;
    const resultValues = Int32Array.from(values);
    return backend.makeTensorInfo(x.shape, "int32", resultValues);
  }
  if (dtype === "bool") {
    const xVals = backend.data.get(x.dataId).values;
    const zero = util_exports.toTypedArray([0], x.dtype);
    const [resultData, resultShape] = createSimpleBinaryKernelImpl((a2, b2) => a2 !== b2 ? 1 : 0)(x.shape, [], xVals, zero, "bool");
    return backend.makeTensorInfo(resultShape, "bool", resultData);
  }
  throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);
}
var castConfig = {
  kernelName: Cast,
  backendName: "cpu",
  kernelFunc: cast2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js
function binaryKernelFunc(name, simpleImpl, complexImpl, dtype) {
  if (complexImpl == null) {
    return ({ inputs, backend }) => {
      const { a: a2, b: b2 } = inputs;
      const cpuBackend = backend;
      assertNotComplex([a2, b2], name);
      const aVals = cpuBackend.data.get(a2.dataId).values;
      const bVals = cpuBackend.data.get(b2.dataId).values;
      const decodedAVals = a2.dtype === "string" ? backend_util_exports.fromUint8ToStringArray(aVals) : aVals;
      const decodedBVals = a2.dtype === "string" ? backend_util_exports.fromUint8ToStringArray(bVals) : bVals;
      const $dtype = dtype || a2.dtype;
      const [resultData, resultShape] = simpleImpl(a2.shape, b2.shape, decodedAVals, decodedBVals, $dtype);
      return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);
    };
  }
  return ({ inputs, backend }) => {
    const { a: a2, b: b2 } = inputs;
    const cpuBackend = backend;
    if (a2.dtype === "complex64" || b2.dtype === "complex64") {
      const $aComplex = cast2({ inputs: { x: a2 }, backend: cpuBackend, attrs: { dtype: "complex64" } });
      const $aComplexVals = cpuBackend.data.get($aComplex.dataId);
      const aReal = $aComplexVals.complexTensorInfos.real;
      const aImag = $aComplexVals.complexTensorInfos.imag;
      const aRealVals = cpuBackend.data.get(aReal.dataId).values;
      const aImagVals = cpuBackend.data.get(aImag.dataId).values;
      const $bComplex = cast2({ inputs: { x: b2 }, backend: cpuBackend, attrs: { dtype: "complex64" } });
      const $bComplexVals = cpuBackend.data.get($bComplex.dataId);
      const bReal = $bComplexVals.complexTensorInfos.real;
      const bImag = $bComplexVals.complexTensorInfos.imag;
      const bRealVals = cpuBackend.data.get(bReal.dataId).values;
      const bImagVals = cpuBackend.data.get(bImag.dataId).values;
      const [resultRealData, resultImagData, resultShape] = complexImpl(a2.shape, b2.shape, aRealVals, aImagVals, bRealVals, bImagVals);
      const resultReal = cpuBackend.makeTensorInfo(resultShape, "float32", resultRealData);
      const resultImag = cpuBackend.makeTensorInfo(resultShape, "float32", resultImagData);
      const result = complex2({ inputs: { real: resultReal, imag: resultImag }, backend: cpuBackend });
      cpuBackend.disposeIntermediateTensorInfo($aComplex);
      cpuBackend.disposeIntermediateTensorInfo($bComplex);
      cpuBackend.disposeIntermediateTensorInfo(resultReal);
      cpuBackend.disposeIntermediateTensorInfo(resultImag);
      return result;
    } else {
      const aVals = cpuBackend.data.get(a2.dataId).values;
      const bVals = cpuBackend.data.get(b2.dataId).values;
      const $dtype = dtype || a2.dtype;
      const [resultData, resultShape] = simpleImpl(a2.shape, b2.shape, aVals, bVals, $dtype);
      return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);
    }
  };
}
function createComplexBinaryKernelImpl(op2) {
  return (aShape, bShape, aRealVals, aImagVals, bRealVals, bImagVals) => {
    const resultShape = backend_util_exports.assertAndGetBroadcastShape(aShape, bShape);
    const resultSize = util_exports.sizeFromShape(resultShape);
    const resultRank = resultShape.length;
    const resultStrides = util_exports.computeStrides(resultShape);
    const resultRealVals = util_exports.getTypedArrayFromDType("float32", resultSize);
    const resultImagVals = util_exports.getTypedArrayFromDType("float32", resultSize);
    const aBroadcastDims = backend_util_exports.getBroadcastDims(aShape, resultShape);
    const bBroadcastDims = backend_util_exports.getBroadcastDims(bShape, resultShape);
    const aVals = backend_util_exports.mergeRealAndImagArrays(aRealVals, aImagVals);
    const bVals = backend_util_exports.mergeRealAndImagArrays(bRealVals, bImagVals);
    const aRank = aShape.length;
    const aStrides = util_exports.computeStrides(aShape);
    const bRank = bShape.length;
    const bStrides = util_exports.computeStrides(bShape);
    if (aBroadcastDims.length + bBroadcastDims.length === 0) {
      for (let i = 0; i < resultRealVals.length; i++) {
        const aIdx = i % aVals.length;
        const bIdx = i % bVals.length;
        const result = op2(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2], bVals[bIdx * 2 + 1]);
        resultRealVals[i] = result.real;
        resultImagVals[i] = result.imag;
      }
    } else {
      for (let i = 0; i < resultRealVals.length; i++) {
        const loc = util_exports.indexToLoc(i, resultRank, resultStrides);
        const aLoc = loc.slice(-aRank);
        aBroadcastDims.forEach((d) => aLoc[d] = 0);
        const aIndex = util_exports.locToIndex(aLoc, aRank, aStrides);
        const bLoc = loc.slice(-bRank);
        bBroadcastDims.forEach((d) => bLoc[d] = 0);
        const bIndex = util_exports.locToIndex(bLoc, bRank, bStrides);
        const opResult = op2(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2], bVals[bIndex * 2 + 1]);
        resultRealVals[i] = opResult.real;
        resultImagVals[i] = opResult.imag;
      }
    }
    return [resultRealVals, resultImagVals, resultShape];
  };
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js
function unaryKernelFunc(name, op2, dtype) {
  return ({ inputs, attrs, backend }) => {
    const { x } = inputs;
    assertNotComplex(x, name);
    if (x.dtype === "string" || dtype === "string") {
      throw new Error("unaryKernelFunc does not support string input/output");
    }
    const cpuBackend = backend;
    const values = cpuBackend.data.get(x.dataId).values;
    const xSize = util_exports.sizeFromShape(x.shape);
    const $dtype = dtype || x.dtype;
    const newValues = util_exports.getArrayFromDType($dtype, xSize);
    for (let i = 0; i < xSize; ++i) {
      newValues[i] = op2(values[i], attrs);
    }
    return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);
  };
}

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js
var multiplyImpl = createSimpleBinaryKernelImpl((aValue, bValue) => aValue * bValue);
var multiplyComplexImpl = createComplexBinaryKernelImpl((aReal, aImag, bReal, bImag) => {
  return {
    real: aReal * bReal - aImag * bImag,
    imag: aReal * bImag + aImag * bReal
  };
});
var multiply = binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);
var multiplyConfig = {
  kernelName: Multiply,
  backendName: "cpu",
  kernelFunc: multiply
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/base.js
registerBackend("cpu", () => new MathBackendCPU(), 1);

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js
var complexAbs = (args) => {
  const { x } = args.inputs;
  const cpuBackend = args.backend;
  const resultValues = new Float32Array(util_exports.sizeFromShape(x.shape));
  const complexVals = cpuBackend.data.get(x.dataId);
  const real3 = complexVals.complexTensorInfos.real;
  const imag3 = complexVals.complexTensorInfos.imag;
  const realVals = cpuBackend.data.get(real3.dataId).values;
  const imagVals = cpuBackend.data.get(imag3.dataId).values;
  for (let i = 0; i < realVals.length; i++) {
    const real4 = realVals[i];
    const imag4 = imagVals[i];
    resultValues[i] = Math.hypot(real4, imag4);
  }
  return cpuBackend.makeOutput(resultValues, x.shape, "float32");
};
var complexAbsConfig = {
  kernelName: ComplexAbs,
  backendName: "cpu",
  kernelFunc: complexAbs
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Reshape.js
function reshape2(args) {
  const { inputs, backend, attrs } = args;
  const { x } = inputs;
  const { shape } = attrs;
  const xSize = util_exports.sizeFromShape(x.shape);
  const $shape = util_exports.inferFromImplicitShape(shape, xSize);
  const $xSize = util_exports.sizeFromShape($shape);
  util_exports.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old shape (${x.shape}) has ${xSize} elements. The new shape and old shape must have the same number of elements.`);
  backend.incRef(x.dataId);
  const xData = backend.data.get(x.dataId);
  if (xData.complexTensorInfos != null) {
    const real3 = xData.complexTensorInfos.real;
    const imag3 = xData.complexTensorInfos.imag;
    real3.shape = $shape;
    imag3.shape = $shape;
  }
  return { dataId: x.dataId, shape: $shape, dtype: x.dtype };
}
var reshapeConfig = {
  kernelName: Reshape,
  backendName: "cpu",
  kernelFunc: reshape2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Imag.js
function imag2(args) {
  const { inputs, backend } = args;
  const { input } = inputs;
  const imag3 = backend.data.get(input.dataId).complexTensorInfos.imag;
  const imagVal = backend.data.get(imag3.dataId).values;
  return backend.makeTensorInfo(imag3.shape, imag3.dtype, imagVal);
}
var imagConfig = {
  kernelName: Imag,
  backendName: "cpu",
  kernelFunc: imag2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Atan2.js
var atan2Impl = createSimpleBinaryKernelImpl((aValue, bValue) => Math.atan2(aValue, bValue));
var atan22 = binaryKernelFunc(Atan2, atan2Impl);
var atan2Config = {
  kernelName: Atan2,
  backendName: "cpu",
  kernelFunc: atan22
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cos.js
var cos2 = unaryKernelFunc(Cos, (xi) => Math.cos(xi));
var cosConfig = {
  kernelName: Cos,
  backendName: "cpu",
  kernelFunc: cos2
};

// node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sin.js
var sin2 = unaryKernelFunc(Sin, (xi) => Math.sin(xi));
var sinConfig = {
  kernelName: Sin,
  backendName: "cpu",
  kernelFunc: sin2
};

// custom_tfjs/custom_tfjs.js
registerKernel(complexConfig);
registerKernel(complexAbsConfig);
registerKernel(reshapeConfig);
registerKernel(realConfig);
registerKernel(imagConfig);
registerKernel(atan2Config);
registerKernel(multiplyConfig);
registerKernel(cosConfig);
registerKernel(sinConfig);
registerKernel(castConfig);

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_model.js
var tfliteWebAPIClient = __toESM(require_tflite_web_api_client());
var TFHUB_SEARCH_PARAM = "?lite-format=tflite";
var TFLiteModel = class {
  constructor(modelRunner) {
    this.modelRunner = modelRunner;
  }
  get inputs() {
    const modelInputs = this.modelRunner.getInputs();
    return this.convertTFLiteTensorInfos(modelInputs);
  }
  get outputs() {
    const modelOutputs = this.modelRunner.getOutputs();
    return this.convertTFLiteTensorInfos(modelOutputs);
  }
  predict(inputs, config) {
    const modelInputs = this.modelRunner.getInputs();
    const modelOutputs = this.modelRunner.getOutputs();
    if (inputs instanceof Tensor || Array.isArray(inputs)) {
      let inputTensors;
      if (inputs instanceof Tensor) {
        inputTensors = [inputs];
      } else {
        inputTensors = inputs;
      }
      if (modelInputs.length !== inputTensors.length) {
        throw new Error(`The size of TFLite model inputs (${modelInputs.length}) does not match the size of the input tensors (${inputTensors.length})`);
      }
      for (let i = 0; i < modelInputs.length; i++) {
        this.setModelInputFromTensor(modelInputs[i], inputTensors[i]);
      }
    } else {
      const inputTensorNames = Object.keys(inputs);
      const modelInputMap = {};
      modelInputs.forEach((modelInput) => {
        modelInputMap[modelInput.name] = modelInput;
      });
      const modelInputNames = Object.keys(modelInputMap);
      this.checkMapInputs(inputTensorNames, modelInputNames);
      for (const name of inputTensorNames) {
        this.setModelInputFromTensor(modelInputMap[name], inputs[name]);
      }
    }
    const success = this.modelRunner.infer();
    if (!success) {
      throw new Error("Failed running inference");
    }
    const outputTensors = {};
    for (let i = 0; i < modelOutputs.length; i++) {
      const modelOutput = modelOutputs[i];
      let data = modelOutput.data();
      switch (modelOutput.dataType) {
        case "int8":
        case "int16":
        case "uint32":
          data = Int32Array.from(data);
          break;
        case "float64":
          console.warn(`WARNING: converting output tensor from 'float64' to 'float32'`);
          data = Float32Array.from(data);
          break;
        default:
          break;
      }
      const outputTensor = tensor(data, this.getShapeFromTFLiteTensorInfo(modelOutput));
      outputTensors[modelOutput.name] = outputTensor;
    }
    const names = Object.keys(outputTensors);
    return names.length === 1 ? outputTensors[names[0]] : outputTensors;
  }
  execute(inputs, outputs) {
    throw new Error("execute() of TFLiteModel is not supported yet.");
  }
  getProfilingResults() {
    return this.modelRunner.getProfilingResults();
  }
  getProfilingSummary() {
    return this.modelRunner.getProfilingSummary();
  }
  setModelInputFromTensor(modelInput, tensor2) {
    if (tensor2.dtype === "string" || tensor2.dtype === "complex64") {
      throw new Error(`Data type '${tensor2.dtype}' not supported.`);
    }
    const modelInputShape = modelInput.shape.split(",").map((dim) => Number(dim));
    if (!tensor2.shape.every((dim, index) => modelInputShape[index] === -1 || modelInputShape[index] === dim)) {
      throw new Error(`Input tensor shape mismatch: expect '${modelInput.shape}', got '${tensor2.shape.join(",")}'.`);
    }
    switch (modelInput.dataType) {
      case "bool":
      case "int8":
      case "uint8":
      case "int16":
      case "uint32":
      case "int32":
        if (tensor2.dtype === "float32") {
          throw this.getDataTypeMismatchError(modelInput.dataType, tensor2.dtype);
        } else if (modelInput.dataType !== tensor2.dtype) {
          console.warn(`WARNING: converting '${tensor2.dtype}' to '${modelInput.dataType}'`);
        }
        break;
      case "float32":
      case "float64":
        if (modelInput.dataType !== tensor2.dtype) {
          console.warn(`WARNING: converting '${tensor2.dtype}' to '${modelInput.dataType}'`);
        }
        break;
      default:
        break;
    }
    const modelInputBuffer = modelInput.data();
    switch (modelInput.dataType) {
      case "int8":
        modelInputBuffer.set(Int8Array.from(tensor2.dataSync()));
        break;
      case "uint8":
      case "bool":
        modelInputBuffer.set(Uint8Array.from(tensor2.dataSync()));
        break;
      case "int16":
        modelInputBuffer.set(Int16Array.from(tensor2.dataSync()));
        break;
      case "int32":
        modelInputBuffer.set(Int32Array.from(tensor2.dataSync()));
        break;
      case "uint32":
        modelInputBuffer.set(Uint32Array.from(tensor2.dataSync()));
        break;
      case "float32":
        modelInputBuffer.set(Float32Array.from(tensor2.dataSync()));
        break;
      case "float64":
        modelInputBuffer.set(Float64Array.from(tensor2.dataSync()));
        break;
      default:
        break;
    }
  }
  convertTFLiteTensorInfos(infos) {
    return infos.map((info) => {
      const dtype = getDTypeFromTFLiteType(info.dataType);
      return {
        name: info.name,
        shape: this.getShapeFromTFLiteTensorInfo(info),
        dtype
      };
    });
  }
  checkMapInputs(inputTensorNames, modelInputNames) {
    const notInModel = inputTensorNames.filter((name) => !modelInputNames.includes(name));
    const notInInput = modelInputNames.filter((name) => !inputTensorNames.includes(name));
    if (notInModel.length === 0 && notInInput.length === 0) {
      return;
    }
    const msgParts = ["The model input names don't match the model input names."];
    if (notInModel.length > 0) {
      msgParts.push(`Names in input but missing in model: [${notInModel}].`);
    }
    if (notInInput.length > 0) {
      msgParts.push(`Names in model but missing in inputs: [${notInInput}].`);
    }
    throw new Error(msgParts.join(" "));
  }
  getShapeFromTFLiteTensorInfo(info) {
    return info.shape.split(",").map((s) => Number(s));
  }
  getDataTypeMismatchError(expected, got) {
    return new Error(`Data type mismatch: input tensor expects '${expected}', got '${got}'`);
  }
};
async function loadTFLiteModel(model, options) {
  if (typeof model === "string" && model.includes("tfhub.dev") && model.includes("lite-model") && !model.endsWith(TFHUB_SEARCH_PARAM)) {
    model = `${model}${TFHUB_SEARCH_PARAM}`;
  }
  const tfliteModelRunner = await tfliteWebAPIClient.tfweb.TFLiteWebModelRunner.create(model, options);
  return new TFLiteModel(tfliteModelRunner);
}
function getDTypeFromTFLiteType(tfliteType) {
  let dtype;
  switch (tfliteType) {
    case "float32":
    case "float64":
      dtype = "float32";
      break;
    case "int8":
    case "uint8":
    case "int16":
    case "int32":
    case "uint32":
      dtype = "int32";
      break;
    case "bool":
      dtype = "bool";
      break;
    default:
      break;
  }
  return dtype;
}

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/image_classifier.js
var tfliteWebAPIClient3 = __toESM(require_tflite_web_api_client());

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/common.js
var tfliteWebAPIClient2 = __toESM(require_tflite_web_api_client());
var setWasmPath = tfliteWebAPIClient2.tfweb.tflite_web_api.setWasmPath;
var getWasmFeatures = tfliteWebAPIClient2.tfweb.tflite_web_api.getWasmFeatures;

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/image_segmenter.js
var tfliteWebAPIClient4 = __toESM(require_tflite_web_api_client());
var OutputType;
(function(OutputType2) {
  OutputType2[OutputType2["CATEGORY_MASK"] = 1] = "CATEGORY_MASK";
  OutputType2[OutputType2["CONFIDENCE_MASK"] = 2] = "CONFIDENCE_MASK";
  OutputType2[OutputType2["UNSPECIFIED"] = 0] = "UNSPECIFIED";
})(OutputType || (OutputType = {}));

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/object_detector.js
var tfliteWebAPIClient5 = __toESM(require_tflite_web_api_client());

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/nl_classifier.js
var tfliteWebAPIClient6 = __toESM(require_tflite_web_api_client());

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/bert_nl_classifier.js
var tfliteWebAPIClient7 = __toESM(require_tflite_web_api_client());

// node_modules/@tensorflow/tfjs-tflite/dist/tflite_task_library_client/bert_qa.js
var tfliteWebAPIClient8 = __toESM(require_tflite_web_api_client());

// src/setup.ts
var setup = async (tfliteWasmPath) => {
  setBackend("cpu");
  setWasmPath(tfliteWasmPath);
  await ready();
};

// src/constants.ts
var blockLen = 512;
var blockShift = 128;
var sampleRate = 16e3;

// src/fn.ts
import FFT from "fft.js";
var angle = (complexes) => tidy(() => {
  const reals = squeeze(real(complexes));
  const imags = squeeze(imag(complexes));
  return atan2(imags, reals);
});
var imagExp = (x) => tidy(() => {
  const real3 = cos(x);
  const imag3 = sin(x);
  return complex(real3, imag3);
});
var fft = new FFT(blockLen);
var rfft = (inputArr) => {
  const outputArr = fft.createComplexArray();
  fft.realTransform(outputArr, inputArr);
  const resultLen = Math.floor(inputArr.length / 2) + 1;
  const realArr = new Float32Array(resultLen);
  const imagArr = new Float32Array(resultLen);
  for (let i = 0; i < resultLen * 2; i += 2) {
    realArr[i / 2] = outputArr[i];
    imagArr[i / 2] = outputArr[i + 1];
  }
  return complex(realArr, imagArr);
};
var irfft = (input) => {
  const inputArr = tidy(() => squeeze(input)).arraySync();
  fft.completeSpectrum(inputArr);
  const outputArr = fft.createComplexArray();
  fft.inverseTransform(outputArr, inputArr);
  const outputReal = fft.fromComplexArray(outputArr, void 0);
  return tensor1d(outputReal);
};
var addHead = (a2, b2) => {
  for (let i = 0; i < b2.length; i++) {
    a2[i] += b2[i];
  }
};

// src/process.ts
var createProcess = (model13, model23) => {
  const inputDetails1 = model13.inputs;
  const outputDetails1 = model13.outputs;
  const inputDetails2 = model23.inputs;
  const outputDetails2 = model23.outputs;
  let states1 = zeros(inputDetails1[0].shape, "float32");
  let states2 = zeros(inputDetails2[1].shape, "float32");
  const inBuffer = new Float32Array(blockLen);
  const outBuffer = new Float32Array(blockLen);
  return (input, output) => {
    if (input.length !== blockShift) {
      throw new Error(`the length of input must be ${blockShift}.`);
    }
    if (output.length !== blockShift) {
      throw new Error(`the length of output must be ${blockShift}.`);
    }
    inBuffer.copyWithin(0, blockShift);
    inBuffer.set(input, inBuffer.length - blockShift);
    const inBlockFft = rfft(inBuffer);
    const inMag = tidy(() => reshape(abs(inBlockFft), [1, 1, -1]));
    const inPhase = angle(inBlockFft);
    inBlockFft.dispose();
    const res1 = model13.predict({
      [inputDetails1[0].name]: states1,
      [inputDetails1[1].name]: inMag
    });
    states1.dispose();
    const outMask = res1[outputDetails1[0].name];
    states1 = tensor(res1[outputDetails1[1].name].arraySync());
    const estimatedComplex = tidy(() => mul(mul(inMag, outMask), imagExp(inPhase)));
    inMag.dispose();
    outMask.dispose();
    inPhase.dispose();
    const estimatedBlockTemp = irfft(estimatedComplex);
    estimatedComplex.dispose();
    const estimatedBlock = tidy(() => reshape(estimatedBlockTemp, [1, 1, -1]));
    estimatedBlockTemp.dispose();
    const res2 = model23.predict({
      [inputDetails2[1].name]: states2,
      [inputDetails2[0].name]: estimatedBlock
    });
    states2.dispose();
    estimatedBlock.dispose();
    const outBlock = res2[outputDetails2[1].name];
    states2 = tensor(res2[outputDetails2[0].name].arraySync());
    outBuffer.copyWithin(0, blockShift);
    outBuffer.fill(0, -blockShift);
    addHead(outBuffer, outBlock.dataSync());
    outBlock.dispose();
    output.set(outBuffer.subarray(0, blockShift));
  };
};

// src/DtlnProcessorNode.ts
var model1;
var model2;
var loadModel = async ({
  path,
  quant
}) => {
  if (!model1 || !model2) {
    const suffix = quant === void 0 ? "" : `_quant_${quant}`;
    const [_model1, _model2] = await Promise.all([
      loadTFLiteModel(`${path}model${suffix}_1.tflite`),
      loadTFLiteModel(`${path}model${suffix}_2.tflite`)
    ]);
    model1 = _model1;
    model2 = _model2;
  }
};
var createDtlnProcessorNode = (ctx, { channelCount = 2 }) => {
  if (!model1 || !model2) {
    throw new Error("loadModel() should be called before calling createDtlnProcessorNode");
  }
  const shiftCount = 2;
  const node = ctx.createScriptProcessor(blockShift * shiftCount, channelCount, channelCount);
  const processes = Array.from({ length: channelCount }, () => createProcess(model1, model2));
  node.addEventListener("audioprocess", ({ inputBuffer, outputBuffer }) => {
    for (let i = 0; i < shiftCount; i++) {
      const start = i * blockShift;
      const end = (i + 1) * blockShift;
      for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {
        const input = inputBuffer.getChannelData(channel);
        const output = outputBuffer.getChannelData(channel);
        const process2 = processes[channel];
        process2(input.subarray(start, end), output.subarray(start, end));
      }
    }
  });
  return node;
};

// src/aecProcess.ts
var createAecProcess = (model13, model23) => {
  const inputDetails1 = model13.inputs;
  const outputDetails1 = model13.outputs;
  const inputDetails2 = model23.inputs;
  const outputDetails2 = model23.outputs;
  let states1 = zeros(inputDetails1[2].shape, "float32");
  let states2 = zeros(inputDetails2[1].shape, "float32");
  const inBuffer = new Float32Array(blockLen);
  const inBufferLpb = new Float32Array(blockLen);
  const outBuffer = new Float32Array(blockLen);
  return (inputMic, inputLpb, output) => {
    if (inputMic.length !== blockShift) {
      throw new Error(`the length of inputMic must be ${blockShift}.`);
    }
    if (inputLpb.length !== blockShift) {
      throw new Error(`the length of inputLpb must be ${blockShift}.`);
    }
    if (output.length !== blockShift) {
      throw new Error(`the length of output must be ${blockShift}.`);
    }
    inBuffer.copyWithin(0, blockShift);
    inBuffer.set(inputMic, inBuffer.length - blockShift);
    inBufferLpb.copyWithin(0, blockShift);
    inBufferLpb.set(inputLpb, inBuffer.length - blockShift);
    const inBlockFft = rfft(inBuffer);
    const inMag = tidy(() => reshape(abs(inBlockFft), [1, 1, -1]));
    const lpbBlockFft = rfft(inBufferLpb);
    const lpbMag = tidy(() => reshape(abs(lpbBlockFft), [1, 1, -1]));
    lpbBlockFft.dispose();
    const res1 = model13.predict({
      [inputDetails1[1].name]: inMag,
      [inputDetails1[0].name]: lpbMag,
      [inputDetails1[2].name]: states1
    });
    inMag.dispose();
    lpbMag.dispose();
    states1.dispose();
    const outMask = res1[outputDetails1[1].name];
    states1 = tensor(res1[outputDetails1[0].name].arraySync());
    const estimatedBlockMasked = mul(inBlockFft, outMask);
    inBlockFft.dispose();
    outMask.dispose();
    const estimatedBlockTemp = irfft(estimatedBlockMasked);
    estimatedBlockMasked.dispose();
    const estimatedBlock = tidy(() => reshape(estimatedBlockTemp, [1, 1, -1]));
    estimatedBlockTemp.dispose();
    const inLpb = tidy(() => reshape(tensor(inBufferLpb), [1, 1, -1]));
    const res2 = model23.predict({
      [inputDetails2[1].name]: states2,
      [inputDetails2[0].name]: estimatedBlock,
      [inputDetails2[2].name]: inLpb
    });
    states2.dispose();
    estimatedBlock.dispose();
    inLpb.dispose();
    const outBlock = res2[outputDetails2[1].name];
    states2 = tensor(res2[outputDetails2[0].name].arraySync());
    outBuffer.copyWithin(0, blockShift);
    outBuffer.fill(0, -blockShift);
    addHead(outBuffer, outBlock.dataSync());
    outBlock.dispose();
    output.set(outBuffer.subarray(0, blockShift));
  };
};

// src/DtlnAecProcessorNode.ts
var model12;
var model22;
var loadAecModel = async ({
  path,
  units = 128,
  quant
}) => {
  if (!model12 || !model22) {
    const suffix = quant === void 0 ? "" : `_quant_${quant}`;
    const [_model1, _model2] = await Promise.all([
      loadTFLiteModel(`${path}dtln_aec_${units}${suffix}_1.tflite`),
      loadTFLiteModel(`${path}dtln_aec_${units}${suffix}_2.tflite`)
    ]);
    model12 = _model1;
    model22 = _model2;
  }
};
var createDtlnAecProcessorNode = (ctx) => {
  if (!model12 || !model22) {
    throw new Error("loadModel() should be called before calling createDtlnProcessorNode");
  }
  const inputChannelCount = 2;
  const outputChannelCount = 1;
  const shiftCount = 2;
  const node = ctx.createScriptProcessor(blockShift * shiftCount, inputChannelCount, outputChannelCount);
  const processes = Array.from({ length: inputChannelCount / 2 }, () => createAecProcess(model12, model22));
  node.addEventListener("audioprocess", ({ inputBuffer, outputBuffer }) => {
    for (let i = 0; i < shiftCount; i++) {
      const start = i * blockShift;
      const end = (i + 1) * blockShift;
      for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {
        const inputMic = inputBuffer.getChannelData(2 * channel);
        const inputLpb = inputBuffer.getChannelData(2 * channel + 1);
        const output = outputBuffer.getChannelData(channel);
        const process2 = processes[channel];
        process2(inputMic.subarray(start, end), inputLpb.subarray(start, end), output.subarray(start, end));
      }
    }
  });
  return node;
};
export {
  createDtlnAecProcessorNode,
  createDtlnProcessorNode,
  loadAecModel,
  loadModel,
  sampleRate,
  setup
};
/*!
 * Model files license
 * Copyright (c) 2020 Nils L. Westhausen
 * https://github.com/breizhn/DTLN-aec/blob/master/LICENSE
 */
/*!
 * Model files license
 * Copyright (c) 2020 Nils L. Westhausen
 * https://github.com/breizhn/DTLN/blob/master/LICENSE
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=index.mjs.map